%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86d Copyright 1999 Radical Eye Software
%%Title: paper.dvi
%%Pages: 17
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/local/tex/bin/dvips -o paper.ps paper.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.08.12:1613
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (paper.dvi)
@start
%DVIPSBitmapFont: Fa cmtt9 9 22
/Fa 22 120 df<007FB512F8A2B612FCA26C14F8A21E067C9927>45
D<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A728927>I<1538157815FCA21401
15F8140315F0140715E0140F15C0141F1580143F1500A25C147E14FE5C13015C13035C13
075C130F5CA2131F5C133F91C7FC5B137E13FE5B12015B12035BA212075B120F5B121F5B
123F90C8FC5A127E12FE5AA21278A21E3A7CB327>I<121E123FEA7F80EAFFC0A4EA7F80
EA3F00121EC7FCAC121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A20729F27>58
D<3803FFC0000F13F04813FC487F487F819038807FC0383F001F001E6D7E000C1307C7FC
EB1FFF90B5FC12075A5A383FFC07EA7FC0EAFF0012FCA3140F7E007F133FEBC0FF6CB612
806C15C07E6C13F36C13C1C69038007F8022207C9F27>97 D<EA7FE0487EA4127F1203A8
EC7F809038F1FFE001F77F90B57E8181EC81FF9039FE007F8001F8133FED1FC049130FA2
16E01507A6150F6D14C0151F7FED3F806D137F9039FF83FF00ECFFFE5D5D01F75BD801F3
13C0D800E090C7FC232E7FAD27>I<EB0FFE90387FFF8090B512C0000314E04814F05A38
1FF80F9038E007E0393F8003C0397F00018091C7FC127E12FE5AA67E007E14F0007FEB01
F8A2383FC003D81FE013F0EBFC0F6CB512E06C14C06C1480C614006D5AEB0FF01D207B9F
27>I<EC3FF04A7EA4143F1401A8EB1FE1EB7FF93801FFFD4813FF5A5A381FF83F383FC0
07EB8003EA7F001401127E12FE5AA67E007E1303A2007F1307EA3F80EBC00F381FF03F6C
B612C06C15E06C13FD6C13F96C13F1D91FC013C0232E7EAD27>I<EB0FF8EB3FFE90B512
804814C04814E04814F0390FF80FF8381FE003393F8001FC48C7FCA2007E14FEB6FCA515
FC00FCC8FC7E007E143C007F147E6C7E6D13FED81FF013FC380FFE036CB512F86C14F06C
14E06C14C0013F1300EB07FC1F207D9F27>I<EA7FE0487EA4127F1203A8147F9038F1FF
C001F77F90B57E81A2EC81FCEBFE005B5BA25BAF3A7FFF81FFE0B500C313F014C7A214C3
6C018113E0242E7FAD27>104 D<130F497E497EA46D5A6DC7FC90C8FCA7383FFF80487F
A47EEA000FB3A2003FB512E04814F0B612F8A26C14F06C14E01D2F7BAE27>I<EA3FE048
7E12FFA2127F123F1201A891383FFF804A13C016E0A216C06E1380913807E0004A5A4A5A
4AC7FC147E5CEBF1F813F3EBF7FCEBFFFE14BE143F496C7E496C7EEBF80701F07F6E7E6E
7E6E7EA23A3FFF81FFE04801C313F0B500E313F8A26C01C313F06C018113E0252E80AD27
>107 D<387FFF80B57EA47EEA000FB3B0007FB512F8B612FCA46C14F81E2E7CAD27>I<39
7F07C01F3AFF9FF07FC09039FFF9FFE091B57EA26C81390FF87FE19038E03F8001C01300
A3EB803EAF3A7FF07FC1FF27FFF8FFE3138001F913E7A201F813E3277FF07FC113002920
819F27>I<387FE07F39FFF1FFC001F77F90B57E817E0003EB81FCEBFE005B5BA25BAF3A
7FFF81FFE0B500C313F014C7A214C36C018113E024207F9F27>I<EB1FE0EB7FF83801FF
FE487F4814804814C0391FF03FE0393FC00FF0EB8007397F0003F8007E1301A248EB00FC
A76C1301007E14F8007F1303A2393F8007F0EBC00F391FF03FE06CB512C06C14806C1400
6C5B38007FF8EB1FE01E207C9F27>I<397FE07F8039FFF1FFE001F77F90B57E816C8000
03EB81FF9039FE007F8001F8133FED1FC049130FA216E01507A6150F6D14C0151F7FED3F
806D137F9039FF83FF00ECFFFE5D5D01F75B01F313C001F090C7FC91C8FCAB387FFF80B5
7EA46C5B23317F9F27>I<393FFC03FC397FFE0FFF00FF013F13804A13C0007F90B5FC6C
B6FC39007FFE1F9138F80F809138E002004AC7FC5CA291C8FCA3137EAB003FB57E4880B6
FCA27E6C5C22207E9F27>114 D<9038FFF3800007EBFFC05A5A5A5A38FF801F38FE000F
5AEC07806C90C7FCEA7F8013FC383FFFE06C13FC000713FF00011480D8000F13C0903800
7FE0140F0038EB03F0127C12FC7E6C13079038C03FE090B5FC15C01580150000FB13FC38
707FF01C207B9F27>I<131C133E137EA7003FB512F04814F8B6FCA36C14F0D8007EC7FC
AB1518153C157EA4017F13FE15FCEB3FC3ECFFF86D13F06D13E06D13C06D1380903800FE
001F297EA827>I<397FE01FF8486C487EA4007F131F00031300B114011403EBF80F90B6
12E06C15F07E7FEB3FFC90391FF07FE024207F9F27>I<3A3FFC03FFC0486C4813E0B548
13F0A26C486C13E06C486C13C03A0F80001F00A26D5B0007143EA414F8EBC1FC3903E3FE
7CA4EBE7DEA20001EBDF78A213F7A2148F01FF13F86C5CA2140F140790387E03E024207F
9F27>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi9 9 1
/Fb 1 77 df<0107B512E049805E9026001FE0C7FC5D4A5AA44AC8FCA414FEA4495AA449
5AA4495AA4495AA21718171C49481438A21770A2495A17E0A2160149C7EA03C0A21607EE
0F8001FE143F16FF000102071300007FB7FCB75AA22E337DB234>76
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi6 6 1
/Fc 1 85 df<000FB612FEA33A1FC01F807E3A1E003F001E121C003C151C1238147E5AA3
48491338C71400A3495AA4495AA4495AA4495AA3000FB57EA292C7FC27227EA124>84
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy9 9 1
/Fd 1 66 df<17075F5F5F5F5FA25EA25EA25E83160F161EA2163CA21678167016F016E0
030180ED03C0A2923807803FA2ED0F00151EA25D157C15785D14015D4A5ADA07DFB57E92
B6FC5C5CA2023CC7121F147C4A8100105BEA3001267803E0140F387C07C0267F0F8081B5
176091C8EBF9E049923807FFC06C48178049EEFE006C48ED03F8D81FC0ED01E0D8078092
C8FC3B3A7EB53D>65 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmti7 7 6
/Fe 6 121 df<EB0F80EB7FE0EBF0F73803E07F48487EEA0F80497E5A48133E123E127E
A2485BA4485B1570A3903801F0E01303EA7807393C0EF1C0011C1380391FF87F003807E0
1E1C1B799923>97 D<EA01E0EA3FF05BA21203A2485AA4485AA4381F1F80EB7FE0EBF0F0
EBC078EA3F80EB007C123EA248137EA44813FCA438F001F8A214F0EB03E0A2EB07C00070
138038780F00EA3C3EEA1FF8EA07E0172978A720>I<EB07F0EB3FFCEBFC1E3801F00F38
03C01F3807803F120F381F003E5A003E1300127EA25AA45AA31404140E0078131E007C13
3C003C13F8381F03E03807FF803801FC00181B799920>I<EB07E0EB3FF8EBF81C3801E0
0EEA07C0EA0F80EA1F00A248131C007E1338EB03F0387FFFC038FFFE0000FCC7FCA45AA2
14040078130E007C131E003C133C6C13F8380F03E03807FF803801FC00171B799920>
101 D<1338137CA25BA4485AA4485A387FFFC0B5FC14803807C000A4485AA448C7FCA412
3EEB0380A2EB0700127C130E130CEA3C1C5BEA1FE0EA07C012267AA417>116
D<90387C07C03901FF1FE0390787B870390E03F078000C14F8001C13E1123815F0397007
C0E015001200A2495AA449C7FC15701238007C14E0EAFC3EEC01C012F839F07F03803970
EF0F00383FC3FC381F01F81D1B7C9920>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr5 5 1
/Ff 1 44 df<14E0B0B712C0A3C700E0C7FCB022237C9B2B>43 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmex10 10 1
/Fg 1 88 df<00381707007CEF0F8000FEEF1FC0A26C173F6C1880A26D167F003F1800A2
6D5E001F5FA26D1501000F5FA26D150300075FA26D150700035FA26D150F00015FA26D15
1F00005FA26D153F6D5EA26E147F013F93C7FCA26E5C011F5DA26E1301010F5DA26E1303
01075DA26E130701035DA26E130F01015DA26E131F01005DA26E133F6E5CA2ED807F023F
91C8FCA26F5A021F5BA215E1020F5BA215F302075BA215FF6E5BA36E5BA36E5BA36F5AA3
6FC9FC81150E3A537B7F45>87 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy7 7 5
/Fh 5 106 df<0060140600F0140E0078141E6C143C6C14786C14F039078001E03903C0
03C03901E007803900F00F00EB781E6D5A6D5A6D5A6D5A6D5A497E497EEB1E78497E497E
497E3901E007803903C003C039078001E048C712F0001E147848143C48141E48140E0060
14061F1F769D34>2 D<1338A50060130C00F8133E00FC137E00FE13FE383FBBF83807FF
C000011300EA007C48B4FC000713C0383FBBF838FE38FE00FC137E00F8133E0060130C00
001300A517197B9A22>I<13E0EA01F0EA03F8A3EA07F0A313E0A2120F13C0A3EA1F80A2
1300A25A123EA35AA3127812F8A25A12100D1E7D9F13>48 D<49B5FC130F133F01FEC7FC
EA01F0EA03C0485A48C8FC121E121C5AA25AA35AA3B7FCA300E0C8FCA31270A37EA27E12
1E7E6C7E6C7EEA01F0EA00FE013FB5FC130F130120277AA12D>50
D<12C07EA21270A27EA27EA37EA27EA2EA0380A3EA01C0A2EA00E0A21370A31338A2131C
A2130EA3131CA21338A21370A313E0A2EA01C0A2EA0380A3EA0700A2120EA25AA35AA25A
A25AA25A0F3B7CAB1B>105 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi7 7 21
/Fi 21 123 df<ED01C00003EC03E048EC07F0A2120E48140315015AED00E048137014F0
803AE001F001C0A39138E00380A29138C0070001035B00F0140E0107133E39F81FE07C00
7FB55A01FD5BD83FF85B6C486C5A260FC03EC7FC241B7E992A>33
D<1238127C12FE12FFA2127F123B1203A31206A3120C121812381270122008127A8614>
59 D<4AB41308020FEBE038027FEBF078903A01FF8078F0903903F8001DD90FE0130FEB
1F8049C7EA07E0137E491403485A484815C0485A120F5B001F16805B003F92C7FCA248CA
FCA4127E00FE91383FFFE05DA2923800FC00127EA3007F4A5A7EA26C7E6C6C495A6C6C13
07D803F8130F6CB4137E6C9038FFF860013FEBE020010790C8FC2D2A7DA834>71
D<D97FF0903807FFE0808001039138007E006E1438A2D9077F5C8081141F010E6D5B140F
811407011C6D485A1403A2EC01F801384A5AEC00FCA2157E494AC7FC153FA2ED1F874914
8EED0FCEA2ED07EE484814FC1503A2150148485C1500EA0FC0D8FFFC1478167016303328
7CA735>78 D<017FB512F016FEEEFF80903A03F0003FC0EE0FE01607494814F01603A349
481307A317E04948130F17C0EE1F80EE3F0049C712FEED03F891B512E01680017EC9FCA4
5BA4485AA4485AA3B57EA32C287CA72A>80 D<4AB4FC021F13E091387F01F8903901F800
7ED907E07F4948EB1F8049C7EA0FC0017E14074915E0485AEE03F0485A485A120F4915F8
121F5B123F17F048C81207A4007EED0FE012FE17C0161F1780163F007E1600167E16FE6C
017C5B9138FE01F83A1F018303F09039830387C03A0FC6018F80D807E601BFC7FCD803F6
13FC3900FE07F090393FFFC006EB07FD90390001E00E5EEDF07CEDFFF8A25E6E5B5E6F5A
033EC7FC2D347DA834>I<91381FE0189138FFFC380103EBFE78903907E03FF090380F00
0F011E13035B49EB01E0137013F0A2000115C0A292C7FC7F7F6CB47E14F86DB47E6D13F0
6D7F01077F01007F1407EC00FF153F81A281121CA2003C141EA2151C153C007C5C007E5C
397F8003E09038F00FC000F3B5C7FC00E05B38C01FF0252A7CA829>83
D<000FB712C017E04816C09039800FC00FD81E0014035A0038EB1F80A2481680A2EC3F00
5AA2481600C7007E90C7FCA45CA4495AA4495AA4495AA4495AA3000FB57E48806C5C2B28
7DA727>I<EB07F0EB3FFCEBFC1E3801F00F3803C01F3807803F120F381F003E5A003E13
00127EA25AA45AA31404140E0078131E007C133C003C13F8381F03E03807FF803801FC00
181B7D991E>99 D<EB07E0EB3FF8EBF81C3801E00EEA07C0EA0F80EA1F00A248131C007E
1338EB03F0387FFFC038FFFE0000FCC7FCA45AA214040078130E007C131E003C133C6C13
F8380F03E03807FF803801FC00171B7D991F>101 D<130E131F5BA2133E131C90C7FCA7
EA03E0487EEA0C78EA187C1238123012705B12E0A2EA01F0A3485AA2485AA2EBC380EA0F
83A2381F0700A2130EEA0F0C131CEA07F06C5A11287DA617>105
D<1407EC0F80141FA21500140E91C7FCA7EB03E0EB07F8EB1E3C1318EB303E137013E0A2
48485AA2C7FCA25CA4495AA4495AA4495AA4495AA21238D87C1FC7FC12FC133E485AEA70
F8EA7FE0EA1F80193380A61B>I<133CEA07FE5BA2EA007CA25BA4485AA43903E00780EC
1FC0EC38E014613807C0C3EBC187EBC30701C613C0390F8C038001B8C7FC13E07FEA1FFE
EB3F80EB0FC06D7EEA3E0315E0A3007CEBC1C0A2158014C339F801E700EB00FE0070137C
1B297CA723>I<1378EA07FCEA0FF8A21200A2EA01F0A4EA03E0A4EA07C0A4EA0F80A4EA
1F00A4123EA45A1338A3EAF870A21360EA78E013C0EA3F80EA0F000E297EA715>I<3B07
801FC007E03B0FE07FF01FF83B18F0E0F8783C3B38F1807CE03E3B30FF007DC01ED870FE
EB3F80491400153ED8E1F8017E133E49137C1201A24848495BA35F4848485A1870EE01F0
A23C0F8003E003E0E0A2EFE1C004011380271F0007C013E3933800FF00000E6D48137C34
1B7D993B>I<EB07F0EB3FFEEB7C1F3901F00780D803C013C000071303D80F8013E0EA1F
005A123E007E14F015E0481307A315C048130F1580A2EC1F00143E007C133C5C6C485A38
1F07E03807FF80D801FCC7FC1C1B7D9921>111 D<9038F007E03901FC1FF039031E787C
0007EBE03E39061FC01E000EEB801F1400A2D81C3E1480A212001600495BA3153E49137E
A2157C5D12014A5A4A5A6D485A2603EE0FC7FCEBE7FEEBE1F001E0C8FC485AA4485AA2EA
7FF812FFA22125809922>I<3807807E390FE1FF803818F3C33938F703C03830FE073870
FC0FA201F8138039E1F0070091C7FC1201A2485AA4485AA4485AA448C8FCA2120E1A1B7D
991F>114 D<EB0FE0EB7FF8EBF03C3801C01E12033807803EA2143C000F1318EBE0006C
B4FC14C06C13E06C13F06C13F813071301EA3C00007E1378A24813F05A387001E0EB03C0
383C0F80381FFE00EA07F8171B7C991F>I<131C133EA25BA45BA4485A387FFFE0B5FC14
C03803E000A4485AA4485AA448C7FC14E0A2EB01C0123EEB0380EB0700EA1E0EEA1F1CEA
0FF8EA03E013267EA419>I<90383E01C0137F9038FF838048EBC7004813FF380781FEEB
001C00065BC75A5C495A495A49C7FC130E133C13705B3901C00380EA0380390700070000
0E5B381FF81EEBFFFE38383FFC486C5A486C5AEB07C01A1B7D9920>122
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmss10 10 2
/Fj 2 72 df<B712F0A690C9FCB3A290B6FCA690C9FCB3A8243A79B92F>70
D<913803FF80023F13F891B512FE0103ECFFC04915E05B90383FFE00D97FF0EB1FC0D9FF
C013074A13034890C7120148481400484815005B120F5B485AA2485AA3485AA448CAFCA9
92383FFFF0A36C7EA3ED00076C7EA36C7EA26C7E7F12077F6C7E6C7E6C7F80D97FF0130F
D93FFE13FF010FB6FC7F6D15C001001500023F13F8020313802C3E7BBB37>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmtt10 10 34
/Fk 34 122 df<007FB6FCA2B71280A26C1500A221067B9B2C>45
D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B708A2C>I<EB01FC90380FFF
80497F017F13F090B57E488048EB07FEEBFC0148486C7E4848EB7F8049133F4848EB1FC0
A24848EB0FE0A348C7EA07F0A400FEEC03F8AC6C14076C15F0A36D130F003F15E0A26D13
1F001F15C06D133F000F15806D137F6C6CEBFF006C6C485AEBFF076CEBFFFC6C5C6D5B01
1F13C06D5BD901FCC7FC25357DB32C>48 D<EB0380497E130FA2131FA2133F137F13FF12
03127FB5FCA213DF139FEA7E1F1200B3AC003FB512E04814F0B612F8A26C14F06C14E01D
3478B32C>I<EB0FF8EB7FFF48B512C04814F048804880391FF01FFE393FC003FF4848C6
138090C7127F48EC3FC048141F6C15E0A2150FA2127E123CC8FCA2151F16C0A2153F1680
ED7F005D4A5A4A5A4A5A4A5A4A5A4A5A4A5A4AC7FCEB03FE495A495AEB1FE0495A495A48
48C8FCD803FCEB07C04848EB0FE0485A485A48B6FC5AB7FCA27E6C15C023347CB32C>I<
003FB612F84815FCB7FCA27E7E3903F80001A7ED00F81600A315F84A7EA490B5FCA6EBF8
01A46E5A92C7FCA3163E167FA8003FB7FC5AB8FCA27E6C15FE28337FB22C>69
D<003FB512E04814FCB67EEDFF806C15C06C15E03803F800ED1FF0150FED07F8150316FC
1501A7150316F81507ED0FF0151FEDFFE090B6FC16C01680EDFE005D15E001F8C8FCAE38
3FFF80487FB57EA26C5B6C5B26337FB22C>80 D<EB7FFF0003B512E0000F14F848804880
A2EBF007397FC001FF497E90C77EA348158048143FB3A7EB03F8A200FFEBFC7F007F1500
EB01FEA20180B5FC7F393FF07FFE90B5FCA26C5C6C5C000314E0C67E9038000FF0A26E7E
A26E7EA26E7EA28180157E21407BB32C>I<90381FF80790397FFF0F8048B5129F4814FF
5A5A381FF01F383FC00348487E90C7FC48147F5AA2153FA36CEC1F0092C7FC6C7E7FEA3F
F06CB4FC6C13F06C13FF6C14E06C806C80011F7F01017F9038001FFF02011380EC007FED
3FC0151F16E0A2003C140F127E12FEA36C141F16C0A201C0EB3F806D137F9039FE03FF00
90B55A5D5D00FD5CD8F83F13C0D8700790C7FC23357CB32C>83 D<003FB612FC4815FEB7
FCA439FE00FE00A7007C157CC71400B3AD90383FFFF8497F90B57EA26D5B6D5B27337EB2
2C>I<387FFFFCB512FEA414FC48C7FCB3B3B1B512FC14FEA46C13FC17416FB92C>91
D<387FFFFCB512FEA47EC7FCB3B3B1EA7FFFB5FCA46C13FC17417DB92C>93
D<3801FFF0000713FE486D7E48804880819038C01FF8391F8007FC380F0001000680C8FC
A2140FEB07FF137F48B5FC12075A4813F8383FFC00EA7FE0EAFF8090C7FC5AA36C1301A2
387F8007383FE03F90B612FC6C15FE7E6C143F0001EBFC1F3A007FC00FFC27247CA32C>
97 D<EA3FF8487E12FFA2127F123F1201A9EC0FF0EC7FFE01FDB5FC90B6128016C016E0
9138F03FF09138C00FF891380003FC5BED01FE491300A216FF167FA816FF6D14FE15017F
ED03FC91388007F8ECC00F9138F03FF091B512E016C001FD148001FC14000000EB7FFC90
38780FF0283380B22C>I<903803FFF0011F13FC017F7F90B6FC4815805A48EB007FD80F
F8EB3F00D81FE0131E4848130C4990C7FC127F90C9FCA25A5AA67E7EA26DEB0F806C6CEB
1FC07F6C6C133FD80FFCEB7F803907FF81FF6C90B512006C5C6C5C6D5B011F13E0010390
C7FC22247BA32C>I<EC07FF4A13805CA28080EC003FA9EB0FF8EB3FFE90B512BF4814FF
5A5A380FFC0F381FF00349C6FC4848137F485A153F90C7FC5A5AA87E6C147FA26D13FF6C
7E5C381FF007380FFC1F6CB612FC6C15FE6CECBFFF6C143FD97FFC13FE90390FF01FFC28
337DB22C>I<EB03FE90381FFFC0017F13F090B57E488048803907FE03FF260FF8001380
D81FE0137F4848EB3FC049131F127F90C713E0150FB7FCA516C048C9FC7E7E7FED07C06C
6CEB0FE07F6C6C131FD80FFCEB3FC03907FF80FF6C90B512806C15006C5C013F13F8010F
5B0101138023247CA32C>I<EC07F8EC3FFCECFFFE497F4914805B90380FF87F9138E03F
00011F131E4AC7FCA6003FB512FE4880B7FCA36C5C26001FC0C7FCB3A6007FB512F0B67E
A46C5C21337DB22C>I<ED03F0903907F81FFC90391FFE3FFE017FB5FC90B7FC5A48ECFE
7F3A07FE1FF87ED9F003133C000FECFC00EBE001001F80EBC000A5EBE001000F5CEBF003
00075CEBFE1F90B55A5D485C5DD9DFFEC7FCEBC7F801C0C8FCA27F6CB512E015FE6CECFF
80000F15C04815E04815F09039C0003FF848C7EA03FC007E140000FE15FE48157EA46C15
FE007E15FCD87F801303D83FE0EB0FF8D81FFEEBFFF06CB612E06C15C06C1580C6ECFE00
013F13F80103138028387EA42C>I<EA3FF8487E12FFA2127F123F1201A9EC07F8EC3FFE
91B5FC01FD8090B67E82ECF81F9138C00FF0EC800714005BA35BB13B3FFFE03FFF80486D
4813C0B56CB512E0A26C496C13C06C496C13802B3380B22C>I<EB0380497E497E497EA3
6D5A6D5A6D5A90C8FCA7383FFFE0487FB5FCA27E7EEA0007B3A6007FB512FCB612FE15FF
A215FE6C14FC20347AB32C>I<383FFFF0487FB5FCA27E7EEA0003B3B3A3003FB6128048
15C0B712E0A26C15C06C158023337CB22C>108 D<3A3FC1F803F03A7FE7FC0FF8B538FE
3FFC6E487E6C91B5FC7E3B07FE1FFC3F8001FC13F89039F80FF01F01F013E0A301E013C0
B2D83FFC01F813F03B7FFE1FFC3FF8B5393FFE7FFCA23B7FFE1FFC3FF83B3FFC0FF81FF0
2E2481A32C>I<393FF807F8397FFC3FFE00FF90B5FC01FD806CB67E6C810001EBF81F91
38C00FF0EC800714005BA35BB13B3FFFE03FFF80486D4813C0B56CB512E0A26C496C13C0
6C496C13802B2480A32C>I<EB07FCEB1FFF017F13C048B512F048804880390FFC07FE39
1FF001FF497E4848EB7F8049133F48C7EA1FC0A300FEEC0FE0A76C141F6C15C0A26D133F
003F15806D137F6C6CEBFF00EBF803390FFE0FFE6CB55A6C5C6C5C6C6C13C0011F90C7FC
EB07FC23247CA32C>I<393FF80FF0397FFC7FFED8FFFDB5FC90B612806C15C06C15E000
019038F03FF09138C00FF891380003FC5BED01FE491300A216FF167FA816FF6D14FE1501
7FED03FC91388007F8ECC00F9138F03FF091B512E016C001FD148001FC1400EC7FFCEC0F
F091C8FCAC383FFFE0487FB57EA26C5B6C5B283680A32C>I<903907F80F8090393FFF1F
C049139F48B512DF4814FF5A380FFE07381FF801EBE0004848137F5B007F143F90C7FC15
1F5A5AA77E6C143F7F157F6C7E6C6C13FFEBF003380FFC0F6CB6FC7E6C14DF6C149F9038
3FFE1FEB0FF890C7FCAC0207B5FC4A1480A46E140029367DA32C>I<D83FFFEB3FC04890
3881FFE0B5008713F0028F13F86C019F13FC6C13BF39003FFFE3ED01F89138FC00F04A13
604A1300A25CA25CA35CAD003FB512F04880B6FCA27E6C5C26247EA32C>I<90383FF870
0003B512F85A5A5A5A387FC01F38FF000700FC1303A36CEB01F06C6CC7FCEA7FFC383FFF
F06C13FF6C14C06C14E0C614F0010F13F89038007FFCEC03FE003CEB00FF007E143F12FE
7EA26D137F6D13FEEBF00790B512FC15F815F015E000F8148039701FFC0020247AA32C>
I<130F497E133FA8003FB6FC481580B7FCA36C150026003F80C7FCAFED0380ED07C0ED0F
E0A3151F02C013C0011F133F9138F07F806DB5FC16006D5B6D13F801005BEC3FC0232E7E
AD2C>I<D83FF8EBFFE0486C487F00FF5BA2007F7F003F7F00011407B3A2150FA2153F01
FF13FF6C90B6128017C06D15E07F6D01E713C00103010313802B2480A32C>I<3A7FFF01
FFFCB5008313FE14C7A214836C010113FC3A03F0001F806D133F00011500A26D5B000014
7EA26D13FE017E5BA36D485AA31483011F5BA214C7010F5BA3903807EFC0A214FF6D5BA3
6D90C7FCA26D5A27247EA32C>I<3A3FFF80FFFE4801C17FB51580A26C16006C01805B3A
07E00003F0A66C6C495AA2147FECFF87A3D801F1EBC7C0A201F913CF14F7A301FB13EF00
0001E35BA401FF13FF14C1017F91C7FCA3148090383F007E29247FA32C>I<3A3FFF01FF
FC48018313FEB512C7A26C13836C010113FC3A03F8001F800001143F6D140012005D6D13
7E137EA2017F5B7FA2EC81F8131FA2EB0FC1ECC3F0A2EB07E35D14E71303ECF7C0130114
FF5D7FA292C7FC80A2147EA314FE5CA21301000C5BEA3F03387F87F0138F495AEBFFC0A2
6C5B6C48C8FC6C5AEA07F027367EA32C>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmbx10 10 45
/Fl 45 124 df<EA0F80EA1FE0EA3FF0EA7FF812FF13FCA213FEA3127F123F121FEA0FDE
EA001E133E133CA31378A213F0120113E0EA03C01207EA0F80EA1F00120E12040F1E7AB9
1B>39 D<EA0780EA1FE0EA3FF0EA7FF8A2EAFFFCA4EA7FF8A2EA3FF0EA1FE0EA07800E0E
7A8D1B>46 D<49B4FC010F13E0017F13FC90B57E48EB83FF4848C613804848EB7FC04848
EB3FE049131F001F15F0A2003F15F849130FA2007F15FCA500FF15FEB3007F15FCA4003F
15F8A26D131F001F15F0A2000F15E06D133F6C6CEB7FC06C6CEBFF802601FF8313006CEB
FFFE6D5B011F13F0010190C7FC27387CB630>48 D<143C14FC1301130F137FB5FCA4139F
EA001FB3B3A4007FB61280A5213779B630>I<EB0FFC90387FFFC048B512F0000714FC48
80391FC03FFF263F800F1380267FC00313C06D6C13E0EAFFF06D6C13F0A2157F16F8A26C
5A6C5A6C5A6C5AC8FC16F015FF16E0A24A13C016804A13005D4A5A4A5A4A5A4A5A5D4AC7
FC14FE495AD903F013F8495A495A495A90383E00014914F05B4848130348B6FC5A5A5A5A
5AB712E0A525377BB630>I<EB03FF011F13F0017F13FC90B57E3901FE07FF2603F00113
80D807E014C0260FF80013E07F486C14F0A6000F15E06C5A6C485AD801E014C0C714805C
16004A5AEC3FF890380FFFF015C015F015FE90380007FF020113C06E13E0ED7FF016F8A2
ED3FFCA2D80FC014FEEA3FF0487EA2487EA316FCA25B007FEC7FF85B6C48EBFFF06C4848
13E0260FF80713C06CB612806C1500C614FC013F13F0010790C7FC27387CB630>I<ED0F
C0151F153FA2157F15FF5C5CA25C5C5CA2143E147E5C495A5C495A1307495A495A5C133E
137E5B485A5B1203485A485A5B48C7FC5A127E5AB81280A5C70001EBC000A90103B61280
A529377DB630>I<EA0780EA1FE0EA3FF0EA7FF8A2EAFFFCA4EA7FF8A2EA3FF0EA1FE0EA
0780C7FCA9EA0780EA1FE0EA3FF0EA7FF8A2EAFFFCA4EA7FF8A2EA3FF0EA1FE0EA07800E
257AA41B>58 D<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F7020380
15E715E302078015C1020F801580A2021F80ED007F4A80023E133FA2027E80027C7F02FC
814A7FA20101824A7F49B77EA34982A290270FC000017F4A7FA2011F8291C8127F498201
3E153FA2017E82017C81B500F8010FB61280A5413A7DB948>65 D<DB3FFC14C00203B5EA
C003021FECF00791B6EAFC0F0103EDFE1F499039FC00FFBF011F01C0EB1FFF4948C71207
D97FF8804948804849804849157F4849153F91C9FC48171F485A180F123F5B1807127FA2
5B95C7FC12FFAB127FA26DEE07C0A2123FA27F001FEF0F80A26C7E6CEF1F00806C6D153E
6C6D157E6C6D5D6D6C4A5AD93FFEEC07F090261FFFC0EB1FE0010701FCEBFFC06D90B6C7
FC01005D021F14F8020314C09126003FFEC8FC3A3B7BB945>67 D<B87E17F817FF18C018
F028007FFC00077F9338007FFEEF1FFF050713807113C0837113E019F0187F19F8183F19
FC181FA219FEA419FFAC19FEA419FC183FA219F8187F19F0F0FFE05F4D13C04D1380051F
1300EF7FFE933803FFFCB912F018C095C7FC17FC178040397DB849>I<B912F0A528007F
FC000113F8EE003F170F17071703A21701A21700A2163E18FC187CA4047E1300A216FE15
0391B5FCA5ECFC031500167E181F163EA2183EA493C7127EA2187C18FCA21701A21703EF
07F8170F173FEE03FFB9FCA218F0A338397DB83F>I<B77EA526007FFCC9FCB3AAEF0F80
A5171F1800A35FA35F5FA25E16075EEE7FFEB8FCA531397DB839>76
D<B500FC0407B512F06E5E6E5EA3C66C6D4BEBE000A2017D6D157DA2017C6D15F9A36E6C
EC01F1A26E6CEC03E1A26E6CEC07C1A36E6CEC0F81A26E6CEC1F01A26E6D133EA36E6D13
7CA26E6D13F8A292397FF001F0A392393FF803E0A292391FFC07C0A292390FFE0F80A392
3907FF1F00A26F13BEA26F13FCA36F5BA2705AA2705AB500FE0303B612F0A2EE1FC0A2EE
0F8054397DB85B>I<B500FE0207B512F080A28181C66C6D90390003E0008181A2017D7F
017C7F6E7E6E7F6E7FA26E7F6E7F6E7F6E7F6E7FA26F7E6F13806F13C06F13E06F13F0A2
6F13F86F13FC6F13FEEE7FFF701383A27013C37013E37013F37013FB7013FFA282838383
83A283838383187FA2183FB500FE151F180F18071803A244397DB84B>I<B8FC17F017FE
8318C028007FFC000713E0040113F09338007FF8EF3FFCA218FE171FA218FFA718FEA217
3F18FCA2EF7FF8933801FFF0040F13E091B71280180017FC17E002FCC9FCB3A2B612FEA5
38397DB841>80 D<B712FCEEFFE017FC17FF18C028007FFC000F7F04017F706C7E717EA2
717EA284A760173F604D5A4D5A4C5B040F5B91B7C8FC17FC5F17FE913AFC003FFF80040F
7F707F82707FA2707FAB1AE0F101F0A2EF7FFC1AE0B600FE90383FFE0394381FFF0771EB
FFC00503148005001400CBEA0FFC443A7DB848>82 D<D903FF1306013FEBE00E90B5EAF8
3E48ECFE7E48ECFFFE3807FE01390FF0003F4848130F484813031501485A1500167E12FF
A2163E7F7F7F6D91C7FCEBFF806C13F8ECFFC015FC6C14FF6C8116E06C816C816C816C81
6C7E011F801307D9003F14801403EC001F030713C0818100788012F8167FA36C1680A27E
EEFF007E6D5C01E0130101F8495A9039FF801FF891B55A00FC5DD8F83F1480D8E00749C7
FC39C0007FF02A3B7BB935>I<003FB91280A5267FF801D9F00313C001E015000180163F
0100161FA2007E170FA2007C1707A400FC18E0481703A4C793C7FCB3AC011FB7FCA53B38
7DB742>I<EAFFFCA5EAF800B3B3B3B3EAFFFCA50E5376BD1B>91
D<EAFFFCA5EA007CB3B3B3B3EAFFFCA50E537EBD1B>93 D<EB3FFE0003B512E04814F848
80391FF007FE393FF801FF6E7F82157F6C4880A26C5AEA0380C8FCA291B5FC130F90B6FC
0003EBF87F481380381FFC00485A5B485A485AA515FF6C6C5A6C6C487F903AFC0FBFFFC0
6CB5123F0007497E6CEBF80F39007FC0032A257DA42E>97 D<13FFB5FCA512077EAEEDFF
80020F13F8023F7F91B6FCDAFE031380DAF00013C002C0EB3FE04A14F091C7121F17F8A2
EE0FFCA317FEA917FCA3EE1FF8A217F06EEB3FE06E137F02F0EBFFC09026FDFC07138001
F8B5EAFE00023F5BD9F00F13F0D9E00190C7FC2F3A7EB935>I<903801FFC0010F13FC01
7F7F90B6FC48018013802607FE0113C0EA0FFC13F8EA1FF0003F6D1380A24848EB7F0015
1C92C7FC12FFA9127F7FA2123F6DEB03E0121F6C6CEB07C07F6C6CEB0F8000019038E03F
006CEBFFFE6D5B010F13F00101138023257DA42A>I<EE7F80ED7FFFA5150381AEEB03FF
011F13F1017F13FD48B7FC48EBC07F3907FE000F48487F484813015B123FA2485AA312FF
A9127FA36C7EA2121F6D5B000F140FD807FE4913C06C6C6CB512FE6CEBFFFD6C6C13F901
1F13C1903803FE012F3A7DB935>I<49B47E011F13F0017F13FC90B57E0003903881FF80
3907FE007F4848EB3FC04848EB1FE05B003FEC0FF0A2485A16F8150712FF90B6FCA401E0
C8FCA4127FA27F123F16F86C7E6C6C13016DEB03F06C6CEB07E00001EBE01F6C90B51280
013F1400010F13FC010013C025257DA42C>I<EC0FF8ECFFFC010713FF491480EB3FF8D9
7FE113C0EBFFC114815A1401486D1380ED7F00153E92C7FCA8B6FCA5000390C8FCB3A9B5
12FEA5223A7DB91D>I<163FD907FEEBFF8090267FFFE113C048B512FB489138FFDFE026
07FC03131F380FF000001F159F484890387FCFC0EEC780007FEDE000A7003F5DA26C6C49
5A000F92C7FC3907FC03FE90B55A485C6D13E0261E07FEC8FC90CAFCA2123FA213C06CB5
12F8EDFF8016E06C81826C816C81000F815A273FC0000F13804848130148C8127FA56C6C
ECFF006C6C495AD81FF0EB07FCD80FFEEB3FF86CB65A000115C06C6C91C7FC010713F02B
377DA530>I<13FFB5FCA512077EAEED7FC0913803FFF84A7F021F7F91383F03FFDA7801
138014F04A6C13C05C5CA391C7FCB3A2B5D8FC3F13FFA5303A7DB935>I<13F0EA03FC48
7E487EA2481380A46C1300A26C5A6C5AEA00F090C7FCA813FF127FA512077EB3A7B512F8
A5153B7DBA1B>I<13FFB5FCA512077EAE92383FFFE0A592380FF0004B5A4B5A4BC7FC15
FEEC03FC4A5A4A5AEC1FC0143F4A7E4A7E81A281ECCFFEEC87FF1407496C7F6E7F6E7FA2
6F7E6F7E6F7EA26F7EB539F83FFFF8A52D3A7EB932>107 D<13FFB5FCA512077EB3B3AA
B512FCA5163A7DB91B>I<01FED97FE0EB0FFC00FF902601FFFC90383FFF8002076D90B5
7E021FD9FF0380DA3F03903987E07FF0DA78009039CF001FF800074914DE6C6C48D97FFC
6D7E4A5C4A5CA391C75BB3A2B5D8FC1FB50083B512F0A54C257DA451>I<01FEEB7FC000
FF903803FFF84A7F021F7F91383F03FFDA78011380000713F06C6C486C13C05C5CA391C7
FCB3A2B5D8FC3F13FFA530257DA435>I<903801FFC0010F13F8017F13FF90B67E000301
8013E03A07FE003FF0D80FF8EB0FF8001F81491307003F81491303007F81A300FF1680A9
007F1600A36C6C495AA2001F5D6D130F6C6C495A6C6C495A6C6C6CB45A6C90B55A6C6C91
C7FC011F13FC010113C029257DA430>I<01FFEBFF80B5000F13F8023F7F91B6FCDAFE07
1380DAF00113C000039039C0007FE04A14F091C7123F17F8161F17FCA2160F17FEA917FC
161FA217F8163F17F06EEB7FE06E13FFDAF00113C0DAFC07138091B5EAFE00023F5B020F
13F0020190C7FC91C9FCABB512FCA52F357EA435>I<9038FE07F000FFEB1FFC4A7E4A7E
02F8138002E113C0EA07FF6C13C1A202801380A2ED7F00151C91C8FCB3B512FEA522257E
A427>114 D<90383FF0383903FFFEF84813FF121F383FC00FEB0003007E1301140012FE
A27E6D130013F8EBFFE06C13FC14FF6C14C06C14E06C14F0000314F8C614FC131F903800
7FFE14070078130112F814007EA26C14FC6C1301018013F89038F00FF090B512E000FD14
C000F0140038E01FF81F257DA426>I<131FA55BA45BA25BA25A5A5A001FEBFFE0B6FCA4
000390C7FCB115F8A86CEB01F014816CEBC3E090387FFFC06D13806D1300EB03FC1D357E
B425>I<01FFEC3FC0B5EB3FFFA5000714016C80B3A25DA25D6C5C4B13E06CD9C03E13FF
90387FFFFC6D5B6D13E00103130030257DA435>I<B539F003FFF8A5000390C7EA3E006E
137E6C157C6E13FC6C5DECE001017F5CA2ECF003013F5CECF807011F5CECFC0F010F5C15
1FD907FE90C7FCA26E5A6D133E15FE6D5BA26D5BA36E5AA26E5AA26E5AA26E5A2D257EA4
32>I<B500F1B538807FFFA50007903B000FF80007E06C6E6C14C0180F6C0180168082DA
C00F141F6C6F14004B5CD97FE0153E17806E48147E013F90393E7FC07C037E14FC90271F
F87C3F5B17E0DAFCFC13E1010F9039F81FF1F014FD9139FFF00FF36DEDFBE017FF6D496C
5BA24B7E6D5EA26D496C90C7FCA36EC75AA2023E147C40257EA445>I<B539F01FFFF0A5
00019039C007F0006C5D6D6C485A6D6C485AECF83F6D6C48C7FC010F13FE6DB45A6D5B5D
6D5B7F147F6E7E814A7E14FF497F903803FBFFD907F37F02E17FEB0FC049486C7E013F6D
7ED97F007F01FE6D7E49130FB539803FFFF8A52D257EA432>I<B539F003FFF8A5000390
C7EA3E006E137E6C157C6E13FC6C5DECE001017F5CA2ECF003013F5CECF807011F5CECFC
0F010F5C151FD907FE90C7FCA26E5A6D133E15FE6D5BA26D5BA36E5AA26E5AA26E5AA26E
5AA2141F92C8FC5C003F133E387F807E38FFC07C14FC5CEAF80138FC07F0387E1FE0387F
FFC06C90C9FC6C5AEA07F02D357EA432>I<B812FEA42F04809830>123
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmbxti10 10 11
/Fm 11 117 df<EA03E0EA0FF0EA1FF8123FEA7FFCA3EAFFF8127F13F013E0EA3FC0EA0F
000E0D768C1E>46 D<0103B7FC4916F018FC18FF1980D90007D9800F13C0050313E04A90
C713F0A319F84A5AA44A484913F0A319E04A485B19C04D138019004A48EB1FFE4D5A9338
01FFF092B65A4993C7FC17FCA29238E007FE49496C7E84707FA2491380A284A24949485B
A449485BA4494849141CF0803EA270EBC07C495A007FB500F815F8B66C6C13E14B6CEBFF
F07014E0053F1380CA3803FE003F3A79B847>82 D<007FB500E0B639C01FFFFE6F6F5AB6
00E115C0A26C02E018FC00019026E0000301C0C7EA7E001B7C1BFC6E6F5C505A6C6F1503
634C1507634C4B5AA24C4BC7FC4C5D1A3E4C5D6E81047D5D017F02FC14014C5D03011503
4C5D4B484A5A15074C4A5A030F151F4C92C8FC6E4848EBF83EA2033E017F5B013F017E15
FC037C5D4B14F961DAFDF0ECFBE002FF15FF4B5DA24B5D4B92C9FCA26D90C76C5AA24A5D
4A5DA24A5DA24A5DA24A5D4A5DA26D486ECAFC573A6EB860>87 D<EC3FC0903801FFF001
07EBF8F0011FEBFFF890393FE07FFC90387FC03F9038FF001F5A48485C12075B120F001F
4A5A5B123FA249495A127FA34848495AA449485BEE87C0A34AEB0F80A2127F4AEB1F005C
003F49131E261FE07F133E260FFFFC13FC6C496C5A00019038E03FF03A007F8007C02A27
77A531>97 D<EE0FF0ED0FFFA34B13E081ED007FA2EEFFC0A44B1380A44B1300A491383F
C7FE903801FFF7010713FF131F90393FE07FFC90387FC03F9038FF001F5A48485C12075B
120F001F4A5A5B123FA249495A127FA34848495AA449485BEE87C0A34AEB0F80A2127F4A
EB1F005C003F49131E261FE07F133E260FFFFC13FC6C496C5A00019038E03FF03A007F80
07C02C3B77B931>100 D<EC0FF0ECFFFE01037F010F148090393FF81FC090397FE00FE0
9038FF8007481300485A12075B000F140F001F15C049EB1F80003F147F913803FF0048B5
12FC5D15E04AC7FCD8FFE0C8FCA55BA3007F5C1680ED07C0003F140F6DEB3F80001FECFF
00390FF807FE6CB55A6C14F0C61480D91FF8C7FC232777A52C>I<EB01FEEA01FFA3485B
7EEA000FA2495AA4495AA4495AA4494813F8ED03FCED0FFEED1FFF489038803E1FED783F
EDF0FFEC81C148EB03814A5A140E021C13FE3807FE389138F001FC9039FFE000F04A1300
485B14F814FF15C0488001F87FEC3FF8141FD83FF07F020F131FA33A7FE01FF83EA2163C
167CEAFFC0020F13F816F090398007FFE06E13C06CC71380003CEC3F00283B7AB92C>
107 D<EB03FCEA03FFA34813F87EEA001FA2EB3FF0A4EB7FE0A4EBFFC0A4481380A44813
00A4485AA4485AA4485AA4485AA4485AEBE1F0A338FFC3E0A3EBC7C0A2007F138013CF38
3FFF006C5A6C5AEA01F0163B79B919>I<EC0FF891B5FC010314C0010F14F090391FF81F
F890397FE007FC9038FF800348010013FE5A4914FF485A120F121F5B123FA2495B127FA3
4848EB0FFEA316FC49131F16F8A2ED3FF016E0007F147F16C0EDFF806C6C481300001FEB
07FE390FF81FFC6CB512F06C14C0C691C7FCEB1FF0282777A531>111
D<01FCEB7F803A03FF01FFF048018713F84801CF13FC90391FFF80FE001F9038FE003F00
3E4913FF4A5AEA3C3F007C495AA216FE38F87FE0ED01FC0000EC00F01600495AA4485BA4
4890C8FCA4485AA4485AA35BA26C5AEA03C0282779A52A>114 D<14F0497E497E130713
0FA4495AA4495AA4495A007FB512C015E0A2B612C07EC6EBC000A2485BA44890C7FCA448
5AA4485AA4485AEC03E0A2EC07C0EA3FF0EC0F80A2EC1F00143E001F5BEBF1F86CB45A6C
5B6C1380D8007EC7FC1B3779B520>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmsy10 10 30
/Fn 30 118 df<007FB81280B912C0A26C17803204799641>0 D<0060150600F0150F6C
151F007C153E6C157C6C15F86C6CEB01F06C6CEB03E06C6CEB07C06C6CEB0F806C6CEB1F
00017C133E6D5B6D5B90380F81F0903807C3E0903803E7C06DB45A6D90C7FC147EA214FF
497F903803E7C0903807C3E090380F81F049C67E013E137C497F497F4848EB0F804848EB
07C04848EB03E04848EB01F048C812F8003E157C48153E48151F48150F00601506282874
A841>2 D<EB0380497EA7397803803C00FC147E00FE14FE397F8383FC393FC387F8390F
E38FE03903FBBF803900FFFE00EB3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0
393FC387F8397F8383FC39FE0380FE00FC147E0078143C390007C000A76D5A1F247BA62A
>I<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F8CCFCAE007FB812
F8B912FCA26C17F836287BA841>17 D<020FB6128091B712C01303010F1680D91FF0C9FC
017FCAFC13FC485AEA03E0485A5B48CBFC5A121E5AA25AA45AAA1278A47EA27E121F7E6C
7E7F6C7EEA01F86C7E137FEB1FF06DB71280010316C01300020F158091CAFCAE001FB812
804817C0A26C1780324479B441>I<EF0180EF07C0171FEF7F80933801FE00EE07F8EE1F
E0EE7F80DB01FEC7FCED07F8ED1FE0ED7F80DA01FEC8FCEC07F8EC1FE0EC7F80D901FEC9
FCEB07F8EB1FE0EB7F80D801FECAFCEA07F8EA1FE0EA7F8000FECBFCA2EA7F80EA1FE0EA
07F8EA01FE38007F80EB1FE0EB07F8EB01FE9038007F80EC1FE0EC07F8EC01FE9138007F
80ED1FE0ED07F8ED01FE9238007F80EE1FE0EE07F8EE01FE9338007F80EF1FC01707EF01
8094C7FCAE007FB81280B912C0A26C1780324479B441>20 D<181C181EA384A3727EA272
7EA2727E85180019788585F11F80F107C0F103F0007FBA12FCBCFCA26C19FCCCEA03F0F1
07C0F11F80F11E006161611801614E5AA24E5AA24EC7FCA3181EA3181C482C7BAA53>33
D<1738173CA283A283717EA2717E717E8417001878007FB812FCB97E727E6C84CBEA03E0
F001F8F0007EF13F80F10FE0F107F8F101FFA2F107F8F10FE0F13F80F17E00F001F8F003
E0007FB95ABA5A4EC7FC6C5FCB1278601701604D5A4D5AA24DC8FC171EA25FA217384830
7BAC53>41 D<D90FF0ED0FF0D93FFEED7FFC90B56C49B5FC486E4914804802F0903907F0
03C02707C01FF890390FC001E0270F8007FC49C71270271E0003FE013E1478001C6D6C01
781438003C6DD980F8141C003891387FC1F0007891263FC3E0140E007091381FE3C09238
0FF78000F003FF1507486E90C8FC816F5A826F7F167F4C7E834B6D140F007003EF150E92
3803C7F8922607C3FC141E6C91260F83FE141C92261F01FF143C6CDA1E006D1338001E02
7C6D6C1378000E4A90393FE001F027078003F090391FF803E02703C00FE06DB512C06CB5
48010314806C4A6D1400D93FFEC8EA7FFCD90FF0ED0FF048267BA453>49
D<91380FFFFE91B6FC1303010F14FED93FF0C7FC49C8FC13FCEA01F0485A485A5B48C9FC
5A121E5AA25AA45AA3B712FE16FFA216FE00F0C9FCA31278A47EA27E121F7E6C7E7F6C7E
6C7EEA00FC137FEB3FF0010FB512FE010314FF1300020F13FE283279AD37>I<EE0180EE
03C0A2EE0780A2EE0F00A2161EA25EA25EA25EA24B5AA24B5AA24B5A150F93C7FC151EA2
5DA25DA25DA24A5AA24A5AA24A5AA24AC8FCA2141EA25CA25CA25CA2495AA2495AA2495A
A249C9FCA2131EA25B137C13785BA2485AA2485AA2485AA248CAFCA2121EA25AA25AA25A
A212602A4E75BB00>54 D<0060161800F0163CA200781678A36C16F0A36CED01E0A26CED
03C0A36C6CEC0780A36C6CEC0F00A26C6C141E90B612FEA26C5DA201F0C7123C01785CA2
6D5CA36D495AA36D495AA26D6C485AA36D6C48C7FCA3903801E01EA26D6C5AA3EC7878A3
6E5AA2EC1FE0A36E5AA36E5AA26EC8FC2E3C80B92F>56 D<007FB612F0B712F8A27EC912
78B3A5003FB612F85AA27EC91278B3A5007FB612F8B7FCA26C15F0253A7CB92E>I<1560
15F0A3903807F1E0EB3FFF5B9038FC1FC03801F00748486C7ED807C07F4848487E130048
80EC0F7C001E143C003E143EA2141E007E143F007C80143CA400FC01781380A314F0A4EB
01E0A3EB03C0A4EB0780A4EB0F00A3D87C1E1400A3007E5C5B003E143EA25BA2001F5CA2
6C485BA20007495A6C48485AEBF0073901FC1F8090B5C7FC485BEBC7F001C0C8FC485AA3
6CC9FC21477CBF2A>59 D<181018F81701170317074D5AA2171FA2173FA3177FA217EF16
0117CF1603178F1607170F160EA2161C84163816781670EEF00716E01501ED03C0168015
07ED0F00A2151E151C153C5D157015F0DA01E7B5FC92B67E5C5C5C92C71203141E143E5C
00300178815CEA7801387C03E026FF0FC06E7EEBFF80190791C8149E496F13FC6C4817F8
4917E06C48EE7F806C48EE3E00D8078093C7FC40417DBC42>65 D<0203B512F0023F14FF
49B712E0010716F8011F16FE90277F83F8077FD9F807D9007F1380D803E0030F13C0D807
C0030313E0D80F801500001FEF7FF0D83F0049EC3FF8181F127E007CEF0FFC00F0010F15
071240C75B1803A3141F5DA219F8A24A5AA2F007F0A24AC8FC19E0180F19C014FEF01F80
19004A5D0101167E187C4A5D01034B5A4D5A4A4A5A01074B5A4A021EC7FC177C010F4A5A
4AEB07E0011FEC1F804A01FFC8FCED1FFC49B512E090B612804802FCC9FC4814E04801FC
CAFC3E397FB840>68 D<4BB4FC031F13C0037F13E04AB512F0140791380FC07F91381E00
1F027CEB0FE05C494814C013034948EB1F00161E49481338011F91C7FCA3133FA280A280
80EB1FFEECFFC06D13FE7F6D13F801005B15C0D903F8C8FCEB07C049C9FC133E5B5B485A
1203485A5B120F485AA2123F90CAFC48151C167816F848EC03F0A26D495A5E6D495A6D49
C7FCD87FF8133C9038FF01F86CEBFFF06C14C06C91C8FC000313F838007FC02C3D7EBA2C
>I<0303B612FE033FEDFF8092B812C01403020F178091261F80FEC71300DA7C00153E4A
1638902601F00192C7FC01035CEB07E0A2130F4A485AEB1F80EB1E00131890C7485AA35E
150FA34B5AA25E93B512FC5DA24B14F06092397E00038003FE90C9FC5DA214015D14035D
A24A5AA24A5AA24A5AA24ACBFCA2000F137E123F485BEAFF80EBC1F8EBF1F0EBFFE06C5B
6C90CCFCEA1FFCEA07F0423C7EB83C>I<037FB6FC020FB7FC027F15FC49B712F8010716
E090270FF0003EC7FC013EC7127E495C13FC4848495AA24848495A13C090C71207C85B15
0FA25E151FA25E153FA34BC8FCA415FEA44A5AA44A5AA35D14075DA2140F5D141F4B130F
92C7121E4A147E027E5C027C5C4A495A0007B75A001F1680484BC7FC4815F8B712C03839
83B82D>73 D<EE01FCEE0FFEEE3FFF93B5FC030314805DED1F03ED3E01157CEDFC004A48
14004A5A5F4A485B020F14F09238C001C0021F90C8FC5D143F92C9FC5CA214FEA213015C
A21303A25C1307A35C130FA25CA2131FA25C133FA25CA249CAFCA2017E16E001FE150349
15070001EE1FC0EBFFFC48D9FFC0EB3F8003FC1400489138FFE03E48EDFFFC17F0D81F03
5D263C003F148048010349C7FC00E09038001FF0333D7EBA39>76
D<0060161800F0163CB3B300781678A2007C16F8003C16F06CED01E0001F15036C6CEC07
C0D807E0EC1F80D803FCECFF003A01FF8007FE6C6CB512F8011F14E0010391C7FC903800
7FF82E347CB137>91 D<EC7FF80103B5FC011F14E0017F14F83A01FF8007FED803FCC77E
D807E0EC1F80D80F80EC07C048C8EA03E0001E150148ED00F0007C16F800781678A24816
3CB3B3006016182E347CB137>I<14034A7EA24A7EA24A7EA3EC3CF0A2EC7878A24A7EA3
49487EA249487EA249486C7EA249486C7EA3011E6D7EA2496D7EA2491478A34980A24848
80A2484880A24848EC0780A348C8EA03C0A2001EED01E0A248ED00F0A3481678A248163C
A2006016182E347CB137>94 D<0060161800F0163CA200781678A26C16F0A36CED01E0A2
6CED03C0A26C6CEC0780A36C6CEC0F00A26C6C141EA26C6C5CA201785CA36D5CA26D495A
A26D495AA36D6C485AA26D6C48C7FCA2903801E01EA26D6C5AA3EC7878A26E5AA2EC1FE0
A36E5AA26E5AA26EC8FC2E347CB137>I<15FE1407141FEC7FC0ECFE00495AEB03F0A249
5AB3A8495AA2495A49C7FC13FEEA07FCEAFFF0138013F0EA07FCC67E133F6D7E6D7EA26D
7EB3A86D7EA2EB01FC6D7EEC7FC0EC1FFE140714001F537BBD2A>102
D<127EEAFFE013F8EA07FEC67EEB3F806D7E130F6D7EB3A86D7EA26D7E6D7E147FEC3FC0
EC0FFE1403140FEC3FC0EC7F0014FC495A495AA2495AB3A8495A131F495A01FFC7FCEA07
FEEAFFF813E0007EC8FC1F537BBD2A>I<126012F0A21278A37EA37EA27EA36C7EA26C7E
A36C7EA26C7EA31378A37FA27FA37FA2EB0780A3EB03C0A3EB01E0A2EB03C0A3EB0780A3
EB0F00A2131EA35BA25BA35BA3485AA2485AA3485AA248C7FCA3121EA25AA35AA35AA212
6013527CBD20>105 D<126012F0B3B3B3B3A91260045377BD17>I<0060166000F016F0B3
B3A9B8FCA36C16E02C327BB137>116 D<007FB712E0B812F0A300F0C9FCB3B3A9006016
602C327BB137>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmmi10 10 46
/Fo 46 123 df<0103B812F05BA24AC8FC0103160F6EED07E06D1603A26D6D1401A28114
7F6F15C0143FA26E7EA281020F16806F91C7FC1407811403A26E7EA28280826F5A037EC9
FC153C153815F04A5A4A5A4A5A4AC81230021C15384A5D5C49485D495A4948140149C85B
011E15031338494B5A49150FD803C0151F4848037FC7FC48C8485A001E151F003FB75A5A
B85AA23C397AB841>6 D<EC0F80EC3FF891B512804914C014C0903803807F0107EB1F80
9138000F0092C7FC80A36D7EA2806D7EA2806D7EA2147E147F808149B47E01077FEB0FEF
90383F0FF0EB7E0701F87F3801F003EA03E01207496C7EEA0F80121F1300481300A2127E
A25D5A1401A35DA24813035DA26C495A127C4A5A003C91C7FC003E131E6C133E6C6C5A38
07FFF06C5BC61380223D7DBB25>14 D<EC3FE0903801FFF0010F13E090381FC000017FC7
FC13FC485A485A485A485A121F5B123FA2387FFFFE80A290C8FC127E12FEA5127EA3123E
123FA26C14406C6C13E03807C0033903F81F806CB5120038007FFCEB0FE01C257DA322>
I<133F14C080EB07F06D7E6D7EA2130080A2147E147F80A281141F81A2140F81A2140781
A2140381A2140181A2140081140114034A7E4A7EEC1E3F023C13801478ECF01F010114C0
EB03E0903807C00FD90F8013E0EB1F00013E13074914F001FC1303484814F8485A484813
01484814FC485A003F140048C812FE12FE48157E48153F0070151F283B7CB930>21
D<15FE913803FF80020F13C091381F83E091383E01F09138F800F8494813FC4A137C1303
4948137E130F5C131F91C7FC4914FE133E137EA349EB01FCA316F84848130316F0A2ED07
E0485AED0FC06D1480ED1F000007143E6D5B6D5B9038EF03F0390FC7FFE001C31380D9C0
FCC7FC91C8FC485AA448C9FCA4127EA45AA25A127027377EA42B>26
D<027FB512C00103B612E05B131F4915C090267F81FEC7FC9038FC007E48487FEA03E048
487F000F81485AA248C7FCA2127EA3484AC7FCA3153E157E5A5D5D14015D6C495A007C49
5A5D6C011FC8FC6C133E380F81FC3807FFF06C5BC66CC9FC2B257DA32F>I<171C014015
3E01E0157F48481680A2485A48C9123F171F000E160FA2481700A24814C04A7E14034801
07140EA400F049485B5A173C4B1338177892C7127017F06C010E495A021F13034A495A6C
49495A3AFC01FF803FD87F07D9E0FFC7FC9039FFEFFFFE6C01C75B02875B6C010313E06C
486C5B2703F0007EC8FC31267FA434>33 D<121E123FEA7F80EAFFC0A4EA7F80EA3F0012
1E0A0A7A8917>58 D<121E123FEA7F80EAFFC0A213E0A2127F123F121E1200A4EA01C0A3
EA0380A2EA0700A2120E5A123C123812100B1A7A8917>I<177017F01601A21603831607
A2160F161FA2163FA2167716F716E7ED01C783ED0387A2ED0703150F150E151CA2153815
78157015E083EC01C0A2913803800114071500140EA25CA2023FB5FC5CA29139E00001FF
A249487F13035C49C8FCA2130EA25B133C133801781680EA01F8D807FC5C267FFFC0017F
13FEB516FF18FE383C7DBB3E>65 D<0103B77E4916F06D16FC903B0007FC0003FE4BEB00
FFF07F80F03FC04A5A19E0A2181F4A5A183FA34A4815C0187F198018FF4A4815004D5A4D
5A4D5A4AC7EA1FF0EF7FC04C485A92B500FCC7FC5B17FF4AC7EA7FC0EF1FE049486E7E84
170784495A1703A349481407A449484A5AA260171F49484A5A4D5A604C48C7FC4948495A
4C5A01FFEC3FF0007F90B65AB8C8FC16F83B397DB83F>I<DCFF801380030FEBE001037F
EBF803913A01FF807C07913A07FC001E0FDA1FE09038071F00DA3F80EB03BF4AC76CB4FC
EB01FED903F86E5A495A495A4948157E013F167C495A91C9FC5B4848167812035B120749
1670120F5B001F94C7FCA2485AA3485AA45B12FFA41707A3170EA2007F5EA25FA2003F5E
5F6C7E4C5A6C6C4A5A00074BC8FC6C6C140E6D143C6C6C14F8D8007FEB03E090393FE01F
C0010FB5C9FC010313FC9038007FC0393D7CBA3B>I<0103B812E0A390260007FCC7127F
4B140FF007C018034A5AA44A5A1980A34A5AA217C005E013004A484848C7FCA31603DAFF
005B1607A2163F4990B5C8FCA39138FE003F4948131EA44948131CA44948131893C9FCA3
495AA4495AA4495AA2497E007FEBFFC0B67E5D3B397DB835>70 D<DCFF801340030F01F0
13C0037FEBFC01913A01FF803E03913A07FC000F07DA0FF09038038F80DA3FC0EB01DF4A
C713FF02FE80D903FCED7F00EB07F0495A011F824948153E5C49C9FC5B4848163CA2485A
1207491638120F5B001F94C7FCA2485AA3485AA45B12FF93B512FE5D8104001380177FA2
4DC7FC127FA34C5A123FA27F001F4B5AA26C6C14076C7E00034B5A6C6C141DD800FE1478
903A7F8001F078903A3FF00FE030010FB5EA8010010349C9FC9038003FE03A3D7DBA41>
I<0103B512FC4914FE6D14FC90390007FC005DA34A5AA44A5AA44A5AA44A5AA44AC7FCA4
495AA4495AA4495AA4495AA4495AA4495AA4495AA213FFB67EA292C7FC27397DB824>73
D<0103B6FC5B7F90260007FEC8FC15F8A34A5AA44A5AA44A5AA44A5AA44AC9FCA4495AA4
495AA4494815C01701A2EF0380495AA2EF0700A249485C170E171EA249485C177C17FC4C
5A49481307EE1FF001FF14FF007F90B6FCB85AA232397DB839>76
D<902603FFFE93381FFFE049606D60D90007F0E000505AF101DF157F020E4C485AF1073F
A2190E021C4DC7FC191C19386F7E0238EE70FE19E0A2F001C00270EEC1FCF00381F00701
6F7E02E092380E03F8181CA21838D901C04C5A18706F6C13E0A2D903804A48485AEF0380
A2EF0700D90700020E495AA26F6C5AA2010E4B495A5FA25F49DAF1C049C8FCA2923803FB
80A24902FFC712FE5EA201785C4C495A13F8D807FE6D481303267FFFE04AB512F8B500F0
49488002E001C05D53397DB851>I<902603FFFC91383FFFF8496D5C6D82D90007030313
006FEC00F86182DA0E7F5DA282153F021C6D495A151FA282DA380F4A5A821507A202706D
49C7FC150382150102E0150E6F7EA217804948017F5BA2EE3FC0A249486E5A161FA2EE0F
F049C75C17F8160717FC010E02035BA217FE1601496F5A82A3496F5AA2173F137895C8FC
01F881EA07FE267FFFE080B56C140E4A140645397DB843>I<4BB4FC031F13F092B512FC
913903FE01FE913A07F0007F80DA1FC0EB1FC04A48EB0FE002FEC7EA07F0495A4948EC03
F8495A4948EC01FC495A494815FE017F150049C9FC4916FF1201485AA2485AA2120F5B00
1F5EA2485AA34848ED03FEA44848ED07FCA3EF0FF8A2EF1FF0A218E0173F18C0EF7F8000
7F16FF18004C5A4C5A6C6C5D1607001F4B5A6D4A5A000FED3F806C6C4AC7FC6DEB01FE6C
6CEB03F86C6CEB0FF03A007FC07FC06DB5C8FC010713F801001380383D7CBA3F>I<0103
B7FC4916E06D16F8903B0007FC0007FC4BEB01FEEF007F19804A48EC3FC0A319E04A5AA4
4A48EC7FC0A319804A4814FF19004D5AA24AC7485A4D5AEF0FE0EF3FC0494849B4C7FC91
B612FC17F094C8FCD903FCCAFCA4495AA4495AA4495AA4495AA4495AA213FF007F13FFB6
7E92CAFC3B397DB835>I<4BB4FC031F13F092B512FC913903FE01FE913A07F0007F80DA
1FC0EB3FC04A48EB1FE002FEC7EA0FF0494814074948EC03F8495A494815FC4948140101
3F16FE495A49C8FCEF00FF485A12035B12075B120F495D121FA2485AA34848ED03FEA448
48ED07FCA3EF0FF8A218F0171F18E090C9123F18C06DED7F80127FEFFF00913903E001FE
DA0FF05B003F496C485A9039C03C3C07001F9039700C0FF0903AE0E00E1FE0000FED3F80
2607F1C049C7FC01F9EB06FED803FDEB07F8D801FF495A3A007FE07FC06DB5EA00031307
0100018F5BDA000F1306170EEE801E5FEEC0FCEEFFF8A25F5F5F8194C7FC6F5AED00F838
4B7CBA42>I<0103B612F849EDFF806D16E0903B0007FC001FF84BEB03FC717E717E4A48
801980A219C04A5AA44A48ECFF80A34D13004A485C1703604D5A4AC7485AEF3FC0EFFF80
DC07FEC7FC4990B512F817C0A29139FE001FE04948EB07F0707E707E8349481300A44948
1301A449481303A44948495A194019E0A24948ED01C0160301FFEE0380007F01FF903901
FE0700B6D88000130E92C7EA7FFCCA6C5AEF07F03B3B7DB83F>I<92381FE0019238FFFC
030203EBFE0791390FE01F0F91391F80079F91393E0001FE5C4A1300495A4948147C1307
5C130F4A1478131FA3013F1570A28017008080EB1FFCECFF8015F86DEBFF806D14E0826D
800100806E7F020F7F1400031F1380150181167F163FA30006151F120EA3001EED3F00A2
163E167E003E157CA25E003F4A5A484A5A6D495AD87DE0495AD878F0013FC7FCD8F07F13
FE39E03FFFF8010F13E0D8C00190C8FC303D7CBA33>I<48B812FE5A5A903AFC003FE003
01E09138C0007ED80F80163C90C7FC000E4A5A121E121CA2484AC7FC18385AA24A5A5AA2
481730C748481400A44A5AA44A5AA44A5AA44A5AA44A5AA44AC9FCA4495AA4495AA2EB0F
FE003FB67EA337397EB831>I<267FFFFE91387FFFC0B5FC7E0001018091380FFC0091C8
EA07E0715A4D5A6C94C7FC5F170E5FA25F17786E14705F017F14015F4C5AA24CC8FC5E6E
130E5EA2013F5C167816705EA24B5A6E485AA24BC9FC011F5B150E5DA25D1578ECF0705D
130FECF1C0ECF380A202F7CAFC14FF5C5CA26D5AA25C5CA25CA25C3A3B7CB830>86
D<277FFFFC01B500F090B51280B56C486E5A6C496C4A7E0003902780000FFCC7381FF800
6C48C749EC07E01B80A2040793C7FC1A0EA262A2040F5D1A78041F157062163F6D027F4A
5A16776C03E74A5A83DB01C74AC8FC61DB0383140E03075D1603030E5DA2031C5D19F003
385D4E5A1570DA80F04A5A15E090267F81C04AC9FC715ADA8380140E0401131EDA870014
1C028F5D148E029C5DA202B85D17FF02F05D605C95CAFC5C6D485CA291C75B705A133E5F
133C01385D513B7CB84E>I<147E903803FF80010FEBC38090391F81E7C090383E00FF49
137F5B4848EB3F80485A12074848131FED3F00485AA2123F90C7127E5AA300FE5CA44A5A
48151CA3913803F038A2007C1307140F007E011F1370003E133B6C01F113E0380F83E13A
07FFC0FFC06C9038807F803A00FC001F0026267DA42C>97 D<133FEA0FFF5AA2EA007EA4
5BA4485AA4485AA4485A14FCEBE3FF01E713C0390FDF07E09038FC01F013F801F013F838
1FE0004913FC5BA248C7FCA4007E1301A448EB03F8A315F014074814E0A2EC0FC0A2EC1F
801500007C133E147E003C5B383E01F0381F07E06CB45A6C90C7FCEA01FC1E3B7CB924>
I<EC3FC0903801FFF0010713FC90380FE03E90383F800E90387E001F49133F4848137F48
4813FF485A15FE4848137C001F1438491300123F90C8FC5AA312FEA55AA31502007C1407
007E140E151C003E14386C14F0390F8003E09038E03FC00003B512006C13FC38003FC020
267DA424>I<EC3F80903801FFF0010713F890381FE07C90383F003C017C131E5B485A12
03485A485A001F143C491378003FEB01F0EC07E048B512C0150014F890C8FC127E12FEA6
127E15021507150E003E141C003F14386C14F0390F8003E03907E03FC06CB512006C13FC
38003FC020267DA427>101 D<16F8ED03FE4B7E92380F0F80ED1E1FED3E3FED7C7FA203
FC1300163E161C4A48C7FCA54A5AA54A5AA20103B512F05B5E9026000FC0C7FCA54A5AA6
4AC8FCA5147EA55CA5495AA5495AA45C1307A25C121E003F5BEA7F8FA2D8FF0FC9FC131E
127EEA7C3CEA3FF86C5AEA07C0294C7CBA29>I<EC07E0EC1FF891387FFC389138FC1E7C
903903F007FCEB07E090380FC003D91F8013F81400491301137EED03F05B1201A249EB07
E01203A34848EB0FC0A4ED1F805BA3ED3F0000035CA26D5B0001495A3800F80790387C1F
7EEB3FFE90381FF8FCEB07E090C7FCA24A5AA4001E495A123F486C485AA24848485A4A5A
007E017FC7FC387C01FE383FFFF86C13E0000390C8FC26367FA428>I<14E0EB01F0EB03
F81307A214F0EB03E0EB01C090C7FCAB13F8EA01FEEA07FF130F000E1380121C1238A2EA
701FA338E03F00A3EA007EA25BA3485AA3485AA23807E038A3380FC070A3EB80E0A2EB81
C0EB83803807870013FFEA03FCC65A15397EB71D>105 D<150E151FED3F80157FA21600
153E151C92C7FCABEC0F80EC3FE04A7EECF0F8EB01C049487EEB0700A2130E5BA24A5A13
38A213004A5AA44A5AA44A5AA44A5AA44AC7FCA4147EA45CA4381E01F8123F387F83F05C
EAFF07495A48485AD87C3FC8FCEA3FFC6C5AEA0FC0214981B722>I<EB03F013FF5AA238
0007E0A4495AA4495AA449C8FCA4137EED07C0ED1FE0ED3FF049EBF838913801E0F8EC03
81EC07033901F80E07141C143891387003F03A03F0E001C0D9F1C0C7FCEBF38001FFC8FC
485A6D7E14F014FC380FC1FEEBC07FEC1F80A248486C7E1670A33A3F001F80E0A3ED81C0
127E020F1380158391380787004814FE007C6D5A0038EB00F8253B7CB92B>I<EB0FC0EA
03FF5A7E38001F80A4EB3F00A4137EA45BA4485AA4485AA4485AA4485AA4485AA448C7FC
A4127E1307A3EAFC0EA35BA3EA7C381378EA3FF06C5AEA0780123B7DB919>I<D803E001
7F14FE3D07F803FFC007FF80486C48D9F00F13E03D1C3E1F81F83F03F0DA3C00EB780126
383F78D9FCF07F4AEBFDE000704990387DC0004AEB7F804A91C7FC91C700FE1301485A01
7E5CA21200494948495AA34E5A4848495AA24E5AA24848495A95381F80E0A34848494890
383F01C0A395383E03804848495AF10700190EF01E1E484849C7EA1FFC000F6E6E5A6CC7
000EEC03E043267EA449>I<D803E0137F3A07F803FFC0486C4813F03A1C3E1F81F8EC3C
0026383F787F5C007049137C5C5C91C712FC485A137EA2120049495AA34B5A485AA24B5A
A2485A92380FC070A3484890381F80E0A3EE01C0485AEE0380EE07006F5A484814FE000F
EC07F86CC7EA01F02C267EA432>I<EC1FC0ECFFF801077F90380FE07E90383F801F9039
7E000F8049EB07C0484814E0485A485AED03F0485A121F5B003F140790C7FC5AA300FEEC
0FE0A316C0151F481580153F1600157E127E5D4A5A003E495A6C495A390F801FC02607E0
7FC7FC3803FFFE6C13F038003F8024267DA428>I<02FC13C0903803FF01010F13839039
1F83C78090383E01EF9038FC00FF4848137F491400485A000780485A157E485AA2123F90
C75A5AA300FE495AA448495AA44A5AA2140F007C131F007E495A003E137F14FF381F83EF
390FFF9F800003131FEA00FC13004AC7FCA4147EA45CA2130190387FFFF0A322357DA425
>113 D<3903E001F03907F807FC390FFC1FFE391C3E3E0FEC781F39383FE03F157F0070
EBC0FF5CA2EC007ED8E07E13381500A212005BA4485AA4485AA4485AA4485AA4485A120F
6CC8FC20267EA425>I<14FF010313C0010F13F090381F80F890383E003849133C49137C
4913FC00011301A215F80003EB00F06D13007F3801FFC014FC6C13FF15806D13C0011F13
E013079038003FF0140F1403121E123F5A4814E0A215C048130700F814800070EB0F0000
78133E003F13FC6CB45A000713E0000190C7FC1E267CA427>I<EB0380EB07C0130FA4EB
1F80A4EB3F00A4137EA2B512FE14FF14FE3800FC00A3485AA4485AA4485AA4485AA4485A
141CA21438EA3F00A2147014E0A2EB01C0381F0380EB0F00EA0FFE6C5AEA01F018357DB3
1E>I<01F8EB0380D801FEEB07C0D807FFEB0FE0D80F0F14F0000E1380121C0038140715
03D8701F1301A216E038E03F001500A2D8007E130116C05BA34848EB0380A3ED0700485A
1506150EA25DA25D5D12016D5B0000EB03C090387E07806DB4C7FCEB1FFCEB07F024267E
A428>118 D<01F816E0D801FE9138E001F0D807FF903901F003F8D80F0F010314FC000E
1380121C00381601923807E000D8701F167CA21878484848485A1838A2D8007E16784B48
13705BA3484849C712E0A3EF01C04848137EA2EF0380A3EF0700A203FE130E00015E6D48
7E0000D9039F5B903A7E0F0FC0F0903A3FFE07FFE06D486C5B902703F8007FC7FC36267E
A43B>I<D901E013E0EB07F890391FFC01C090393FFE0380A290397FFF8F009038F81FFE
9038E007FC3801C0001538495BC85A4A5A4A5A4AC7FC140E5C5C14F0495AEB038049C8FC
130E5B4913075B495B4848130E4848131ED807F05B01FE137C390FFF81F8391F1FFFF0D8
3C075BD838035B486C5B486C90C7FC147C23267DA427>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmti10 10 30
/Fp 30 123 df<EE3FFC4BB51280030714C092390FC003E092391F0001F0033C1303037C
13075D18E014014BEB0380020391C7FCA34A5AA54A5AA4010FB612FE835F903A001F8000
7EA34AC75AA44C5AA2147EA24C5AA35C4C5AA44948495AEFC1C0A393381F8380495AA3EF
8700A24948EB0F8F178EEE07FC705A4AEB00F0010F92C7FCA25CA349CAFC121C123EEA7E
1EEAFE3E133C485A1278EA7FF0EA3FC0EA0F80344C82BA2F>12 D<387FFFF8A3B512F0A2
150579941E>45 D<DB03FE130492391FFF800C92B5EAE01C913A03FE01F03C913A0FF000
787CDA1FC0EB1CF8DA7F80130D02FEC7120F49481407494815F0495A49481403495A4948
15E0137F49C8FC5B000117C0485AA2485A1880120F5B001F93C7FCA2485AA3485AA45B12
FFA4173890C9FCA25FA25F7E6D4A5AA2003F4B5AA24CC7FC6C6C140E5E6C6C5C00075D6C
6C5C6C6CEB03C0D800FEEB0F8090267FC07EC8FC90381FFFFC010713F0010090C9FC363D
74BA3B>67 D<0103B612FC49EDFF8018E0903B000FF0001FF04BEB07F8EF01FC717E4A48
147FA2F03F80A24A48EC1FC0A44AC813E0A414FEA44948153FA4494816C0187FA3494816
8018FFA2190049485C60A24D5A495A4D5A60170F49485D4D5A4D5A4DC7FC49C85A4C5AEE
03F84C5A01FEEC1FE0EE7F800001DA03FFC8FCB712FC16E093C9FC3B397BB83F>I<0103
B512F849806D5C9026000FF8C7FC15E0A34A5AA44A5AA44AC8FCA414FEA4495AA4495AA4
495AA44948140C171CA21738495AA21770A2494814F017E01601A249C7EA03C01607A2EE
1F8001FE143FEEFF0000011407B8FC5EA22E397BB834>76 D<92383FC004913901FFF00C
0207EBF81C91390FC07E3C91393E001E7C4AEB07F84A1303495A4A1301494814F013075C
130F91C713E05BA34915C0A36E90C7FCA2806D7E14FCECFF806D13F06D13FE6D6D7E6D80
6D80023F7F02077FEC007FED0FFC150315011500A3167C1206120EA3001E5DA34B5A003E
5D15035E003F4A5A48140F6D49C7FC6D133ED879F05B39F0FC03F039E07FFFE0011F1380
26C003FCC8FC2E3D7ABA2F>83 D<14F8EB07FE90380FFF1C90383F07BE90387C03FEEBF8
01EA01F000035CEBE0001207485A4A5AEA1F80123FA249485A5AA300FE495AA448495AED
C1C0A391381F8380A2143F127C91387F8700007E13FF393E03CF8E381F0F8F390FFF07FC
3907FC03F83901F000F0222677A42A>97 D<147F903803FFC04913E090381FC1F090383F
0078017C13384913F83801F00100031303EA07E0D80FC013F0EC01E04848C7FCA2123F90
C8FC5AA312FEA55AA315101538007C147015F0007EEB01E0003EEB07C06CEB1F00380F80
FE3807FFF86C13E0C690C7FC1D2677A426>99 D<ED01F8157F15FF157FED03F0A4ED07E0
A4ED0FC0A4ED1F80A4ED3F0014F8EB07FEEB0FFF90383F07FEEB7C03EBF801EA01F00003
5CEBE0001207485A4A5AEA1F80123FA249485A5AA300FE495AA448495AEDC1C0A391381F
8380A2143F127C91387F8700007E13FF393E03CF8E381F0F8F390FFF07FC3907FC03F839
01F000F0253B77B92A>I<147F903803FFC0010F13E090381F81F0EB7E00491378485A48
5A485AA2485A001F14F090388001E0003FEB07C0EC3F8048B5120014FC14E090C8FC12FE
A65AA2007C14101538007E147015F0003EEB01E06CEB07C0EC1F00380F80FE3807FFF86C
13E0C690C7FC1D2677A426>I<ED07C0ED0FF0ED1FF8ED3C3CED78FC15F8EC01F915F1ED
F0F80203137016005D1407A44A5AA54A5AA2010FB5128016C016809039001F80004AC7FC
A5147EA55CA5495AA5495AA5495AA45C130FA35C131FA391C8FCA2EA1C3E123E127EEAFE
3C5B12FCEA78F0EA7FE06C5AEA0F80264C82BA19>I<EC07C0EC3FF091387FF8E0903901
F83DF0903803E01F903807C00FEB0F80011F14E090383F0007A2137E01FEEB0FC05B1201
A249EB1F801203A34848EB3F00A449137EA45DA20003130114036C6C485A140F3800F83D
EB7FF96D485AEB0FC3EB0003A24A5AA44A5A121C003E495A127E00FE49C7FC147E485B38
7803F8383FFFE06C1380D803FEC8FC24367CA426>I<EB03F013FF5A7EEB07E0A4495AA4
495AA449C8FCA4137EEC07F0EC1FFCEC7FFE9038FCF83F9039FDE01F80EBFF80EC000F48
5A16C05B49EB1F8012035BA34848EB3F00A3157E485AA35D485A913801F81CA33A3F0003
F038A3EDE070127E16E0A2EDE3C048903801FF80007C6D13000038143C263B7BB92A>I<
EB01C0EB03E0EB07F0A214E014C0EB038090C7FCAB13F0EA03FC487EEA0F1F121CA21238
A2485AA3EAE07EA25B1200A2485AA3485AA3485AA214E0EA0FC0A2381F81C0A3EB0380A2
EB0700A2131EEA0FFC6C5AEA01E0143879B619>I<EB03F013FF5A7EEB07E0A4495AA449
5AA449C8FCA4137EED0F80ED3FC0ED7FE09038FC01F0913803C1F0EC0703EC0E073A01F8
0C0FE0141891383007C09138700380484848C7FCEBF1C0EBF38001FFC8FC485A6D7E14E0
14F8380FC3FCEBC0FE143FA248486C7EED81C0A33A3F003F0380A3ED0700127EA2EC1F0E
5D48EB0FFC007C6D5A0038EB01E0243B7BB926>107 D<EB0FC0EA03FF5A7E38001F80A4
EB3F00A4137EA45BA4485AA4485AA4485AA4485AA4485AA448C7FCA4127E130EA3485AA4
5BA2EA7C70A2EA3FE06C5A6C5A123B79B915>I<D801E001FEEB07F03C07F803FF801FFC
260FFC0F9038C07FFE3C1E3E1F07E0F83F001C903B3C03F1E01F8026383F70EBF380913A
E001F7000F02C013FE007018C002805B4A4848EB1F80485A017E5CA21200494948EB3F00
A3187E4848495AA3604848495A943801F81CA34848903A3F0003F038A3F0E0704848137E
19E0A2F0E1C0484849903801FF80000F027C6D13006CC70038143C3E2679A444>I<D801
E013FE3A07F803FF80260FFC0F7F3A1E3E1F07E0001C90383C03F038383F70ECE00114C0
00708114804A485A485A137EA2120049495AA34B5A485AA34B5A485A92383F0380A34848
90387E0700A3ED7C0E485A5EA25E4848EB3FF0000F6E5A6CC7EA0780292679A42F>I<14
7F903803FFC04913E090381FC1F090383E00F849137C49137E4848133E12034848133F48
5AA2485AA2003F147F90C7FC5AA300FE14FEA315FC14014814F8A2EC03F0A2EC07E0007C
EB0FC01580007EEB1F00003E133E6C5B380F83F83807FFE06C5BC648C7FC202677A42A>
I<9039078007C090390FE01FF090391FF07FF8903938F8F87C9138F9E03E903970FF803F
4B7E495A17805CA23801C1F8A3EA00014948133FA44948EB7F00A3167E494813FEA25E4B
5AEB1F804B5A5EECC007013F5C4B5A6E48C7FCECF07E90387E7FF86E5AEC0F8091C9FC5B
A4485AA4485AA3387FFFC0B5FC6C5B293580A42A>I<ECF803903807FE0790380FFF0F90
383F079E90387C03BE9038F801FEEA01F0000314FCEBE0001207485AEC01F8EA1F80123F
A290380003F05AA300FEEB07E0A448EB0FC0A4EC1F80A2143F127CEC7F00007E5BEA3E03
381F0FBF380FFF7EEA07FCEA01F0C7FC5CA4495AA4495AA2130748B512C0A21580203577
A426>I<3903C003F03907F00FFC390FF83FFE391C7C7C1FECF00F3A387FC01F80153F00
709038807F001400153E017E131C484890C7FCA31200485AA4485AA4485AA4485AA4485A
A448C9FC7E120E212679A423>I<14FE903807FF804913C090381F03E090383C00F04913
7001F813F0EBF00100011303A215E00003EB01C06DC7FC7F3801FFC014F8806C7F6D7E6D
1380130F010013C0141F140FA2123C127E00FE1480A2481400485B00E0131E00705B0078
137C383E03F06CB45A6C5BD801FEC7FC1C267AA422>I<1307EB0F80131FA4EB3F00A413
7EA45BA2B512FC14FE14FC3801F800A3485AA4485AA4485AA4485AA448C7FC1438A21470
127E14E0A2EB01C0A2EB0380383E0700131EEA1FFC6C5AEA03E0173578B31C>I<13F8D8
01FEEB01C0486CEB03E039070F8007120E121C1238ED0FC0EA301F1270A23AE03F001F80
A3EA007EED3F005BA34848137EA448485B160EA3913801F81CA31638140300011307020E
13702600F83C13F090397FF87FE090393FF03FC090390FC00F00272679A42D>I<01F013
0ED803FC131F486C5BD80F1FEB7F80121C153F0038141FA24848130FA21600D8E07E7FA3
C6485B150E485AA348485BA35D485AA25DA2156015E05D14014A5A000349C7FC6D5A3801
F81E3800FFFCEB3FF0EB0FC0212679A426>I<01F01507D803FC903903800F80486C9038
07C01FD80E1F010FEB3FC0121C171F0038160FED1F8048481507A21880D8E07E90383F00
03A3C6481507037E1400485AA3484849130EA4484848485BA35FA25FA202035C1203D9F0
07495A000190390EFC03803A00FC1E7E0F90277FFC3FFFC7FC90393FF00FFC90390FE003
F0322679A437>I<903907E007C090391FF01FF090393FF83FF89039783C783C9038E03E
E02601C01F137ED80380EBC0FED80700EBC1FC1581000EEC80F816704849C7FCA3C7FC14
7EA45CA4495A1670A3261C03F013E0123E007FEC01C0130700FEEC0380D8FC0FEB070039
780EF80E90383C783C393FF83FF86C486C5A3907C00FC027267CA427>I<13F0D803FCEB
01C0486CEB03E0D80F1F1307121CA21238ED0FC0485AA3D8E07EEB1F80A3C65AED3F0048
5AA34848137EA448485BA44A5AA314035D00031307EBF00F3801F83F6CB55AEB7FF7EB1F
C7EB00074A5AA25D001E131F003F91C7FC485B147E007E137C007C5B387001F0387803E0
383C0FC0D81FFFC8FC6C5AEA03F0233679A428>I<903903C00380EB0FF090391FF80700
133F90387FFC0EECFF1C9038F83FF8EBE00F3901C001F06E5A49485AC7485A4AC7FC140E
5CA25C5C495A495A49C8FC130E5BA249131C5B49133C4848133848481378D807E0137039
0FFC01F09038FF07E0391E3FFFC0EA3C0F486C5B007091C7FC38E003FCEB00F021267BA4
22>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmbx12 12 31
/Fq 31 120 df<EA07C0EA1FF0487E487E7F12FF7FA21480A27EA27EEA1FF7EA07C7EA00
07A2EB0F00A35B131EA25B137C137813F8485A485A485A485A48C7FC120E1204112278C4
1F>39 D<EC01E01407140F143FEB01FF131FB6FCA413E3EA0003B3B3AD007FB612FEA527
4178C038>49 D<ECFFE0010F13FE017F6D7E90B612E0000315F82607F8037F260FE0007F
D81F80EB3FFF48C76C138001E06D13C0486C6D13E07F00FF6E13F07F8117F8A36C5A6C5A
6C5A6C5AC8FC17F05D17E0A24B13C0A24B138017004B5A5E4B5AED7FE04B5A4A5B93C7FC
EC03FC4A5AEC0FE04A5A4A4813F84AC7FC14FC495A4948EB01F0495AEB0F8049C7FC013E
140349140790B7FC4816E05A5A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFE0010713FE
011FEBFFC0017F14F0D9FF807F3A01FC003FFCD803F06D7E48486D7E01FC1580487E6D15
C05A1480A56C01001480A26C485BD801F81500C85B153F5E4B5A4B5A4A13C0020F5B9026
07FFFEC7FC15F815FF16C090C713F0ED3FFC6F7E6F7E6F138017C017E08117F0A317F8EA
0FE0487E487E487E487EA317F0A36C484913E05B4915C06C484913806C48491300D80FF0
495AD807FEEBFFFC6CB65A6C15E06C6C5C010F49C7FC010113E02D427BC038>I<163F5E
5EA25D5D5DA25D5D5D5DA292B5FC5C5C15EFEC07CF140FEC1F8FEC3F0F143E147C14FCEB
01F8EB03F014E0EB07C0130FEB1F801400133E137E5B485A5B485A1207485A5B48C7FC5A
127E5AB91280A5C8001F90C7FCAB91B71280A531417DC038>I<00031503D807E0143F01
FFEB07FF91B6FC5E5E5E5E5E5E93C7FC15FC15F015C002FCC8FC01C0C9FCA9EC3FF001C1
B5FC01C714C001DF14F09039FFC03FF89039FE000FFC01F86D7E496D7E4915804915C06C
5AC86C13E0A217F0A317F8A21203EA1FC0487E487E7F12FF7F17F0A25B17E06C485B4915
C05B6CC74813806C6C15006D495AD80FF0EB3FFCD807FEEBFFF86CB65AC615C06D91C7FC
010F13FC010113C02D427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7F
A34B7F16BF031F80163F82033F80ED3E0F037E80157C8203FC804B7E02018115F0820203
814B7E0207815D177F020F814B7F021F8292C7FC834A82023E80027E82027FB7FCA291B8
7EA2498302F0C71203830103834A800107835C187F49488284011F8491C97E4984133E84
B6021FB612F0A54C457CC455>65 D<DCFFF81430031F01FF14F04AB6EAE0010207EDF803
021FEDFC07027F9039F001FF0F494848C7EA3F9F4901F8EC0FFF010F01E0140349018080
4948C9FC4948167F4948163F485B191F4849160F485B19075A485B190391CAFC5A1901A2
5A5B96C7FCA212FFAC127FA36DEF01F07EA37E80F103E06C7F7EF107C06C7F6C6DEE0F80
191F6C6D17006D6C163E6D6C5E6D6C6C15FC6D01E0EC03F8010301F84A5A6D01FFEC3FC0
6D6C9039F001FF80021F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467A
C451>67 D<B9FC18F018FE727E19E0D8003F90C7001F13F805017F716CB4FC061F7F727F
06037F727FA2727F737EA2737EA2737EA21B8085A21BC0A51BE0AD1BC0A51B8061A21B00
A24F5AA24F5A4F5AA24E5B4E5B4E5B061F5B067F90C7FC4D485A051F13F8BA5A19C04EC8
FC18F095C9FC4B447CC356>I<B712F0A5D8001FEB8000B3B3B3A4B712F0A524447DC32A>
73 D<B695B612806F5E6F5EA3D8003F6D4C49C7FCA2013E6DEE0FBFA26E6CEE1F3FA36E
6C163EA26E6C167CA26E6C16F8A26E6DEC01F0A36E6DEC03E0A26E6DEC07C0A26E6DEC0F
80A36F6CEC1F00A26F6C143EA26F6C5CA36F6C5CA26F6D485AA26F6D485AA26F6D485AA3
6F6D485AA2706C48C7FCA293383FFC3EA3706C5AA2706C5AA2705BA3705BA2705BA2705B
B66C93B71280A271C7FCA2173E61447CC36A>77 D<B812F8EFFFC018F818FE727ED8001F
902680003F13E005077F05017F717F727E727EA28684A286A762A24E90C7FCA2614E5A18
FF4D13F005075B057F138092B7C8FC18F818C018F0DB800013FCEF3FFF717F717F83717F
8583A285A685A61B1FA2717FA2726C133EA2B700F06DEB807E72EBE0FC72EBFFF8060314
F0DE007F13E0CC0007130050457DC354>82 D<003FBA12E0A59026FE000FEBC003D87FF0
9338007FF049173F0180170F190790C7FC007E1803A3007C1801A400FC19F8481800A5C8
1700B3B3A20107B87EA545437CC24E>84 D<903801FFF0011F13FF017F14C048B612F048
48C66C7ED807F8EB1FFC486C6D7E6D6D7E486C81818381836C5A6C5A6C5A6C5AC8FCA302
03B5FC91B6FC1307013F13F19038FFFE01000313F0481380481300485A485A485AA2485A
A45DA26C6C5BA26C6C010E13F86C6C013CEBFFC03A0FFF80F87F6CEBFFF06CECE01FC66C
EB8007D90FFCC9FC322F7DAD36>97 D<EC3FF849B57E010F14E04914F890397FF007FC90
39FFC001FE4849487E48495A484A1380485AA2485A123F6F13006F5A48486D5A6F5A93C7
FCA212FFAA127FA27FA2123FEE07C06C7EEE0F806C7E6CED1F006C7F6C6D133E6C01F013
FC90397FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32>99
D<4CB4FC0307B5FCA5ED001F82B1EC3FF0903803FFFE010FEBFF8F013F14EF90267FF807
B5FC3901FFC00148496C7E4890C77E49140F120F485AA2123FA2485AA412FFAA127FA412
3F7F121FA2000F5D7F6C6C147F6C92B512806CD9C00314FE6C9038F01FEF013FB512CF6D
140F010713FC9026007FC0EBF80037467CC43E>I<EC3FF849B5FC010F14C0013F14F090
397FF01FF89039FFC007FC48496C7E48496C7E48481580000F80484815C0167F003F16E0
A25B127FEE3FF0A212FFA290B7FCA401F8C9FCA5127FA36C7EA2001FED01F0A26C7EEE03
E06C6C14076C6DEB0FC06C6DEB1F806C01F0EB3F0090397FFE01FE011FB55A010714F001
0014C0DA1FFCC7FC2C2F7DAD33>I<913801FF80021F13E0027F13F849B512FC01071387
90390FFE0FFED91FFC13FF49485A137F14F013FF14E048EC0FFEED07FCED03F8ED00E016
00AAB612F8A5000101E0C7FCB3B0B612E0A528467DC522>I<DAFFE013FC010F9038FE03
FF013FD9FF8F138090B812C048D9C07F1307489039001FF87F4848EB0FFC000F9238FE3F
80491307001F9238FF0E0094C7FC003F82A7001F93C7FCA2000F5D6D130F00075D6C6C49
5A6C9038C07FF091B55A481580D8078F49C8FC018013E0000F90CAFCA47FA213F090B612
C016FC6CEDFF80836C16F0836C826C821203000F82D81FF0C77ED83FC01407007F6F1380
498000FF81A56C6C4A1300A26C6C4A5A6D14076C6C4A5AD80FFEEC3FF83B03FFE003FFE0
6C90B65A6C6C92C7FC010F14F8D9007F90C8FC32427DAC38>I<EB3FE0B5FCA512037EB1
ED03FF031F13E04B13F892B57E9139E1F81FFE9139E3C00FFF9138E78007DAEE008002FE
7F4A815CA25CA35CB3A7B600C1B61280A539457DC43E>I<137C48B4FC487F487FA2487F
A56C5BA26C5B6C90C7FCEA007C90C8FCAAEB3FE0EA7FFFA512037EB3AFB61280A519467D
C51F>I<EB3FE0B5FCA512037EB3B3B3A3B612C0A51A457DC41F>108
D<90277FC003FFEC07FEB5011F01E090383FFFC04B01F84913F092B56C48B57E913DC1F8
1FFE03F03FFC913DC3C00FFF07801FFE00039026C7800790380F000F6CD9CE00029C8002
DE6D01BC7F02DC03F8158002F85DA24A5DA34A5DB3A7B600C1B60083B6FCA5582D7DAC5D
>I<90397FC003FFB5011F13E04B13F892B57E9139C1F81FFE9139C3C00FFF00039038C7
80076CD9CE008002DE7F02DC8114F8A25CA35CB3A7B600C1B61280A5392D7DAC3E>I<EC
1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4890C76C7E48
486E7E000F8249141F001F82A248486E7EA2007F82A400FF1780AA007F1700A46C6C4A5A
A2001F5EA26C6C4A5A00075E6D147F6C6D495A6CD9E0035B27007FF80F90C7FC6DB55A01
0F14F8010114C09026001FFCC8FC312F7DAD38>I<90393FE00FFCB590387FFFC002E3B5
12F002EF14FC9139FFE03FFE9238000FFF000301FC010313806C4915C04A6D13E05C7013
F018F8177FA218FCA2173F18FEAB18FC177FA318F817FF18F0A24C13E06E15C06E491380
6E5B02FF90380FFE009238E07FFC02E7B55A02E314E002E01480DB0FF8C7FC92C9FCADB6
12C0A537407EAC3E>I<90397FC03F80B5EBFFE002C113F802C313FC9138C7C7FEECCF07
00039038CE0FFF6C13DE14FC14F8ED07FEA29138F003FCED00F01600A25CB3A6B612F0A5
282D7EAC2E>114 D<90391FFC038090B5128F000314FF5A380FF003381FC0004848133F
48C7FC151FA248140FA27FA26D90C7FC13F0EBFF806C13FCECFF806C14E015F86C806C80
6C8012016C1580011F14C01301D9000F13E014010078EB007F00F8143FA26C141FA36C15
C0A27E6DEB3F807F6DEBFF009038FC03FE90B55A00F814F0D8F03F5B26E007FEC7FC232F
7CAD2C>I<EB03E0A61307A3130FA3131FA2133F137F13FF5A5A001F90B51280B7FCA400
0101E0C7FCB3A3ED03E0AA6CEC07C014F0017F1480ECF80F90393FFC1F0090381FFFFE6D
5B010313F09038007FC023407EBE2C>I<D93FE0EC7FC0B549B5FCA50003EC00076C81B3
A85EA35E7E5E043B7F6D6C017BEBFF8090393FFC03F36DB512E36D148301031403902600
3FF849C7FC392E7DAC3E>I<B6000FB539C03FFFF0A500019027E0007FF0C7EAF800707E
6E16016C6F6C5C80017F4D5A836E013F1407013F6F5C804C140F011F04805B6E90B5131F
6D02F901C090C7FC158003815D6D02F0EBE03E03C3157E6D9139E07FF07C15E303E715FC
6D4A6C6C5A03FF14F96D9139801FFDF0A218FF6E496C5BA26E486D5BA36E486D5BA26E48
6D90C8FCA36E486D5AA26E48147C4C2C7EAB51>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmti9 9 55
/Fr 55 122 df<DB03F8133EDB1FFE13FF92267FFF0113C09239FC0783C3913B01F00FC7
87E0913A03E01FCF8FA20207029F13C003C090381F0F80020F90390E3F0700040090C7FC
A24A5A177EA44AC7FC5FA3011FB712FC5B6D5E9028007E0001F8C7FCA35CA24C5AA3495A
A24C5AA313035C4C5AA4495A4C5AA4495A4CC8FCA35C011F143E167EA291C7127CA24914
FC261C3E0E5B003E131F3A7F3C3F81F0017C5C39FE787F03007C90383E07C03A78F03C0F
80273FE01FFEC9FC6C486C5A390F0003F03B4582B42F>11 D<923801FF80030F13F0033F
13F892387E007C03F8131E4A48133E4A48137F020714FE5D020F147C173817004A5AA54A
C8FCA4011FB612E04915F06D15E09039007E0007A34AEB0FC0A4EE1F80495AA3EE3F00A2
495AA2167EA217184948141CEEFC38A44A1470010F14F816FCEE7CE0EE3FC04A131F011F
EC0F0093C7FCA291C9FC5BA2EA1C3E123EEA7F3C137CEAFE78127CEA78F0EA3FE06C5A6C
CAFC304582B42B>I<15C01401EC0380EC0700140E5C5C14785C495A495A13075C49C7FC
5B131E133E5BA25BA2485AA2485AA3485AA2485AA3121F90C8FCA25A123EA3127E127CA4
12FC5AA75AA97EA21278A31238123CA2121C121E120E7EA27E1A4A75B71F>40
D<1430143880141E140E140FA2EC0780A315C01403A415E0AC140715C0A5140F1580A314
1F1500A3143EA3147E147CA25CA3495AA2495AA2495AA2495A91C7FC5B131E133E133C5B
5BA2485A485A485A48C8FC121E5A5A5A12C01B4A7EB71F>I<EA03C0EA07E0EA0FF0A2EA
1FF8A213F0120F1207EA0070A213E0A2EA01C0A2EA038012071300120E5A5A5A5A12400D
187B8818>44 D<387FFF80B5FCA31400110579921B>I<120E123FEA7F80A212FFA21300
127E123C0909788818>I<EC0FE0EC7FF849487E903803F07E903807C01FD90F80138090
381F000F133E4914C0A25B1201A2485AA20007141F5BA2120F168049133F121FA34848EB
7F00A448C712FEA35D007E130112FE5D1403A2485CA24A5AA24A5AA24A5A007C91C7FC14
3E007E5B6C5B381F83F06CB45A6C1380D801FCC8FC223478B127>48
D<154015C014011403EC0780140F141F147F903801FF00131FEB7FBFEB7E3FEB207E1300
A35CA4495AA4495AA4495AA4495AA4495AA449C7FCA4137EA213FE387FFFFEB5FC5C1A32
78B127>I<EC0FE0EC3FF8ECFFFC903801F03E903803C01F903907000F80130E4914C05B
1460D970E013E0EBF07013E0A2EA01C0A23A0380E01FC0A2EB81C0ED3F80EB8380D98F00
130001FE137E6C4813FED800F05B90380001F84A5AEC07C04A5A4AC7FC147C5CEB03E049
5A011FC8FC133C5B49EB0380EA01C0485A48C7EA07005A000E140E48141ED83FF85B9038
FF80FC48EBFFF8D8703F5B010F5BD8E0035B6D5B26C0007EC7FC23347AB127>I<010314
609138E007E049B5FC168016005D4913F815C0D90E3CC7FC91C8FC5BA45BA4EB707E9038
71FF8001777F90387F83E09038FE01F09038F800F85B497F12016C5A90C7FCA41401A312
1E003F495A5AA24A5A127E485C00F0495A00705C141F4AC7FC6C137E003C13F8381F07F0
6CB45A6C1380D801FCC8FC233479B127>53 D<EC01F8EC0FFCEC3FFEEC7E0F903901F807
80903803E01F903807C03FEB0F8090391F007F00013E7F017E133E017C90C7FC13FC485A
A2485AA2485AEBE1FE380FE7FF497F391FDC07C09038F803E013F0D83FE07F13C0A21380
007F801300A25D007E130712FEA34A5A5AA25D141F5D4AC7FC127C147E147C003C5B383E
01F0381F07E0380FFF806C90C8FCEA01F8213477B127>I<137813FCEA01FE1203A213FC
A2EA01F8EA00E01300AE120E123FEA7F80A212FFA21300127E123C0F20789F18>58
D<161C163CA2167C16FCA21501821503A21507150F150E151CA21538A2157015F015E0EC
01C0A24A487EA24A487EA2140E141E141C5CA25CA25C130191B6FC5BA249C7EA7F80163F
130E131E131C133C13385BA25B12011203D80FF0147FD8FFFE90380FFFFEA217FC2F367B
B539>65 D<DB0FF013C09238FFFC010203EBFE03913A0FF80F878091393FC003CF91397F
0001DFD901FCEB00FF4948EC7F00EB07E0495A494880013F153E49C8FC13FE5B0001163C
485AA2485A000F1638A2485A94C7FCA2485AA3485AA590CBFC5A4C7E1603A27E4CC7FCA2
160EA26C5D7F5E001F5D6C6C5C4B5A6C6C495A6C6C010FC8FCD801FC133E6CB413FC9038
3FFFF0010F13C0D901FEC9FC323775B437>67 D<0107B612E04915F86D15FE903A001FC0
00FFEF3F804A48EB1FC0EF0FE0EF07F017034AC713F81701A218FC14FEA4495AA4495A17
03A3494815F81707A3494815F0170F18E0A24948EC1FC0A2EF3F80A24948EC7F00177E17
FE4C5A49C7485A4C5A4C5A4C5A01FE4AC7FC16FE0001EC07FC007FB612F0B712806C02FC
C8FC36337CB23A>I<0107B712E05B7F903A001FC0001F17074A4813031701A34AC713C0
A414FE160EA34948011C138094C7FCA2163C49485BED01F891B5FCA2495CECF0011500A2
49485BA217061707903A1FC001C00E1500EE001CA249485CA21778177049C812F05F1601
160301FE4A5A161F00014AB45A007FB7FCB8C7FC7E33337CB234>I<010FB71280A3903A
003F80007F171F4AC7120F1707A302FE1500A4495AA2163016384948EB700694C7FCA216
F049485B1501150791B5FC495CA2ECE0071503D91FC05BA4494848C8FCA392C9FC49CAFC
A413FEA4485AA21203B512FCA25C31337BB232>I<0107B56CB512F04914816D1480903C
001FC00003F800A24A48495AA44AC7485AA402FE4A5AA449484A5AA449484AC7FCA291B7
FCA2495D02F0C7FCA34948495AA44948495AA44948495AA449C7485AA401FE4A5AA20001
153F277FFFF80FB5FCB55B6C803C337CB239>72 D<0107B512804914C06D14809039001F
C000A24A5AA44AC7FCA414FEA4495AA4495AA4495AA4495AA4495AA4495AA449C8FCA413
FEA21201387FFFF8B57E6C5B22337CB21E>I<010FB512C0A25E9026003FC0C7FC5D4AC8
FCA414FEA4495AA4495AA4495AA4495AA4495AA2EE018017C04948EB0380A2EE0700A249
C7FC160EA2161E01FE141C163C167C5E4848130115070003EC3FF0B7FC5EA22A337BB230
>76 D<902607FFE0EDFFFC495E7F9026001FF0913803FE00A2023B4B5A180EA2181C0273
ED1DF818391871A2DAE1F84A5AA2EF01C3EF0383D901C1ED87E0EF0707A2170ED903814A
485AA21738EC80FCD907004A485AA217E0EE01C0010E4CC7FCEE0380A2EE070049020E13
7EA2ED7E1CA2494A5B5EA25E494B5AED7FC01680A201F04A485A000180D807F8013E1307
287FFF803C01B512C0B55C6CEC380146337BB245>I<902607FFC090380FFFF0496D5B6D
819026001FF0903800FE001878143FDA3BF81470A3DA71FC5CA2EC70FEA202E04A5A157F
A21680902601C03F495AA2ED1FC0A2D903804AC7FCED0FE0A216F09026070007130EA2ED
03F8A2010E6E5A1501A2ED00FE495DA2167FA24915F0163FA2161F495DA2160FA201F06E
5A1201EA07F8267FFF801303B55D6C15013C337CB239>I<ED1FE0913801FFFC020713FF
91391FE03FC091393F000FE002FEEB07F0D901F813034948EB01F8494814FC4948130049
4814FE49C8FC49157E01FE157F485AA2485A12075B120F5B121F17FF5B123FA34848EC01
FEA4EE03FC48C8FCEE07F8A217F0160F17E0161F6C16C0EE3F80A2EE7F006C6C14FE4B5A
4B5A6C6C5C000FEC0FE06D495A6C6C495A6C6C01FEC7FC3901FE03FC39007FFFF06D1380
D907FCC8FC303775B43B>I<0107B612C04915F86D81903A001FC001FEEE007F4A48EB3F
80EF1FC0A34AC713E0A402FEEC3FC0A318804948147F18005F5F4948495A4C5AEE0FF0EE
3FC049B6C7FC16FC16E002F0C9FC495AA4495AA4495AA449CAFCA413FEA21201387FFFF8
B5FC7E33337CB234>I<0107B6FC4915E06D15F8903A001FC007FCEE00FE4A48137FEF3F
80A34AC713C0A402FEEC7F80A3EFFF00495A5F4C5A4C5A4948495AEE1FE0EEFF8091B548
C7FC4914F85E9138F001F86F7E4948137EA2167FA2495AA449485BA35E90387F0001A218
C018E001FEED01C0A20001EE0380397FFFF800B591387F0F006CED3FFEC96C5AEE03F033
357CB238>82 D<913901FC018091380FFF034A138791397E07CF009138F800EFD901E013
7F495A4948133E130F91C7FC5B011E143C133EA3017E1438A393C7FC137FA214C0EB3FF8
ECFF806D13F06D13FC6D7F6D7F7FD9003F7F14039138007FC0151FA2150FA3120C120E48
5DA393C7FC003C5C151E153E003E143C007E5C007F5C6D485A397BC003C039F1F80F8000
E0B5C8FCEB3FFC38C00FF029377AB42B>I<0007B8FC5AA2903AF001FC007FD81F80151F
49485A001E160E5AA20038495AA248161E171C4A5A5AA34849481318C71500A34A5AA44A
C8FCA414FEA4495AA4495AA4495AA4495AA2131F003FB512F0A3303373B237>I<263FFF
FC90387FFF804892B5FC6C81C648C73807F000EE03C0485A5FA348484AC7FCA44848140E
A448485CA448485CA448485CA448C85AA400FE4A5AA34B5AA25A4BC8FCA2150E5DA2007E
5C5D003E5C6CEB03C0390F800F802607E03FC9FC3803FFFC6C13F038003F80313571B239
>I<B500C090381FFF806E5B4A1500D807FCC7EA07F849EC03E0178012034CC7FC5E160E
5EA25E167816706D5CA200014A5A15035E4BC8FCA2150E151E151C5D7F5D000014F05D4A
5AA24A5AA24AC9FC140E13FF5C137F5C147814705CA25CA25C91CAFCA2133EA2133C1338
313570B239>I<B53CC03FFFF003FFF802E06E5A02C04A6C13F02807F80001FEC7EA7F80
494AEC3E00193C1938A26115036115074E5A030F140361031D4AC7FC820338140EA20370
5C6D13F0000302E05C140103C05CDA038014F060DA0700130160020E4A5AA24A4AC8FCA2
4A140E147802705C5C5FD9F9C014781770D9FB806D5AA201FFC76C5AA2495DA26C4892C9
FCA249147E5B167C5B1678491470453570B24D>I<49B612FC5BA292380003F8D907F8EB
07F002E0EB0FE04A131F4948EB3FC091C71380EE7F00010E14FE011E495A011C13035E49
495A4B5A4B5A0130133F90C7485A93C7FC15FE4A5A4A5A14075D4A5A4A5A4A5A147F4AC8
FC5C49481306494813074948130E130F5C49485B495A49C7FC495C485A491478484814F8
48485C48481301001F140749EB1FE0484813FF48B6FCB75AA22E337AB22F>90
D<EB01F8EB07FC90381FFE3890383F0F7C90387C07FCEBF803EA01F048486C5A1207EA0F
C0A2001F495A1380123FA24848485AA4007E495A12FE15C3168091381F8700127EA2143F
EC7F8E003EEBFF0ED83F01138E391F07CF9C390FFF07F83807FE033901F801E0212279A0
27>97 D<14FE903803FF80010F13C090383F83E0EB7E00EBF803000113073803F00FEA07
E0000F14C09038C00780001F90C7FC5B123FA248C8FCA4127E12FEA3127E1520157015E0
003EEB01C0003FEB07806CEB1F00380FC0FE3807FFF86C13E0C66CC7FC1C2279A023>99
D<ED03E0EDFFF04A13E0801507A2ED0FC0A4ED1F80A4ED3F00A4157EEB01F8EB07FCEB1F
FE90383F0FFCEB7C07EBF803EA01F048486C5A1207EA0FC0A2001F495A1380123FA24848
485AA4007E495A12FE15C3168091381F8700127EA2143FEC7F8E003EEBFF0ED83F01138E
391F07CF9C390FFF07F83807FE033901F801E0243579B327>I<EB01FCEB0FFE90383FFF
80EB7F079038FC03C0EA03F0EA07E013C0120FEA1F80003FEB0780EC0F00387F007EEBFF
FC5CB512C048C8FCA35AA5154015E0007CEB01C0007EEB0380003EEB0F006C133EEB81FC
380FFFF0000313C0C648C7FC1B2278A023>I<151FED3FC0EDFFE0EC01F1EDE3F0EC03E7
1407EDC7E016C091380FC380EDC000A24A5AA54AC7FCA490381FFFFE497F6D5BD9007EC7
FCA35CA6495AA5495AA5495AA5495AA45C131FA391C8FCA25BEA1C3E123EEA7F3C137CEA
FE78127CEA78F0EA3FE06C5A6CC9FC244582B418>I<141FECFFC04913E7903907E0EF80
90380FC07FEB1F8090383F003F013E1400137E5BA20001147E5B1203A248485BA449485A
A2120F12074A5AA21407A20003495A141F3801F07F3800FFF76D485AEB1F8FEB000FA24A
5AA4001C49C7FC123E007F137E147C00FE13FC387C01F8EB07E0383FFFC06C90C8FCEA03
FC21317DA023>I<EB07C048B47E485B7EEA000FA2495AA449C8FCA4137EA45BEC1FC0EC
7FE09038FDFFF83801FBE09038FF807CEBFE0049137E12035B5BA248485BA44848485AA3
4A5AEA1F80A2913807E0C016E0D83F00EBE1C0EC0FC1A2EDC380007E148316001587158E
48EB07FC007C6D5A00386D5A23357BB327>I<EB0380EB07C0EB0FE0A214C0A2EB070090
C7FCAAEA01F0EA03FC487EEA0E3EEA1C3FA21238A21270137EA212E0EA60FC1200485AA3
485AA3485A14C0380FC0E0EBC1C0A2EA1F81EB8380A2EB8700A2EA0F8E13FC6C5AEA01F0
13337AB118>I<EB07C048B47E485B7EEA000FA2495AA449C7FCA4137EA45B1578EC01FC
EC03FE3901F8078EEC0E1FEC183FEC307F3903F060FE14E09038F1C07C9038F380384848
C7FC13FE5B7F380FFFC080EBC7F0EBC1F8381F80FCA2150C150ED83F00131CA31518007E
143814F81570EC7CF048EB3FE0007CEB1FC00038EB0F8020357BB323>107
D<131F3807FF804813007EEA003FA2137EA45BA4485AA4485AA4485AA4485AA4485AA448
C7FCA4127EA21318131C485AA45B12F812FCEA7CE0EA3FC06C5A6CC7FC113579B314>I<
2703E003F8137F3C07F00FFC01FF80280FF83FFF0713E03B1C7C7C1F0F83903B7EF00F9E
01F026387FC013B8028001F07F1270020013E0017E14C0A248484948485A12601200A248
484948485AA34D5A4848137EA294381F818019C0484849EC8380EF3F03A2F00700484848
48133E180EA2183C48484848EB1FF8000F01016E5A6CC748EB07C03A227AA03F>I<3903
C007F0390FE01FFC6D487E391CF8F81F2638FDE0138090387FC00FD9FF8013C04813005B
5BA2D8E1F8EB1F8012611201A24848EB3F00A3157E485AA2EDFC18161C48481438EC01F8
A21670D81F8013F0166016E0EDF1C048C7EAFF806CEC7F00000E143E26227AA02B>I<14
FE903803FFC0010F13E090383F83F090387E00F84913FC4848137C4848137E485A120F5B
001F147F5B123F157E48C712FEA4007EEB01FC12FE15F81403007E14F0140715E0EC0FC0
003EEB1F80003FEB3F006C137E380FC1FC3807FFF06C13C0C66CC7FC202279A027>I<01
0F133F90393F80FFC002C113E0903973E7C1F09039E3FF01F89038E1FE00D9E3FC13FC38
01C3F85CA216FE48485A1201EA000716FC90380FC001A490391F8003F8A216F01507D93F
0013E0A2ED0FC0168090397F801F00153E6E5AECE1F89038FCFFF0EC7FC06EC7FC91C8FC
485AA4485AA4485AA2EA7FFFB57E91C8FC273080A027>I<903801F00C90380FFC1C9038
1FFE7C90383E0EF8EBFC07EA01F8EBF003D803E013F01207EA0FC0A2001FEB07E0138012
3FA2397F000FC0A4007EEB1F8012FEA3EC3F00A2127E5C14FEEA3E011303EA1F0F6CB45A
EA07FCEA01F0C7FC495AA4495AA4495AA248B5FC158015001E3079A023>I<3903C01F80
3907E07FE0390FF0FFF0391CF9E07838387FC0EC80FCEBFF013970FE03F813FCEC01F0EC
00E0D8E1F8130012611201A2485AA4485AA4485AA4485AA448C8FC7E120E1E227AA020>
I<EB03F0EB0FFCEB3FFEEB7C1FEBF807EBF00F0001131FEBE03F1203143E141CEBF00013
FCEBFFC014E06C13F014F86C13FC133FEB03FE1300147E123C007E137C12FEA248137848
13F838E001F0387003E0387C0FC0383FFF80381FFE00EA03F818227AA01F>I<130E131F
5BA3137EA45BA4485AA2B512E014F014E03803F000A3485AA4485AA4485AA448C7FCA214
C014E0387E01C0A2EB0380A2EB0700127C130EEA3E3CEA3FF86C5AEA07C0143079AE19>
I<EA01F0486C1307486CEB0F80D80E3E131F121C12181238017EEB3F001270A25B00E014
7E1260EA01F8A25D485AA34848485AA216601670913803F0E013C0A39039E007F1C0EC0F
E10003EB1FF19039F079F3803A01FFF0FF006C6C487E90381F803C24227AA029>I<D801
F01370486C13F83907FC01FCEA0E3E121C121800381300017E137C1270153C5B00E01438
1260EA01F8A21570485AA3484813E0A3EC01C0A29038C00380A29038E00700A2140E0003
5B3801F8383800FFF06D5AEB1F801E227AA023>I<01F81570D803FC010E13F8486C9038
1F01FCD80F1F133F001C150316010038150049017E137C1270173C137E00E04A13381260
C65AA24A481370EA01F8A34848484813E0A3EE01C0A201E013E0EE0380EBF0079238F007
00140F0001150E3A00FC3CF83C90397FF87FF86D486C5A90390FC00FC02E227AA033>I<
011F137C90387FC0FE9038FFE1FF3A01E1F38780390380FF073A0700FE0FC0151F000E90
38FC3F805AED1F00150E484848C7FC12181200A2495AA4495AA215061507391C0FC00E12
3E127F5DD8FE1F5B12FCD8783F5B903873E1E0393FE1FFC0D81FC05B260F803EC7FC2222
7CA023>I<EA01F0486C130E486C131FD80E3E133F121C12181238017E137E1270A25B00
E014FC1260EA01F8A2EC01F8EA03F0A33907E003F0A4EC07E013C0A3EC0FC0EBE01F0003
133FEBF0FF6CB512806C13DFEB3F1F1300EC3F00A2000E133E003F137E147C4813FC5C38
7E01F0387C03E0387807C0383C1F80D81FFFC7FCEA0FFCEA07F020317AA025>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmbx9 9 19
/Fs 19 117 df<EA0F80EA1FC0EA3FE0EA7FF0EAFFF8A5EA7FF0EA3FE0EA1FC0EA0F800D
0D7A8C19>46 D<143C14FC1303131FEA03FFB5FCA3EAFC1F1200B3B2007FB512FEA41F31
7AB02C>49 D<EB1FF890B57E000314E04814F8391FE07FFC393F001FFE6E7E486C6C1380
6D7ED8FFE014C08016E0A3EA7FC0EA3F80EA1F00C7FC16C05C1680A24A13005D4A5A4A5A
15E04A5A4A5A02FEC7FC495A903903F003E0EB07E0EB0FC0EB1F8090393E0007C05B4913
0F48B6FC5A5A5A5A5A481580B7FCA423317CB02C>I<EB0FFC90387FFFC048B512F03903
F81FF83907C00FFC48486C7ED81FC07F13E0D83FF0148013F8A41600EA1FF06C485AD803
805BC75B4A5A4A5AECFFE0013F5B92C7FC8115F09038003FF8EC0FFC6E7E816E138016C0
A2000F15E0EA1F80EA3FC0EA7FE0EAFFF0A316C0A2D87FE01480495AD83F801400001F49
5A390FF03FFC6CB55A6C14E0C61480D91FF8C7FC23327CB02C>I<153F5D5DA25C5C5C5C
A25C5C5C91B5FC14FBEB01F31303EB07E3EB0FC31483EB1F03133F137E13FC13F8EA01F0
1203EA07E0EA0FC01380EA1F005A127E5AB712FEA4C700071300A80107B512FEA427317E
B02C>I<000C140ED80FE013FE90B5FCA25D5D5D5D158092C7FC14FC14E001BCC8FC1380
A5EB83FC90389FFF8090B512E015F89038FC0FFC9038E003FE01C07F496C1380130016C0
C7FCA216E0A2120C123FEA7F8013C0EAFFE0A216C013C016806C485A01001400003E5C39
1F800FFC390FE03FF86CB55A6C14C0C691C7FCEB1FF823327CB02C>I<ED1F80A24B7EA2
4B7EA34B7EA24A7FA34A7FA24A7F15DFA2020F7F158F021F801507023F80143E81027E80
EC7C0102FC804A7EA20101814A137F0103814A133FA201078191B6FC4981A2498291C712
0F824982013E80017E82137C8201FC824980B500F0017FEBFFF0A43C347DB343>65
D<B812FCA4C69038F0003FEE07FE160316011600177EA2173EA3923803E03F171FA40307
1300A2150F153F91B5FCA4ECF03F150F1507A21503A592C8FCABB612FCA430337DB238>
70 D<003FB812F8A4D9F803EBC03FD87FC0ED07FC0180150301001501007E1600A2007C
177CA400FC177E48173EA4C71600B3A9011FB612F8A437327DB13E>84
D<EB7FFE0003B512E04814F84880391FF80FFEEC03FF6E13808016C06C5A6C5AEA0180C8
FC91B5FC131F48B6FC000713F8481300EA1FFCEA3FF0485A485AA56C6C5A5C263FF81F13
E06CB5EA7FFF6C497E0003EBF81F39007FC00728217EA02B>97 D<13FE12FFA4120F1207
ADEC07FE91383FFFC090B612F0829138F00FFC9138C003FE91380001FF491580A26F13C0
A317E0A917C0A34B138017006D5B9138C007FE9138F01FFC01FBB55A01F014E0D9E03F13
809026C007FCC7FC2B347EB331>I<903807FF80013F13F090B512FC48800007EB03FFEA
0FFCEA1FF813F0123F6E5A48486C5A153000FF91C7FCA9127F7F123FED0F806C7E6DEB1F
006C6C5B3907FF80FE0001EBFFFC6C14F0013F5B010790C7FC21217DA027>I<EB03FF01
1F13F0017F13FC48B57E0007EB01FF260FFC0013804848EB7FC049133F003FEC1FE0A248
5A16F0A2B7FCA401E0C8FCA3127FA27F123FED01F06C7E6C6C13036C6CEB07E03A03FFC0
1FC06C90B512806C6C1400011F13FC010113C024217EA029>101
D<16F890390FFC03FC90B5EACFFE000391B5FC48151F3A0FF807FC7F391FF003FE3A3FE0
01FF7E163C007F1580A6003F1500A26C6C485A6C6C485A6CB55A485C000E14C0261E0FFC
C7FC90C9FCA2123F7F90B512F06C14FEEDFF8016E06C15F06C15F8A2001F15FC5A3A7F80
001FFE90C71203481401A46C6CEB03FC6D13076C6CEB0FF8D81FFCEB7FF06CB612E00003
1580C6ECFE00010F13E028327EA12C>103 D<EA01F0EA07FC487EA2487EA56C5AA26C5A
EA01F0C8FCA713FE12FFA4120F1207B3A5B512E0A413357DB419>105
D<13FE12FFA4120F1207B3B3A6B512F0A414347DB319>108 D<3901FC1F8000FFEB7FF0
ECFFF801FD13FCECE7FE380FFFC76C1387A21407EC03FCEC01F89038FE00601500B1B512
F8A41F217EA024>114 D<9038FFE1C0000313FF120F5A383F803F387F000F007E130712
FEA26C90C7FC13E013FF14F06C13FC6C13FF15806C14C012076C14E0C66C13F01303EB00
1F0078130F00F813077E15E07E6C130F9038C03FC090B51280150000F913FC38E03FE01C
217DA023>I<133EA5137EA313FEA2120112031207121FB61280A4D807FEC7FCB0EC07C0
A70003EB0F8013FF6CEBFF006C5B6D5AEB0FF01A2F7EAE22>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmsy6 6 1
/Ft 1 123 df<13E0487EA56C5AA33878E3C0B512E0A33878E3C03800E000A3487EA56C
5A90C7FC13E0487EA56C5AA33878E3C0B512E0A33878E3C03800E000A3487EA56C5A132F
7CA31D>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmr9 9 76
/Fu 76 128 df<EC0FF0EC7FFC903803FFFE903807F01F90390FC0078090383F001F017E
EB3FC0137C13FC5B0001EC1F80ED0F0092C7FCA8ED0FC0B7FCA33901F8001F150FB3A648
6CEB1FE0267FFFC1B5FCA328357FB42B>12 D<EC0FF091B512C01303903807F01F90381F
C03FEB3F00137E137C01FC131F49130F1201ABB7FCA33901F8000FB3A7486CEB1FE0267F
FFE3B5FCA328357FB42B>I<DA0FF0EB7F80913AFFFC03FFE00103D9FE1F7F903B07F01F
3F80F8903B1FC00FFE003C90273F001FF813FC017E4948487E017C14E013FC4914C00001
021F6D5A030F147895C7FCA8187EB912FEA33B01F8000FC000187EB3A6486C496C13FF29
7FFFC1FFFE0F13F8A33D357FB440>I<01F81503D801FEED0780D807FF150F260F878015
00261E01E0143E6E147E263C00FE495A91397F800FF8007C91B5FC00780171495A913938
3FF1E000F8EC00035F4C5A160F94C7FC161E163E163C00785D4A13F8007C5D003C4A5AEC
E003D81E015C4A485A390F87800F2607FF0090C8FCD801FE131ED800F8133E90C748133E
0378EB7F809239F001FFC00201903803E1E09239E0078070DA03C01478020790380F0038
0380141C4A485A4A131E021E150E4A133E147C14785C13015C495A13074A131E49C7141C
49141F011E80491638017C91380780780178167049913803E1E00001923801FFC0499138
007F806C48ED3E00373C7CB740>37 D<121C127E127FEAFF80A213C0127FA2121D1201A4
EA0380A3EA0700A2120EA25A5A5A12200A187AB315>39 D<EB01C01303EB0780EB0F0013
1E5B133813785B485AA2485AA2485AA2120F90C7FC5AA2121E123EA3123C127CA512FCA2
5AAC7EA2127CA5123C123EA3121E121FA27E7F1207A26C7EA26C7EA26C7E13781338133C
7F7FEB0780EB03C01301124A79B71E>I<12C07E7E12787E7E120E120F6C7E6C7EA26C7E
A26C7EA27F1378137CA2133C133EA3131E131FA51480A2130FAC131FA21400A5131E133E
A3133C137CA2137813F85BA2485AA2485AA2485A48C7FC120E121E5A5A5A5A5A114A7BB7
1E>I<121C127E127FEAFF80A213C0127FA2121D1201A4EA0380A3EA0700A2120EA25A5A
5A12200A187A8815>44 D<B512F0A514057F921A>I<121C123E127FEAFF80A3EA7F0012
3E121C09097A8815>I<EB0FE0EB7FFC497E3903F83F803907E00FC0EBC007390F8003E0
001F14F0EB00014814F8A3007EEB00FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0EB
8003000F14E03907C007C0EBE00F3903F83F803900FFFE006D5AEB0FE01F347DB126>48
D<13075B5B13FF120FB5FC133F12F01200B3B3A2497E007FB51280A319327AB126>I<EB
3FC0EBFFF0000313FC380780FE380E003F48EB1F804814C0EC0FE05A007CEB07F0B4FC15
F813801403A2EA7F00A2001C1307C7FC15F0A3EC0FE015C0141F1580EC3F00147E147C5C
495A495A495A5C49C7FC131E5B4913385B485A491370485A48C7FC000E14F0001FB5FC5A
5AB612E0A31D327CB126>I<EB1FE0EB7FFC48B5FC3903E03F803907800FC0D80E0013E0
48EB07F0121FD83F8013F8EBC003A4381F8007D80F0013F0C7FCA2EC0FE0A2EC1FC01580
EC3F00EB01FEEB7FF814E014FCEB003FEC0F80EC07E015F0140315F815FC140115FEA212
3E127FEAFF80A315FCEB0003007E14F812780038EB07F06C14E0000FEB0FC03907E03F80
6CB51200C613FCEB1FE01F347DB126>I<EC03C01407A2140FA2141F143FA2147F14FF14
EF1301EB03CF148F1307140F130E131E131C13381378137013F0EA01E013C01203EA0780
13005A120E5A123C123812785AB71280A3C7380FC000A94A7E0107B51280A321337EB226
>I<000814C0381F800F90B5FC1580ECFE005C14F014C0D81C7CC7FC90C8FCA9EB0FC0EB
3FF8EBFFFC381DF07E381FC01F9038000F8015C0001E1307001C14E0000C14F0C71203A3
15F8A31218123E127F5AA215F0A2481307007814E012700078EB0FC0003814806CEB1F00
6C133E3807C0FC6CB45A6C13E038007F801D347CB126>I<14FE903807FF804913C09038
3F01E090387C00709038F801F03901F003F83803E007EA07C0A2EA0F80001FEB03F0EC01
E048C8FCA35A007E7FEB0FF8EB1FFE38FE3FFF9038700F809038E007C039FFC003E09038
8001F015F81300EC00FCA25A15FEA4127EA56C14FCA36CEB01F8A2D80F8013F0EC03E0EA
07C03903E007C03901F81F803900FFFE00EB3FFCEB0FE01F347DB126>I<1238123E003F
B6FCA34814FE15FCA20078C712380070147015E0A248EB01C0EC0380A2C7EA0700140E5C
A25C5CA25C1301A2495AA213075C130FA2131FA349C7FCA35BA55BA8137E133C20347CB1
26>I<EB0FE0EB7FFC90B5FC3901F01F803903C007C039078003E0380F00014814F0121E
003EEB00F8A4123FA290388001F0EA1FC09038E003E0D80FF813C09038FE07803907FF1F
006C13FE6C5B6C5BEB3FFC49B4FC48B51280D803E113C0D807C013E0390F803FF0391F00
1FF8003E1307EC03FC48130015FE48147EA2153EA4153C127C157C6C147815F06CEB01E0
390FC003C03907F01F800001B5120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EB
FFFE3801F83F3903E00F803907C007C0390F8003E0EA1F0048EB01F0A2007E14F8A300FE
EB00FCA515FEA4127E1401A27E14037E380F80063807C00E3803E01C3801FFF86CEBF0FC
EB3FE0EB020090C7FCEC01F8A3000F14F0381F8003D83FC013E0A2EC07C0EC0F80018013
00381F001E001E137C380F81F86CB45A6C13C0C66CC7FC1F347DB126>I<121C123E127F
EAFF80A3EA7F00123E121CC7FCAE121C123E127FEAFF80A3EA7F00123E121C09207A9F15
>I<EB7FC03803FFF84813FE381F807F393C001F80003814C00078130F00FE14E07EA412
7E003CEB1FC0C7FCEC3F80EC7F00147E5CEB01F0495A5C13075C49C7FCA2130EA2131E13
1CA890C8FCA7131C133E137F497EA36DC7FC133E131C1B357CB424>63
D<15E04A7EA34A7EA34A7EA3EC0EFEA3EC1C7FA34A6C7EA202787FEC701FA202F07FECE0
0FA2010180ECC007A2010380EC8003A249486C7EA3010E6D7E010FB5FCA24980011CC77E
A2496E7EA20178810170141FA201F08149140FA20001821607487ED80FF84A7EB549B512
E0A333367DB53A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161FEE
0FE0A217F0A617E0161F17C0EE3F80EE7F00ED01FEED07FC90B612F05E16FC9039FC0001
FE9238007F80EE1FC017E0EE0FF0160717F8160317FCA617F81607A2EE0FF0EE1FE0163F
EE7FC00003913803FF00B75A16F816C02E337DB236>I<DA07FC130C91393FFF801C91B5
12E0903A03FE01F03C903A0FF0003C7CD91FC0131E49C7EA07FC017E14035B4848140148
48140012074848157CA24848153CA2485AA2007F161CA390C9FC481600AB7E6D151CA312
3FA26C6C1538A26C7E17706C7E000316E06C7E6C6CEC01C0017EEC03806DEC0700D91FC0
130ED90FF0133C903903FE01F80100B55A023F13C0DA07FEC7FC2E377CB437>I<B77E16
F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF
1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE
3FC000014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7FC0001151FEE
07E01603A21601A21600A4030E1370A41700151EA2153E15FE90B5FCA3EBFC00153E151E
A2150E171CA3173892C7FCA41778A2177017F01601A21607160F0003157FB812E0A32E33
7DB234>I<B81280A33903FC00010001EC003FEE0FC01607A21603A21601A4EE00E0150E
A31700A2151EA2153E15FE90B5FCA3EBFC00153E151EA2150EA592C8FCAB487EB512FEA3
2B337DB232>I<DA07FC130C91393FFF801C91B512E0903A03FE01F03C903A0FF0003C7C
D91FC0131E49C7EA07FC017E14035B484814014848140012074848157CA24848153CA248
5AA2007F161CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F7F121FA2
6C7EA26C7E12036C7E6C7E017E14036D1407D91FC0EB0F7CD90FF0EB1E3CD903FEEBFC1C
0100B5EAF00C023F01C0C7FCDA07FEC8FC33377CB43C>I<B5D8FE03B512F8A3000190C7
3807FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335337EB23A
>I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<013FB51280A3903900
1FF0006E5AB3B0121C127FA2EAFF80A25DEB001F7E007C495A003891C7FC6C137E380F81
FC6CB45A6C13E0C66CC8FC21357EB227>I<B500FE90380FFFF8A3000190C7000313006C
48EC01F85F17C04C5A4CC7FC160E163C5E5E4B5A4B5A4B5A4BC8FC151E5D5D15F814014A
7E4A7E140EEC1C7F4A6C7E14704A6C7E6D486C7E02807FEC0007496D7E8215016F7E8282
707E707EA2707E707E8316038383486C913807FF80B500FE013F13FCA336337EB23C>I<
B512FEA3D803FEC9FC6C5AB3A9EE0380A416071700A45EA25EA25E16FF4B5A0003140FB7
FCA329337DB230>I<D8FFFE923803FFF8A3D803FF923807FE006C5FD9DF80140EA3D9CF
C0141CA3D9C7E01438A2D9C3F01470A3D9C1F814E0A3D9C0FCEB01C0A2027EEB0380A36E
EB0700A391381F800EA36E6C5AA26E6C5AA36E6C5AA36E6C5AA2913800FDC0A3ED7F80A3
486C6DC7FCD80FF84B7EB5D8801E90387FFFF8A33D337CB246>I<D8FFFE91383FFFF87F
A2C66D010113006EEB007C1738EBEFE0EBE7F0A2EBE3F8EBE1FC8013E0147F81143F6E7E
81140F6E7E6E7EA26E7E6E7E8181ED3F8016C0151FED0FE016F01507ED03F8ED01FCA2ED
00FE167F17B8163FEE1FF8A2160F1607A216031601486C1400EA07FCB500E014781738A2
35337EB23A>I<EC07FC91387FFFC049B512F0903907FC07FC90390FE000FED93F80EB3F
8049C76C7E01FE6E7E48486E7E48486E7E49140148486E7E000F8249157E001F167FA248
48ED3F80A2007F17C0A290C9121FA24817E0AB6C17C06D153FA3003F17806D157FA2001F
17006D5D000F5E6C6C4A5AA26C6C4A5A6C6C4A5A6C6C4A5A017F4A5A6D6C495AD91FE001
FFC7FC903907FC07FC0101B512F06D6C13C0DA07FCC8FC33377CB43C>I<B612FEEDFFC0
16F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2161F17C0
EE3F80EE7F0016FEED07FC90B612F016C04BC7FC01FCC9FCB3487EB512F8A32C337DB234
>I<B612FCEDFF8016F03A01FE0007FC0000EC01FEED007F707E707E83160F83A75F161F
5F4C5A4CC7FCED01FEED07FC90B612F01680829039FE001FE0ED03F06F7E6F7E82167E16
7FA683A4181CA2EE3FC0A2486C021F1338B500FE14E093380FF070933803FFE0C96C13C0
9338003F8036357EB239>82 D<90381FE00390387FFC0748B5FC3903F01F8F39078003DF
48C7B4FC001E804880A24880A200F880A381A27EA2007E91C7FC127F13C0EA3FF013FF6C
13F06C13FF6C14C06C80C614F8013F7F01037FEB003FEC03FF1400ED3F80151F16C0150F
126000E01407A47E1680A26C140F16006C5C6C141E6C6C5BD8FBE013F839F1FC03F000E0
B55A011F138026C003FEC7FC22377CB42B>I<007FB712FEA39039C007F001D87E00EC00
7E007C163E0078161E170E127000F0160FA3481607A6C71500B3AB4A7E011FB512FCA330
337DB237>I<B500FE90383FFFF8A3000190C7000113006C48EC007C1738B3AF017E5DA2
137F7F5F6D7E4C5A6D6C495A6D6C49C7FC6D6C130E6D6C133C9039007F01F86EB45A020F
13C0DA01FEC8FC35357EB23A>I<B500F0903807FFF8A3D807FEC813C06C48ED3F000001
163C171C6C6C5DA26D15786D1570A26E14F0013F5DA26D6C495AA26E1303010F5DA26D6C
49C7FCA2800103140EA26E131E0101141CA26D6C5BA26E13786E1370A2ED80F0023F5BA2
91381FC1C0A215E3020F5BA2DA07F7C8FCA215FF6E5AA36E5AA26E5AA3157035357EB23A
>I<B5D8F007B590381FFFF0A3D803FEC7D83FF0010313006C48DA1FC0EB00FC1A786D6E
7E00001970A27114F0017F60A24C7E6D6C4C5AA24C7E6D6C01394A5AA2EE79FE6D6C0170
4AC7FCA2EEF0FF6D6C496C130EA21501D903F8496C6C5AA3913BFC03801FC03C01011738
A2913BFE07000FE07801001770A2DAFF0E903807F0F0027F5EA24BEB03F9DA3F9C5DA203
B8EB01FDDA1FF8ECFF80A36E486D90C8FCA36E48147EA36E48143CA34C357FB24F>I<B5
00F8903801FFFEA3000301809038007FE0C690C8EA3F00171E6D6C5C6D6C143817786D6C
14705F6D6C13016D6C5C16036D6C495A6D6C91C7FC5E6D6C130E5E91387F803C91383FC0
3816786E6C5A6E6C5A15F1913807FBC05EEC03FF6E90C8FC5D1400B14A7E91B512FCA337
337FB23A>89 D<003FB612FCA39039FC0003F801E0EB07F00180130F90C713E0003EEC1F
C0003C143F007C15800078EC7F005D5D007013014A5A5D14074A5AC75B141F5D4A5A147F
92C7FC14FE13015C495A13075C495A011F141C5C133F495A91C7FC5B4848143C5B12035B
48481478120F4914F848481301003F140349130F48C7127FB7FCA326337CB22F>I<EAFF
F0A4EAF000B3B3B3ADEAFFF0A40C4B79B715>I<EAFFF0A41200B3B3B3AD12FFA40C4B7F
B715>93 D<EB7F803803FFF04813FC380F80FE381F003F486C6C7E6D6C7EA26E7EEA1F80
EA0F00C7FCA3EB03FF133F3801FFC73803FC07EA0FE0EA1FC0EA3F80EA7F00A200FEECE1
C0A4140FA2007F131B393F8033F33A1FC0E1FF80260FFFC113006CEB80FE3900FE007C22
237DA126>97 D<EA03F012FFA312071203AEEC3FC0ECFFF001F313FC9038F7C0FE9038FE
003F49EB1F8049EB0FC05BED07E0A216F01503A216F8A816F0A2150716E0A26DEB0FC016
806DEB1F0001EE133E9038C781FC9038C3FFF8018113E0C7EA3F8025357EB32B>I<EB07
F8EB3FFF90B512803901FC07C03903F003E03907E007F0380FC00FEA1F80A2393F0007E0
EC03C04890C7FC127EA212FEA8127E127FA26C14387F001F14706C7E6C6C13E03903F001
C03901FE07806CB51200EB3FFEEB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB0F
F0EB7FFC90B5FC3901FC0FBF3907E001FF48487E497F001F8048C7FCA25A127EA212FEA8
127EA2127F7EA26C6C5B5D6C6C5A6C6C4813803A03F81F3FFC3801FFFE38007FF8D91FE0
130026357DB32B>I<EB0FE0EB7FFC497E3801F83F3903E00F803907C007C0390F8003E0
121FD83F0013F014015A007E14F8A212FEB6FCA348C8FCA5127E127FA26C14386C7E1570
6C7E6C6C13E03903F001C03901FE07806CB51200EB3FFEEB07F01D237EA122>I<14FEEB
03FF010F138090381F8FC090383E1FE0137C13F81201EC0FC03903F0078091C7FCABB512
F0A3D803F0C7FCB3A7487E387FFFE0A31B357FB417>I<151F90391FC07F8090387FF0FF
3A01FFFDE7C03903F07F873907C01F073A0F800F8380001FECC000EB00074880A76C5CEB
800F000F5C6C6C48C7FCEBF07EEBFFFC380C7FF0EB1FC0001CC9FCA2121EA27EEBFFFE6C
EBFFC015F06C80000F80391F0001FE003EEB007F48141F168048140FA5007CEC1F00A200
3F147E6C6C5B390FF007F80003B512E0C61480D91FFCC7FC22337EA126>I<EA03F012FF
A312071203AEEC1FC0EC7FF09038F1FFF89038F3C0FC9038F7007E13FE497F5BA35BB348
6CEB7F80B538C7FFFCA326347EB32B>I<1207EA0F80EA1FC0EA3FE0A3EA1FC0EA0F80EA
0700C7FCA9EA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EB01C0EB03E0
EB07F0EB0FF8A3EB07F0EB03E0EB01C090C7FCA9EB01F8137FA313031301B3AF1218127E
00FF13F01303A214E0387E07C0387C0F80383FFF00EA1FFCEA03F0154385B217>I<EA03
F012FFA312071203AF913807FFE0A36E1300EC01F8EC03E05D4A5A020EC7FC143C5C5C13
F1EBF3F813F7EBFEFCEBFC7EEBF83E497E816E7E1407816E7E1401816E7E81486C7FB500
C313F0A324347EB329>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<
2703F01FE013FF00FF90267FF80313C04A6C487F903BF3C0FE1E07F03C07F7003F3801F8
D803F6143001FC90391FE000FC495CA3495CB3486C496C487EB53BC7FFFE3FFFF0A33C21
7EA041>I<3903F01FC000FFEB7FF09038F1FFF89038F3C0FC3907F7007EEA03FE497F5B
A35BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE90B57E3901F80FC039
03E003E048486C7E48486C7E001F8090C7127C48147E003E143E007E143FA300FE1580A8
007E1500A2007F5C6C147EA26C6C5BA26C6C485A6C6C485A3903F80FE0C6B51280D93FFE
C7FCEB07F021237EA126>I<3903F03FC000FFEBFFF001F313FC9038F7C0FE3907FE007F
6C48EB3F8049EB1FC049130F16E0150716F0A2150316F8A816F01507A216E0150F6D14C0
ED1F806DEB3F006D137E9038F781FC9038F3FFF801F113E09038F03F8091C8FCAA487EB5
12C0A325307EA02B>I<90380FE00790383FFC0FEBFFFE3801FC0F3903F0039F3907E001
DF48486CB4FC48487F123F90C77E5AA2127E12FEA8127E127FA27E6D5B121F6D5B6C6C5A
3907F007BF3903F81F3F3800FFFEEB7FF8EB0FE090C7FCAAED7F8091380FFFFCA326307D
A029>I<3803E07C00FF13FF01E113809038E39FC03807E71FEA03EE9038EC0F809038FC
070049C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06000713CE4813FEEA1F00003C
133E007C131E127800F8130EA37E6C90C7FCEA7F8013F86CB47E6C13E06C13F86C7F0001
7F38000FFF1300EC3F800060131F12E0140F7EA27E15006C5B6C133E38FF80FC38F7FFF8
00E113E038C07F8019237EA11E>I<1370A513F0A31201A212031207120F121FB512FEA3
3803F000AF1407A8140EEA01F8A23800FC1CEB7FF8EB3FF0EB0FC0182F7FAD1E>I<D803
F0133F00FFEB0FFFA30007EB007F000380B3A25DA25D12019039F801BF803A00FC073FFC
EB7FFEEB3FFCD907F0130026227EA02B>I<B53801FFF0A33A0FF0007F806C48EB1F006D
131E0003141C153C6C6C1338A26D137800001470A2017E5BA2EB7F01013F5BA290381F83
80A214C7010F90C7FCA2EB07EEA214FE6D5AA26D5AA36D5AA224217E9F29>I<B53A1FFF
C3FFF0A33C07F800FE007F804949EB3E000003161CA26D486C133C00011638A26D486C13
780000029F1370A2D9FE07EB80F0017E010F5BA2D97F0F13C190263F0E075BA2029E13E3
90261F9C035BA202FC13F790260FF80190C7FCA216FF6D486C5AA36D48137CA36D481338
34217F9F37>I<B53803FFF8A32603FC0013800001ECFC0000005C017E5B90387F01E090
383F83C0011F5BEB0FC7D907EFC7FC14FE6D5A6D5A6D7E80497E5BECDF809038079FC090
380F0FE0EB1E0790381C03F090383C01F801787FEBF0000001147ED80FF813FF26FFFC03
13FCA326207F9F29>I<3A7FFF80FFF8A33A07F8003FC06C48EB1F806C6CEB0F00150E6D
131E0000141CA2017E5BA2017F13786D1370A26D6C5AA214C1010F5B14E301075BA2D903
F7C7FCA214FF6D5AA26D5AA31478A21470A214F05CA2495A127CEAFE035C49C8FC5BEAFC
1EEA783CEA3FF86C5AEA07C025307F9F29>I<003FB512F0A39038800FE0393E001FC000
3C14800038133F0078EB7F0014FE00705B1301495A495A00005B495A131F495AEC007013
7E13FE485A485A4913F01207484813E0381FC0011380003F1303387F001FB6FCA31C207E
9F22>I<B712F8A32503809426>I<001C1370007E13FC38FF01FE1383A31301387E00FC00
1C1370170979B226>127 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv cmr6 6 5
/Fv 5 53 df<1438B2B712FEA3C70038C7FCB227277C9F2F>43 D<137013F0120712FFA2
12F91201B3A6B512E0A313217AA01E>49 D<EA01FC380FFF804813C0383C0FE0387003F0
387C01F8EAFE0014FCA2147C127C003813FCC7FC14F8130114F0EB03E0EB07C01480EB0F
00131E13385B3801E01CEA038038070038120E5A383FFFF85AB512F0A316217CA01E>I<
13FE3803FFC04813E0380F03F0381E00F8003F13FC147C138013006C13FC000C13F8C7FC
EB01F0EB03E0EB0FC03801FF00A2380003E0EB00F8147C147E143E143F127CA212FEA214
7E5A007813FC383E01F8381FFFF0000713C00001130018227DA01E>I<14E01301130313
07A2130F131FA2133B137313E3A2EA01C3EA0383EA0703A2120E121CA21238127012E0B6
FCA3380003E0A6EB7FFFA318227DA11E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw cmr7 7 9
/Fw 9 92 df<1306130C13181330136013E0EA01C0EA0380A2EA07005AA2121EA35AA312
7C1278A412F8AD1278A4127C123CA37EA37EA27EEA0380A2EA01C0EA00E0136013301318
130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C013E0A2EA00F0A3
1378A3137C133CA4133EAD133CA4137C1378A313F0A3EA01E0A213C0EA0380A2EA070012
0E120C5A5A5A5A0F3B7DAB1A>I<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307007C14C0A4
00FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F80
1B277EA521>48 D<13381378EA01F8121F12FF12FE12E01200B3AAB512F8A315267BA521
>I<13FF000313E0000F7F381E07F8383801FC486C7E0078137F00FC7F6C1480A2141FA2
127CC7123F1500A2147EA25C5C495A495AEB078049C7FC131E5B13709038E00380EA01C0
EA03803907000700120E1218003FB5FC5AB55AA319267DA521>I<13FF000713E0487F38
1F01F8383C00FC147E007E137F80A3003C5BC7127EA25C5C495AEB0FE03801FF8091C7FC
380003E0EB00F8147C147E80A21580A21238127C12FEA21500485B0078137E5C383F03F8
6CB45A000713C0C690C7FC19277DA521>I<1438147814F8A2130113031307A2130E131C
1338A2137013E0A2EA01C0EA0380EA0700A2120E5A121812385A5AB612E0A3C7EAF800A8
90383FFFE0A31B277EA621>I<EAFFC0A3EAE000B3B3B1EAFFC0A30A3B7AAB13>91
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmr10 10 83
/Fx 83 128 df<DA07FC13FC91393FFF07FF49B5009F1380903B03FC07FF8FC0903B0FE0
03FE0FE0903A1FC007FC1F90383F800FD97F0013F8017EED0FC001FE903907F007804992
C7FC1201ACB812F8A32801FC0007F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30
>11 D<EC07F8EC3FFE49B57E903903FC07C090390FE001E090381FC0034948487E90387F
000F137E13FE496D5A00016E5A6F5A92C8FCA9ED07F0B7FCA33901FC001F1507B3AA486C
497E267FFFE0B512C0A32A3B7FBA2E>I<EC07FC91387FFF7049B512F0903803FC079038
0FE00FEB1FC0EB3F005B017E130713FE5B1201ACB7FCA33901FC0007B3AB486C497E267F
FFF1B512C0A32A3B7FBA2E>I<DA07FCEB0FF0DA3FFFEB7FFC49B50083B5FC903C03FC07
C7F80F80903C0FE000FFC003C0494848EB800749484849487E49484848131F017E5C13FE
494A6D5A000102036E5A72C7FC95C8FCA9F00FE0BAFCA33C01FC0003F8003F180FB3AA48
6C496C497E267FFFF0B500E3B51280A3413B7FBA45>I<001E130F003FEB1F80397F803F
C039FFC07FE0A201E013F0A2007F133F003F131F001EEB0F7000001300A4484813E0A339
038001C0A23907000380A2000EEB070048130E003C131E0038131C001013081C1A7DB92A
>34 D<017C166048B416F0486D14012607C3C05D260F01E01403486C6CEC0FC0001E017C
4A5A003E017F147F91273FE003FFC7FC48013BB55A023814BE91391C0FFC3C00FC91C75A
17F85F4C5A16035F4C5A160F94C8FC007C151E4A133E163C6C5D4A13F8001E5D001F4948
5AD80F0113032607C3C05B6CB448485A6CEB000FD8007C91C9FC90C7001EEB07C0033EEB
1FF0033C497E4BEB7C3C03F8497E9239F001F00EDA01E0497E0203130303C0EC03809139
078007C0140F1500021E010FEB01C0143E143C5C14F85C495A13035C495A010F0207EB03
8091C7FC131E013EEC03E0013CEE070049140101F8EDF00E49913800F81E4848ED7C3C00
03EE3FF8496F5A6C48ED07C03A437BBD45>37 D<121E123FEA7F80EAFFC0A213E0A2127F
123F121E1200A4EA01C0A3EA0380A2EA0700A2120E5A123C123812100B1A7AB917>39
D<14E01301EB03C0EB0780EB0F00131EA25B5B13F85B12015B12035B1207A2485AA2121F
90C7FCA25AA2123EA2127EA5127C12FCB2127C127EA5123EA2123FA27EA27F120FA26C7E
A212037F12017F12007F13787F7FA27FEB0780EB03C0EB01E01300135278BD20>I<1260
12F012787E7E7EA26C7E6C7E7F12017F12007F1378137CA27FA2133F7FA21480A2130FA2
14C0A5130714E0B214C0130FA51480A2131FA21400A25B133EA25BA2137813F85B12015B
12035B485A48C7FCA2121E5A5A5A126013527CBD20>I<EB0380497EA7397803803C00FC
147E00FE14FE397F8383FC393FC387F8390FE38FE03903FBBF803900FFFE00EB3FF8EB0F
E0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387F8397F8383FC39FE0380FE00FC14
7E0078143C390007C000A76D5A1F247BBD2A>I<15301578B3A6007FB812F8B912FCA26C
17F8C80078C8FCB3A6153036367BAF41>I<121E123FEA7F80EAFFC0A213E0A2127F123F
121E1200A4EA01C0A3EA0380A2EA0700A2120E5A123C123812100B1A7A8917>I<B512FC
A616067F941C>I<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A7A8917>I<150C15
1EA2153CA31578A315F0A3EC01E0A3EC03C0A3EC0780A3EC0F00A3141EA35CA35CA35CA3
495AA3495AA2495AA349C7FCA3131EA35BA35BA35BA3485AA3485AA3485AA348C8FCA312
1EA35AA35AA35AA212601F537BBD2A>I<EB03F8EB1FFF017F13C09038FE0FE03901F803
F048486C7E48486C7E4848137EA248487FA2003F1580A290C7121F4815C0A64815E0B36C
15C0A56C6CEB3F80A3001F1500A26C6C137EA26C6C5B6C6C485A6C6C485A3900FE0FE090
387FFFC0011F90C7FCEB03F8233A7DB72A>I<EB01C013031307131F13FFB5FCA2131F12
00B3B3A8497E007FB512F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FC0390780
0FE0390E0007F0486D7E48806E7E5A6E7E127CB4FC16807F157FA26CC7FCA2001C14FFC8
FC1600A25C5D5D14035D4A5A4A5A5D4A5A4AC7FC143E5C5C495A495A495A5C49C8FC011E
EB03805B5B491307484814005B485A48C75A48B6FC5A5A485CB6FCA321387CB72A>I<EB
07F8EB3FFF4913C03901F80FE03903E003F0D807807F496C7E488013C0486C6C7EA4120F
495AD803805BC7FCA25D14035D4A5A5D4A5AEC7F80D91FFEC7FC5CECFF809038000FE0EC
03F06E7E6E7E81157F1680A2ED3FC0A216E0A2123E127F487EA316C090C7FC48147F007C
158012706CECFF006C5C000F495A3907C003F83903F80FF06CB512C06C6C90C7FCEB07F8
233A7DB72A>I<157815F8A214011403A21407A2140F141FA2143F147B147314F3EB01E3
14C31303EB07831403130F131E131C133C1378137013F0EA01E013C012031380EA07005A
120E121E5A123812785AB712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<00
04140C000F143C9038F003FC90B55A5D5D158092C7FC14FC000E13F090C9FCABEB07F8EB
1FFE90387FFF809038F80FC0390FE007E090388003F0496C7E000E6D7E1206C87EA2157F
A31680A31218123E127F5AA316005A00785C00705CA26C495A5D6C495A6C495A6C6C485A
3903E03F806CB5C7FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90
380FE03E90381F000F013E5B49EB3F8049137F485A485A120749EB3F00000F141E001F91
C7FC5BA2123FA3387F0020EB03FF4913C0497F39FF1C03F090383000F849137C157E497F
A2491480151F16C0A290C7FC16E0A47EA57E6D14C0A2121FED3F80120F6D14000007147E
6C6C137C6D5B6C6C485A3900FE07E090383FFFC06D90C7FCEB03FC233A7DB72A>I<1238
123C123F90B612E0A316C0481580A216000078C7120E00705CA25D00F05C5A5D4A5AC7FC
4A5A4AC7FC140EA25C143C14381478147014F0A2495AA21303A2495AA2130FA3131F5CA3
133FA5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF4913C09038FC07E03901F001
F03903C000F8157C48487F120F90C7FC815AA37FA26D133EA2D80FF0133C6D137CD807FE
5B6D5B6CEBC3E06CEBE7C06CEBFF806D48C7FC6D7E010F7F013F13E0497FD801F813FC39
03E03FFE3807C01F390F8007FF48486C1380001E1300003EEC7FC048141FED0FE0A24814
07A21503A416C0127CED07807EED0F006C141E6C6C5BD807E013F83903FC03F0C6B55A01
3F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F7F9038FC07E03901F001F04848
6C7E48487F000F147C4848137E153E003F143F48C7FC1680A248141F16C0A516E0A47E15
3FA27E7F001F147FA26C6C13DF12073903E0019F3901F8071F2600FFFE13C0EB7FFCEB1F
F8EB00801400ED3F80A31600A2000F147E487E486C5B5D14015D49485A6C48485A001EEB
1F80260FC07FC7FC3807FFFC000113F038003FC0233A7DB72A>I<121E123FEA7F80EAFF
C0A4EA7F80EA3F00121EC7FCB0121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A247AA3
17>I<121E123FEA7F80EAFFC0A4EA7F80EA3F00121EC7FCB0121E123FEA7F8012FF13C0
A3127F123F121F1201A4EA0380A312071300A2120E121E121C5AA212100A347AA317>I<
007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F836167B9F41>61
D<1538157CA315FEA34A7EA34A7FA34A7F153FA2020F7FEC0E1FA2021E7FEC1C0FA2023C
7FEC3807A202787FEC7003A202F07FECE001A20101804A7EA20103814A137FA201078191
C7123F91B6FC4981A2010EC7121F011E81011C140FA2013C8101381407A2017881017014
03A201F08116011201486C81D80FFE02071380B500C090B512FEA3373C7DBB3E>65
D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A65FA2
16035F4C5A160FEE1FE0EE7FC04B485A91B548C7FCA2707E91C7EA3FE0EE0FF0707E707E
707E707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C0
94C7FC16F832397DB83B>I<4AB4EB0180020FEBE003027F13F8903A01FF807E07903A03
FC000F0FD90FF0EB079FD91FC0EB01DF4948EB00FF49C8127F13FE4848153F4848151FA2
4848150F120F5B001F1607A2485AA21703127FA25B94C7FC12FFAB127FA26DED0380A212
3FA36C7EEF0700120F7F0007160E6C7E5F6C7E6C6C5D017F5D6D6C14F06D6C495AD90FF0
495AD903FC010FC7FC903901FF807E6D6CB45A020F13F002011380313D7BBA3C>I<B712
C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018
C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF
7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F>I<B812FC
A30001903880001F6C90C71201707E177E173E171EA2170EA4170F83ED01C0A394C7FCA3
1503A21507151F91B5FCA3EC001F15071503A21501A218E0A3170192C713C0A41703A3EF
0780A2170FA2171F173F17FF486D010F1300B9FCA333397DB839>I<B812F8A300019038
80001F6C90C71203EE01FC1600177C173CA2171CA4171E170EA2ED0380A21700A41507A2
150F153F91B5FCA3EC003F150F1507A21503A692C8FCAD4813C0B612C0A32F397DB836>
I<DBFF8013C0020FEBF001023F13FC9139FF803E03903A03FC000F87D907F0EB03CFD91F
C0EB01EF4948EB007F49C8FC01FE153F4848151FA24848150F485A000F16075B001F1603
A2485AA21701127FA25B94C7FC12FFAA93B6FC127FA26D9138007FE0EF3FC0123FA36C7E
A26C7EA212076C7E6C7EA26C7E017F157F6D7ED91FE014EFD907F0EB01C7D903FCEB0783
903A00FFC03F0191393FFFFE00020F01F8130002001380383D7CBA41>I<B648B512FEA3
0001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB648B512FEA3
37397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>I<017FB512
C0A39039003FF800EC0FF0B3B3A3121C127FA2EAFF80A25DEB001FA2007C5C0078495A12
38001E49C7FC380F81FC6CB45A000113E038007F80223B7CB82B>I<B60107B5FCA30001
0180010013F06C90C8EA7F80053EC7FC5F17705F4C5A4C5A4CC8FC160E5E5E5E5E4B5A4B
5A4BC9FC150E5D153C157E15FE4A7E4A7FEC077F91380E3FC0021C7FEC381F4A6C7E02E0
7FECC0074A6C7E02007F15016F7E83167F707E83161F707E831607831603707E83828484
486D4913F0B6011FEBFF80A339397DB841>I<B612E0A3000101C0C8FC6C90C9FCB3AD17
38A517781770A417F0A21601A216031607160FEE3FE04890388001FFB8FCA32D397DB834
>I<B56C92380FFFF8A300016D92381FFC006C60D9EFE0153BA3D9E7F01573A3D9E3F815
E3A2D9E1FCEC01C3A3D9E0FEEC0383A3027FEC0703A26E6C130EA36E6C131CA36E6C1338
A26E6C1370A36E6C13E0A2913901FC01C0A3913900FE0380A392387F0700A2ED3F8EA3ED
1FDCA3ED0FF8A26F5A487E487ED80FFE6D48497EB500E00203B512F8A2ED01C045397DB8
4C>I<B591380FFFFE80A2C66D010013E06EEC3F80EF1F00D9EFF0140E8013E7EBE3FC80
13E1EBE0FF81147F81143F6E7E81140F6E7E8114036E7E8180ED7F8016C0153FED1FE016
F0150FED07F816FC1503ED01FE16FF81EE7F8E17CE163FEE1FEE17FE160FA216071603A2
16011600A2486C157E486C153EEA0FFEB500E0141E170EA237397DB83E>I<EC03FF021F
13E091B512FC903901FE01FE903A07F8007F80D90FE0EB1FC0D93F80EB07F049C76C7E01
FE6E7E0001824914004848157F0007178049153F000F17C049151F001F17E0A24848ED0F
F0A3007F17F8491507A300FF17FCAC6C6CED0FF8A4003F17F06D151F001F17E0A26D153F
000F17C0000717806D157F6C6CEDFF0000015E6D14016C6C4A5A6D6C495A6D6C495A6D6C
495AD907F8EB7F80902703FE01FFC7FC0100B512FC021F13E0020390C8FC363D7BBA41>
I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE16
01A217FFA717FEA2160317FC17F8EE07F0EE0FE0EE3FC0923801FF8091B5EAFE0016F816
C091C9FCB3A4487FB6FCA330397DB839>I<B612FEEDFFE016F8000190388007FE6C90C7
6C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5A4C5AEEFF80DB07FEC8FC
91B512F816E0A291380007F8ED01FC6F7E167F707E83161F83A683A560F00380EE0FF8A3
486D0107EB0700B6EB03FC933801FE0E933800FFFCCAEA3FF8EF07F0393B7DB83D>82
D<D90FF813C090383FFE0190B512813901F80FE33907E001F7390F80007F90C7123F4814
1F003E140FA2481407A200FC1403A415017EA27E6C91C7FC7F13E0EA3FF8EBFF806C13F8
6CEBFF806C14E06C14F86C806C80013F7F01071480D9007F13C0020713E0EC007FED1FF0
150F150716F81503126012E01501A47E16F0A26C14036C15E0A26CEC07C06CEC0F80D8FB
C0EB1F00D8F9F0133ED8F0FF13FC39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<
003FB812E0A3D9E003EB003F90260001FE1307007EEE03F0007C160100781600A3007017
70A400F01778481738A4C71600B3B0913807FF80011FB612E0A335397DB83C>I<B69038
0FFFFEA300010180010013E06C90C8EA3F80EF1F00170EB3B27F5FA280013F5DA26D6C5C
130F6E5C01074A5A6D6C13036D6C495AD900FE011FC7FC91383F807C6EB45A020713E002
001380373B7DB83E>I<B500FC91B51280A30003018091381FF8006C90C8EA07E0606C70
5AA26D6C4AC7FCA280013F150EA26E141E011F151CA26E143C010F1538A26D6C5CA28001
035DA26E130101015DA26E13036D5DA26E6C48C8FCA215C0023F130EA2EDE01E021F131C
A2EDF03C020F1338A26E6C5AA215FC02035BA215FF6E5BA36E5BA26FC9FCA3153EA3151C
393B7EB83E>I<B5D8FE01B5D8FC01B512C0A300039026C0000790C7381FFC006C90C76C
48EC07F06C735A04015E1A016D6C6E4A5AA36D6C4DC7FC4C7FA26E5F011F9126073FC013
0EA26E171E010F020F6D131CEE0E1FA26D6C011E6D5BEE1C0FA26D6C5F4C6C7EA26E17F0
01014A6C6C5BA36D6C01F06D485AEEE001A2DA7F804B5A923981C000FFA203C115079126
3FC380D97F87C8FCA203E3158FDA1FE715CE93C7123FA26EB415FC4B141FA202075E4B14
0FA36E486E5AA302015E4B1403A202005E4B1401523B7FB855>I<B500FE91387FFFE0A3
000101E091380FFE006C49EC07F0017F6F5A606D6C5D6D6C140795C7FC6D6C140E171E6D
6C141C6D6C143C17386D6C14785F6D6D5B91387FC0015F91383FE0035F91381FF0076E6C
48C8FC160E913807FC1E161C913803FE3C913801FF385E6E13F05E157F6F5AB3A24B7E02
3FB512C0A33B397FB83E>89 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91
D<48148039038001C00007130301001380000EEB070048130EA2485BA2485BA3485BA400
EFEB778039FF807FC001C013E001E013F0A2007F133FA2393FC01FE0391F800FC0390F00
07801C1A76B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<5AEA038012
071300120E5AA25AA25AA35AA412EFEAFF8013C013E0A2127FA2EA3FC0EA1F80EA0F000B
1A7BB917>96 D<EB3FE0EBFFFC000313FF3907C03F80390F800FC0486C6C7E01E07F6E7E
A2380FC001D807807FEA0300C7FCA414FF130FEB7FF13801FF01EA07F8EA0FF0EA1FE0EA
3FC0EA7F80A2D8FF00141CA41403A2387F800714063A3FC01C7E383A1FF0787FF83A0FFF
F03FF0000301E013E03A007F000F8026277DA52A>I<EA03F812FFA3120F1203B0EC0FE0
EC7FFC9038F9FFFE9039FBE03F809039FF800FC09039FE0007E049EB03F0A249EB01F816
FCA216FE1500A216FFA916FEA3150116FCA2ED03F86D14F0ED07E06DEB0FC09039E7801F
809039E3E07F009038C1FFFE9038807FF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF80
017F13E09038FE01F03901F800F83903F001FC3807E003EA0FC0121F90388001F8003FEB
00F01560007F140090C8FCA25AA97EA27FA2003F140E7F001F141C6C7E000714386C7ED8
01FC13F03900FF03E090387FFFC0011F1300EB07F81F277DA525>I<ED1FC0EC07FFA3EC
007F151FB0EB07F8EB1FFE90387FFF9F9038FE07DF3901F800FF4848137F4848133F4848
131F121F485AA2127F90C7FCA35AA97EA27F123FA2121F6C6C133F157F6C6C13FF3A03F0
01DFF03A01FC079FFF39007FFF1FEB3FFED907F013C0283B7DB92E>I<EB07F8EB1FFF01
7F13809038FC0FC03901F003E03903E001F0000714F8390FC000FC121F4913FE003F147E
A248C7127FA35A90B6FCA390C8FCA57EA27F123F15076C7E150E6C7E0007141C6C6C133C
D801FC13783900FF01F090383FFFC06D1380903803FC0020277EA525>I<147E903803FF
80010F13C090381FC7E090383F07F0EB7E0F13FE13FC0001EB07E09038F803C0000390C7
FCADB512FCA3D803F8C7FCB3AB487EB512F8A31C3B7FBA19>I<ED03E090390FF00FF090
393FFC1FF890B5EA3C7C3A01F81FF0FC3A03E007C07C3A07C003E038000FECF000001F80
EB8001003F80A7001F5CEBC003000F5C00075C6C6C485A9038F81F800006B5C7FCEB3FFC
380E0FF090C9FC121EA3121F6C7E90B512C015F86C14FE6CECFF8016C04815E0391F8000
7F48C7EA0FF0007E140316F8481401A5007EEC03F0A26CEC07E06C6CEB0FC0D80FE0EB3F
803A07FC01FF000001B512FC6C6C13F0010790C7FC26387EA52A>I<EA03F812FFA3120F
1203B0EC07F0EC1FFCEC7FFF9138F07F809038F9C01FD9FB807F9038FF000F49805BA35B
B3A4486C497EB500E1B51280A3293A7EB92E>I<EA03C0487E487E487EA46C5A6C5A6C5A
C8FCA9EA01F812FFA312071203B3AA487EB512E0A313387EB718>I<EB01E0EB03F0EB07
F8EB0FFCA4EB07F8EB03F0EB01E090C7FCA9EB01FC13FFA313071301B3B3A2123C127E00
FF13F8130314F0A2387E07E0387C0FC0383FFF00EA0FFEEA03F8164984B719>I<EA03F8
12FFA3120F1203B1913803FFFCA36E13C0913800FE005D15F04A5A4A5A4A5A4AC7FC141E
5C5C14FCEBF9FE13FBEBFF7F496C7EEBFC1F01F87F6E7E6E7EA26E7E6E7EA26E7E157FA2
ED3F8016C0486CEB7FF0B500E1B5FCA3283A7EB92C>I<EA03F812FFA3120F1203B3B3AD
487EB512E0A3133A7EB918>I<2703F807F8EB0FF000FFD91FFEEB3FFCDA7FFFEBFFFE91
3AF03F81E07F3D0FF9C00FC3801F802603FB80D9E7007F020013E601FED907FC6D7EA249
5CA2495CB3A4486C496C497EB500E1B500C3B51280A341257EA446>I<3903F807F000FF
EB1FFCEC7FFF9138F07F80390FF9C01F2603FB807F9038FF000F49805BA35BB3A4486C49
7EB500E1B51280A329257EA42E>I<EB03FE90380FFF80013F13E09038FE03F83901F800
FC4848137E48487F4848EB1F80001F15C049130F003F15E0A248C7EA07F0A44815F8A96C
15F0A26D130F003F15E0A26C6CEB1FC0000F15806D133F6C6CEB7F006C6C13FE3900FE03
F890387FFFF0011F13C0D903FEC7FC25277EA52A>I<3903F80FE000FFEB7FFC9038F9FF
FE9039FBE07F803A07FF801FC03A03FE000FE049EB07F0A249EB03F816FC150116FEA3ED
00FFA916FE1501A316FC150316F86DEB07F0ED0FE06D14C09039FF803F809039FBE07F00
9038F9FFFE9038F87FF8EC1FC091C8FCAB487EB512E0A328357EA42E>I<903903F801C0
90381FFE03EB7FFF9038FE07873901FC01C73903F000EF0007147F4848133F485A003F14
1F5B127FA390C7FC5AA96C7EA3123F7F001F143F6C7E157F6C6C13FF3903F801DF3901FE
0F9F39007FFF1FEB3FFCEB07F090C7FCABED3FE00207B5FCA328357DA42C>I<3803F03F
00FFEB7F809038F1FFE014C7390FF38FF03803F70F13F69038FE07E09038FC03C0EC0180
91C7FCA25BB3A3487EB512F8A31C257EA421>I<EBFF83000313E7000F13FFEA1F80383E
003F487F00787FA200F87FA37E6C90C7FC6C7EEA7FF8EBFF806C13E06C13F86C7F6C7F00
017F6C7E01031380EB003F0060EB1FC000E0130FA26C1307A37E15806C130F1500B4131E
EBC07C38F3FFF800E15B38C07F801A277DA521>I<131CA5133CA3137CA213FC12011203
1207121FB6FCA3D801FCC7FCB2EC01C0A93900FE0380A2017E13006D5AEB1FFE6D5AEB03
F01A347FB220>I<D803F8EB0FE000FFEB03FFA3000FEB003F0003140FB3A5151FA2153F
1201156F6C6CEBEFF8903A7E03CFFF8090383FFF8F6D130FD903FCEBE00029267EA42E>
I<B538C07FFEA33A0FFC001FF0D803F8EB07C016807F00011500A26D5B0000140EA2017F
5BA2EC803C013F1338A26D6C5AA214E0010F5BA214F101075BA2903803FB80A214FF6D90
C7FCA36D5AA2147CA3143827257EA32C>I<B53A8FFFF07FFEA3260FF8009038800FF800
0791397F0007E0EF03C000031780816DEC80070001027F1400A26D6E5A000002FF130E15
EF6DECE01ED97F01141C15C70281EBF03CD93F8314381583D91FC36D5AECC701A2D90FE7
6D5AECEE00A2D907FEEBFFC04A137FA201035D4A133FA2010192C7FC4A7FA20100141E4A
130E37257EA33C>I<B500C0B5FCA300039038007FF06C48EB3F806C6C013EC7FC6D133C
EB3F806E5A011F5B6D6C5A14F1903807FBC06DB45A6D90C8FCA26D5A147F818114FF497F
ECCFF0EB03C790380783F890380F03FCEB0E0190381E00FE497F496D7E01F8133F000181
D80FFC497EB548B51280A329247FA32C>I<B538C07FFEA33A07FC001FF06C48EB07C016
807F00011500A26C6C130EA26D131E6D131CA26D6C5AA2ECC078011F1370A2ECE0F0010F
5B14F0903807F1C0A214FB01035BA26DB4C7FCA36D5AA2147CA31438A214781470A25CA2
1301007C5BEAFE035C130749C8FCEAFC1EEA783CEA3FF86C5AEA0FC027357EA32C>I<00
3FB512FCA39038C007F8D83E0013F0003C130FEC1FE0003814C00078EB3F80147F0070EB
FF005C1301495A5CEA0007495A5C495A133F90387F800E14005B485A5B0003141E485A5B
4848131C001F143C4848137C4913FC007F1303B6FCA31F247EA325>I<B81280A3290380
972A>I<001C131C007F137F39FF80FF80A6397F007F00001C131C190A78B72A>127
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fy cmbx12 14.4 25
/Fy 25 122 df<EE3FFE030FB512C092B612F0020381020F81023F9038C00FFE913AFFFC
0001FF4901F0497F4901C05B4949497F4990C75A495AA2495AA2495AA3715BA2DD03FEC7
FC715A94C9FCA80403B512E0BAFCA626007FFCC7120783B3B3A4007FB5D8FC03B612E0A6
43547DD34B>12 D<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C80A2
4C80167E8304FE804C7E03018116F8830303814C7E03078116E083030F814C7E031F8116
8083033F8293C7FC4B82157E8403FE824B800201835D840203835D02076F7F5D844AB87E
A24A83A34A8492C812014A6F80A2027E8202FE845C0101717FA24A820103855C0107717F
A24A82010F855C496C707FB600F8021FB712E0A65B547BD366>65
D<B600FE077FB512FE6F96B6FC705FA3705FD80007F5C00070EF07DFA202F76DEF0F9FA2
02F36DEF1F1FA302F16D173EA202F06D177CA26F6C17F8A26FEF01F083A26F6DED03E0A2
6F6DED07C0A26F6DED0F80A36F6DED1F00A26F6D153EA26F6D5DA2706C5DA3706D495AA2
706D495AA2706D495AA3706D495AA2706D49C7FCA2706D133EA2706D5BA3716C5BA271EB
81F0A271EBC3E0A271EBE7C0A371EBFF80A27191C8FCA2715BA3715BA2725AA2496C6F5A
B76C0403B712FE725AA3725A725A77527CD180>77 D<B912F0F0FF8019F819FF1AC01AF0
D8000701F8C76C7F060F13FE06037F060080737F85737F87A2737FA387A863A34F5B6361
634F5B96B5C8FC06035B060F5B95B512F092B812C097C9FC19F86119FC9226F8000313FF
DD007F7F727F727F727F727F727FA28684A286A887A61D3C1D7E8784A2736D13FCA273EB
F001B800C06D9038F803F8739038FE07F07390B5FC070115E0736C1480080F1400CEEA7F
F85F537CD164>82 D<91260FFF80130791B500F85B010302FF5B010FEDC07F013FEDF0FF
4915F92701FFF80090B5FC4801C0130F4849130149C87E000F824848814981003F824981
007F82A283A200FF83A27FA2847F7F7F6E92C7FC6C13E014FCECFFC015FE6CECFFE016FF
6C16E017F86C16FE6C707E6C83846C836C6C826D826D820107821301D9003F16801403DA
003F15C01501DB001F14E01601707E171F7113F08383127C00FC82A283A37E19E0A37E6D
17C05F6D17806D5D6D170001FC5D6D4B5AD9FFC04A5A02F8EC7FF8913AFFC003FFF0019F
90B65A01075ED8FE0193C7FC26F8007F14FC48010714E0489026003FFEC8FC3C5479D24B
>I<B8031FB512FEA6D8001F01F8CA380FF0006D6D715A1B0F6D62811B1F6D6D601B3F6D
6E94C7FC636D197E821BFE6E6D5E1A016E6D5E1A036E60701507A26E6D5E1A0F6E6D5E1A
1F6E6070153FA26E6E92C8FC626E6E147E1AFE6F6D5C1901A26F6D5C19036F6D5C19076F
6D5C190FA26F6D5C191F6F6D5C193F6F028090C9FC61A26FECC07E19FE706D5A18E170EB
F1F818F3705C18FB18FF705CA2705CA2705CA37091CAFCA2705BA2715AA3715AA2715AA2
715A715A5F537DD166>86 D<EC3FFF0103B512F0011F14FE017F6E7E90B712E048D9C007
7F48D9800113FC486D6C6C7E163F486D6D7E848284A2826C49816C5BA2C648C7FC90C8FC
A44BB5FC4AB6FC143F49B7FC130F013FEBF80790B512800003EBFC004813F0485B485B48
5B91C7FC485AA2485AA55EA26C6C5C5E6C6C147D6E01FD13F86C9026C001F9EBFFE06C90
26F00FF014F06C90B5487E0001ED803F6C6C49487E011F01F8010313E0010101C090C8FC
3C387CB641>97 D<EB3FF8B5FCA61203C6FCB3A3EE7FF00303B5FC031F14E0037F14F802
F9B612FE02FB9038007FFFDAFFF8010F7F03E06D7F4B6D7F92C76C7F4A6E7F4A6F7EA272
7EA285A2841A80A41AC0AB1A80A44E1300A261A24E5AA26E4B5A804D5B03C0495B6F010F
5BDAE7F0495BDAC3FED9FFFEC7FC0281B65ADA007F14F049011F14C049010749C8FC90C8
13E042547CD24B>I<913801FFF0021F13FF91B612E0010315F8010F81499038800FFE49
48486C7ED9FFF8491380485B4A4913C0485B5A485BA25A91C76C1380486F1300A2EE01FC
484891C8FCA412FFAB127FA27FA27EA26C6DEC07E0A27E6EEC0FC06C7FEF1F806C6D143F
6C6DEC7F006C01FE14FE6D6C495A011F9038E00FF86D90B55A01035D01001580021F01FC
C7FC020113E033387CB63C>I<943801FFC00407B5FCA6EE001F1707B3A3913801FFC002
1F13F891B6FC010315C7010F15F749D9C01FB5FC90397FFE0003494813004801F0804849
8048498083485BA24890C8FCA25AA2485AA412FFAB127FA4123F7FA27EA26C7F5F6C6D5C
6C6D5C6C6D91B5FC6C6D010314F06D6C49ECFFC090393FFF803F6D90B512CF0107150F01
0114FCD9003F13F00203018049C7FC42547CD24B>I<913803FF80023F13F891B512FE01
036E7E010F15E0013F01017F903A7FFC003FF8D9FFF06D7E48496D7E48496D7E5A4A6D13
805A91C76C13C05AA24817E082485AA218F0A212FFA290B8FCA418E049CAFCA5127FA36C
7EA36CEE01E0EF03F06C7FEF07E06C7F6C6DEC0FC06C161F6C6DEC3F80D97FFCEC7F006D
B4EB01FE6D9038E00FFC010790B55A010115E06D6C1480021F49C7FC020013E034387CB6
3D>I<ED0FFE92B51280020714E0021F14F0027F14F89138FFF83F499038E07FFC010713
80923800FFFE5B495A5C133FEE7FFC5C017FEC3FF8EE1FF0EE07C093C7FCADB712E0A626
007FFCC8FCB3B3A5007FB6FCA62F547CD329>I<DA1FFE14FE49B539E007FF800107DAF8
1F13C0011FDAFE7F13E0017F91B612F09026FFF807143F48D9E001EBF07F48902680007F
133F4804F813E04890C7383FFC1F19C0484891391FFE070095C7FCA2003F82A8001F5EA3
6C6C4A5AA26C6D495A6C5E6C9039E001FFE06CD9F8075B4890B65A484BC8FC01E714F8D8
07C114E09026C01FFEC9FC91CBFC120FA27FA27F7F7F90B7FC17F06C16FE717E18E06C83
6C83846C83488312075AD81FFCC7000114804848EC001F484815077113C0485A83A56C6C
4B1380A26C6C4B13006D5D6C6C4B5A6C6C4B5A6C01E049B45A6C01FE011F5BC690B712C0
013F93C7FC010F15FC010115E0D9000F01FCC8FC3C4F7CB543>I<EB3FF8B5FCA61203C6
FCB3A3EE0FFC93B57E030314E0030F14F84B8092393FC07FFE92387E003F4B6D7EECF9F0
DAFBE0814B7F14FF4B8192C7FCA25CA35CB3ACB6D8FC0FB612C0A642537BD24B>I<133F
EBFFC0487F487F487FA2487FA66C5BA26C5B6C5B6C5B013FC7FC90C8FCACEB1FF8B5FCA6
12017EB3B3A4B612F0A61C547BD326>I<EB1FF8B5FCA612017EB3B3B3AFB612F8A61D53
7BD226>108 D<D93FF8D90FFEED7FF0B591267FFFC0903803FFFE4BB500F0010F6D7E03
0702FC013F14E0031F6E90B67E922A3FC07FFF01FE037F92267F001F903803F800000302
FC6DD987E06D7EC6D9F9F8ED8FC0DAFBE003DFC77F4B6D01DE143F02FF16FE4B4B8192C7
5CA24A5EA34A5EB3ACB6D8FC07B6D8E03FB6FCA668367BB571>I<D93FF8EB0FFCB591B5
7E030314E0030F14F84B8092393FC07FFE92387E003F00034A6D7EC6EBF9F0DAFBE0814B
7F14FF4B8192C7FCA25CA35CB3ACB6D8FC0FB612C0A642367BB54B>I<913801FFE0021F
13FE91B612C0010315F0010F15FC499038807FFE903B7FFC000FFF8049486D7F4801E001
017F48496D7FA248496E7E488391C8123F4883A248834981A2007F1880A400FF18C0AC00
7F1880A3003F18006D5DA26C5FA26C6D4A5AA26C6D4A5A6C5F6C6D495B6C01F801075B6D
6C495B90273FFF807F90C7FC010F90B512FC6D5D010015C0023F91C8FC020113E03A387C
B643>I<D93FF8EB7FF0B50103B5FC031F14E0037F14F802F9B612FE02FB01007FDAFFF8
011F7F000102E06D7F6C4A6D7F92C76C7F4A6E7F4A8283727EA28584A21A80A284A21AC0
AB1A8060A31A006061A24E5AA26E4A5B6E5C6103C0495B6F011F5B6F495B9227FE01FFFE
C7FC02FDB65ADAFC7F14F0031F14C0030749C8FC030013E093CAFCB0B612FCA6424D7CB5
4B>I<90393FF003FCB5EB1FFF4B13C092B512F002F114F89238FC7FFCECF3F000039039
F7E0FFFEC65CECFF805DA25CEE7FFCEE3FF85CEE0FE093C7FCA35CB3AAB612FEA62F367C
B537>114 D<903901FFE007011FEBFC1F017FEBFF7F48B7FC1207390FFE003FD81FF013
0749130148487F5B007F81A200FF81A37F7F01F891C7FC13FEEBFFF06CEBFF8015FC6C14
FF16C06C15F06C816C15FE6C817E6C6C1580011F15C01303D9003F14E01400030F13F015
01007C8000FC157F163F6C151FA37E17E07F7FEE3FC001F0147F6DECFF806D4913009039
FF800FFE91B55A013F5CD8FC1F14E0D8F803148027E0007FF8C7FC2C387CB635>I<147E
A614FEA41301A31303A21307A2130F131F133F137F13FF1203000F90B6FCB8FCA5C66C48
C8FCB3A8EE0FC0AB013FEC1F808017006D5C6DEB807EEDE0FE6DEBFFFC01015C6D5C023F
13C0DA03FEC7FC2A4D7ECB34>I<D91FFC913801FFC0B5020FB5FCA60003ED003FC6160F
B3AD5FA35FA2017F5DA294B5FC6D6CD903F713F0DC07E7EBFFC0903A1FFF801FC76D90B5
12876D1507010114FC6D6C13F00207018091C7FC42377BB54B>I<B600F8010FB5FCA6C6
49C8EA7F00A26D6C157E18FE6D5E6F13016D5E6F1303A26D6D5C17076D6D5C170F6D5E6F
131F6D5E6F133F6D93C7FC6F5BA26E6C137E17FE6E5C16816E5C16C36E5C16E7A26EEBF7
E016FF6E5CA26E5CA26E91C8FCA36F5AA26F5AA26F5AA26F5AA35EA25E151F5E153FD81F
E091C9FC486C5B486C137E15FE487E4A5A5D14034A5A49485A007F131F9038F07FC0393F
A1FF8090B5CAFC6C13FC6C5B000313E0C690CBFC404D7DB447>121
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 656 448 a Fy(Visual)44 b(Sp)t(eci\014cations)f(for)i(Mo)t
(dular)e(Reasoning)1100 598 y(ab)t(out)i(Async)l(hronous)f(Systems)547
890 y Fx(Nina)27 b(Amla)946 860 y Fw(1)981 890 y Fx(,)h(E.)f(Allen)f
(Emerson)1676 860 y Fw(2)1711 890 y Fx(,)i(Kedar)e(S.)i(Namjoshi)2452
860 y Fw(3)2487 890 y Fx(,)g(and)f(Ric)n(hard)f(J.)h(T)-7
b(re\015er)3344 860 y Fw(4)1512 1032 y Fv(1)1585 1064
y Fu(Cadence)27 b(Design)f(Systems)815 1124 y Fv(2)888
1155 y Fu(Departmen)n(t)e(of)i(Computer)f(Sciences,)i(Univ)n(ersit)n(y)
d(of)j(T)-6 b(exas)26 b(at)g(Austin)3081 1124 y Ft(z)1276
1215 y Fv(3)1349 1247 y Fu(Bell)g(Lab)r(oratories,)j(Lucen)n(t)24
b(T)-6 b(ec)n(hnologies)1054 1306 y Fv(4)1127 1338 y
Fu(Sc)n(ho)r(ol)27 b(of)f(Computer)f(Science,)h(Univ)n(ersit)n(y)f(of)h
(W)-6 b(aterlo)r(o)759 1707 y Fs(Abstract.)43 b Fu(W)-6
b(e)37 b(prop)r(ose)h(a)g(framew)n(ork)g(that)f(closely)i(ties)f
(together)g(visual)759 1798 y(sp)r(eci\014cation)32 b(and)f(mo)r(dular)
f(reasoning)j(of)e(async)n(hronous)g(systems.)g(The)g(ba-)759
1889 y(sis)23 b(of)g(the)e(framew)n(ork)i(is)f(a)g(new)h(notation,)f
(called)h(Mo)r(dular)g(Timing)f(Diagrams)759 1981 y(\(MTD's\),)e(for)f
(sp)r(ecifying)g(the)f Fr(universal)27 b Fu(prop)r(erties)19
b(ab)r(out)g(causalit)n(y)g(and)f(tim-)759 2072 y(ing)29
b(of)g(ev)n(en)n(ts)e(in)h(an)h(async)n(hronous)f(system.)f(MTD's)i
(are)g Fr(c)l(omplementary)37 b Fu(in)759 2163 y(nature)32
b(to)g(Message)h(Sequence)e(Charts,)i(that)e(are)h(t)n(ypically)g(used)
f(to)h(sp)r(ecify)759 2255 y Fr(existential)f Fu(prop)r(erties.)22
b(Our)f(framew)n(ork)h(includes)g(t)n(w)n(o)g(algorithms)g(for)g
(formal)759 2346 y(reasoning)33 b(with)e(MTD's.)i(The)f(\014rst)f(is)h
(an)f(e\016cien)n(t)h(p)r(olynomial-time)e(mo)r(del)759
2437 y(c)n(hec)n(king)h(algorithm.)g(The)g(second)g(is)h(an)f
(algorithm)g(for)g(automatically)h(gen-)759 2529 y(erating)g(an)e
(assume-guaran)n(tee)h(partitioning)g(of)h(an)e(MTD,)i(that)e(exploits)
h(its)759 2620 y(inheren)n(t)26 b(decomp)r(ositional)i(structure.)f(W)
-6 b(e)27 b(sho)n(w)g(ho)n(w)h(to)f(use)g(this)g(decomp)r(o-)759
2711 y(sition)k(for)f(mo)r(dular)f(reasoning)i(with)e(MTD)h(prop)r
(erties)g(in)g(conjunction)f(with)759 2803 y(an)22 b(async)n(hronous)g
(comp)r(ositional)h(reasoning)h(rule.)e(T)-6 b(o)22 b(illustrate)i(the)
d(notation)759 2894 y(and)26 b(our)g(metho)r(d,)f(w)n(e)i(describ)r(e)g
(a)f(case)h(study)e(where)i(w)n(e)f(sp)r(eci\014ed)g(telephon)n(y)759
2985 y(features,)g(suc)n(h)e(as)h(call)h(forw)n(arding)g(with)f(MTD's,)
h(and)e(v)n(eri\014ed)f(these)i(prop)r(er-)759 3077 y(ties)k(on)f(an)f
(async)n(hronous)h(telephon)n(y)f(mo)r(del.)h(The)g(comp)r(ositional)h
(reasoning)759 3168 y(metho)r(ds)20 b(led)h(to)g(sa)n(vings)g(of)g
(15\045-80\045)h(in)f(v)n(eri\014cation)g(times,)f(and)h(comparable)759
3259 y(sa)n(vings)27 b(in)e(space.)523 3555 y Fq(1)112
b(In)m(tro)s(duction)523 3773 y Fx(Visual)23 b(sp)r(eci\014cation)h
(formalisms)c(lik)n(e)j(Message)h(Sequence)i(Charts)e(\(MSC's\))j
([MSC96)o(])523 3872 y(and)i(their)e(extensions)h(are)f(widely)g(used)i
(to)g(sp)r(ecify)f(the)h(high-lev)n(el)c(b)r(eha)n(vior)h(of)j(asyn-)
523 3972 y(c)n(hronous)c(pro)r(cesses.)g(MSC)i(sp)r(eci\014cations)d
(describ)r(e)h(partially)e(ordered)i(scenarios)f(of)i(a)523
4072 y(system)19 b(and)g(they)h(are)f Fp(existential)29
b Fx(in)19 b(nature.)h(In)g(this)f(pap)r(er,)g(w)n(e)h(presen)n(t)f(a)g
(complemen-)523 4171 y(tary)28 b(visual)f(notation)g(for)h(sp)r
(ecifying)f(prop)r(erties)g(that)j(are)e Fp(universal)38
b Fx(in)28 b(nature;)h(that)523 4271 y(is,)22 b(prop)r(erties)e(that)j
(should)f(hold)g(for)g Fp(every)31 b Fx(computation)20
b(of)j(a)f(system.)g(This)f(notation,)523 4370 y(called)28
b(Mo)r(dular)g(Timing)f(Diagrams)f(\(MTD's\),)31 b(is)e(an)h(extension)
e(of)i(the)g(Timing)d(Dia-)523 4470 y(grams)f(\(TD's\))k(notation,)e
(that)h(is)e(widely)g(used)i(in)f(the)h(hardw)n(are)e(industry)h(to)h
(sp)r(ecify)523 4570 y(univ)n(ersal)h(prop)r(erties)h(of)i(hardw)n(are)
e(proto)r(cols)f([DJS94,Fis96)n(,AEN99)o(].)j(MTD's)g(form)523
4669 y(the)e(basis)d(of)i(our)f(prop)r(osed)g(framew)n(ork)e(for)j(sp)r
(ecifying)e(and)i(analyzing)d(prop)r(erties)h(of)523
4769 y(async)n(hronous)d(systems)h(in)h(a)g(mo)r(dular)e(manner.)p
523 4836 473 4 v 548 4893 a Ft(z)606 4924 y Fu(Supp)r(orted)g(in)g
(part)h(b)n(y)e(NSF)h(CCR)h(009-8141)i(and)e(T)-6 b(ARP)25
b(003658-0650-1999.)p eop
%%Page: 2 2
2 1 bop 648 448 a Fx(Timing)29 b(Diagrams)g(are)j(used)g(to)h(describ)r
(e)e(timing)f(and)i(ordering)e(prop)r(erties)h(o)n(v)n(er)523
548 y(ev)n(en)n(ts)24 b(\(that)i(is)e(c)n(hanges)f(of)i(v)-5
b(alue\))24 b(of)h(signals;)d(an)j(example)d(timing)g(diagram)g(is)i
(sho)n(wn)523 648 y(on)38 b(the)h(righ)n(t)d(half)h(of)i(Figure)d(3.)i
(In)h(the)f(course)f(of)h(our)g(prior)e(w)n(ork)h(in)g(formalizing)523
747 y(timing)21 b(diagrams)g([AEN99)o(,AEKN00)n(],)k(w)n(e)e(realized)e
(that)k(while)d(TD's)i(are)f(an)h(in)n(tuitiv)n(e)523
847 y(notation,)h(they)h(also)f(ha)n(v)n(e)g(some)f(limitations:)e(one)
j(cannot)h(express)f(either)g(disjunction)523 946 y(or)35
b(iteration,)f(making)g(it)h(di\016cult)h(to)g(sp)r(ecify)f(some)g
(prop)r(erties.)g(Our)g(new)i(notation)523 1046 y(o)n(v)n(ercomes)31
b(these)j(limitations,)29 b(while)j(retaining)g(the)i(in)n(tuitiv)n(e)e
(and)i(visual)d(nature)j(of)523 1146 y(timing)29 b(diagrams.)f(An)k
(MTD)g(is)f(built)f(out)i(of)g(async)n(hronous)d(TD)j(mo)r(dules,)e
(that)i(are)523 1245 y(link)n(ed)20 b(together)h(b)n(y)g(constructs)g
(for)h(forking)d(\(conjunction\),)j(deterministic)c(c)n(hoice,)i(and)
523 1345 y(iteration.)d(W)-7 b(e)21 b(illustrate)16 b(the)21
b(practical)c(utilit)n(y)g(of)j(MTD's)h(with)e(example)f(sp)r
(eci\014cations)523 1445 y(of)29 b(telephon)n(y)f(prop)r(erties.)f(W)-7
b(e)30 b(also)d(sho)n(w)i(that)g(MTD's,)h(unlik)n(e)d(TD's,)i(are)g
(expressiv)n(e)523 1544 y(enough)e(to)g(describ)r(e)g(an)n(y)g
Fo(!)s Fx(-regular)d(prop)r(ert)n(y)i(o)n(v)n(er)g(ev)n(en)n(ts.)648
1675 y(As)g(part)f(of)h(the)h(framew)n(ork,)c(w)n(e)j(presen)n(t)f
(e\016cien)n(t)h(algorithms)21 b(for)26 b(formal)d(analysis)523
1774 y(with)k(MTD's.)g(W)-7 b(e)28 b(giv)n(e)d(an)i(e\016cien)n(t)f
(translation)e(of)j(an)g(MTD)h(to)f(a)g(B)r(\177)-44
b(uc)n(hi)26 b(automaton)523 1874 y(describing)i(the)k
Fp(ne)l(gate)l(d)40 b Fx(MTD)31 b(prop)r(ert)n(y)-7 b(,)30
b(whic)n(h)g(results)g(in)g(a)h(mo)r(del)e(c)n(hec)n(king)g(algo-)523
1974 y(rithm)d(of)h(complexit)n(y)d Fo(O)r Fx(\()p Fo(m)19
b Fn(\003)f Fo(n)g Fn(\003)f Fo(k)1692 1943 y Fw(3)1730
1974 y Fx(\),)27 b(where)g Fo(m)h Fx(is)e(the)i(size)e(of)i(the)f
(program,)e Fo(n)i Fx(is)g(the)523 2073 y(n)n(um)n(b)r(er)j(of)h(TD)h
(no)r(des)f(in)f(the)i(MTD,)f(and)g Fo(k)j Fx(is)c(the)i(largest)d(no)r
(de)i(size.)f(F)-7 b(or)30 b(un)n(timed)523 2173 y(MTD's)g(\(those)g
(with)g(only)f(ordering)e(constrain)n(ts\),)h(this)h(B)r(\177)-44
b(uc)n(hi)29 b(automaton)g(expresses)523 2272 y(a)c(stuttering-closed)e
(language.)g(This)i(prop)r(ert)n(y)g(can)g(b)r(e)i(exploited)c(b)n(y)j
(mo)r(del)e(c)n(hec)n(k)n(ers,)523 2372 y(suc)n(h)j(as)h(SPIN)f([Hol97)
n(],)h(that)g(are)f(optimized)e(to)j(handle)e(stuttering-closed)f(prop)
r(erties)523 2472 y([HP94)o(].)648 2602 y(An)31 b(async)n(hronous)d
(program)f(is)j(usually)e(comp)r(osed)h(of)i(sev)n(eral)c(concurren)n
(t,)j(in)n(ter-)523 2702 y(acting)k(comp)r(onen)n(ts.)g(In)i(this)f
(situation,)f(the)i(state)g(space)f(of)g(the)h(program)d(is)i(exp)r(o-)
523 2801 y(nen)n(tial)28 b(in)i(its)f(size,)g(and)h(is)g(often)g(to)r
(o)g(large)e(for)i(e\013ectiv)n(e)f(analysis.)e(This)i(w)n(ell-kno)n
(wn)523 2901 y(\\state)39 b(explosion")e(problem)g(is)i(one)h(of)g(the)
g(ma)5 b(jor)38 b(barriers)f(to)i(the)i(application)36
b(of)523 3001 y(mo)r(del)24 b(c)n(hec)n(king)f(in)i(practice.)f(A)i
(solution)d(to)j(this)f(problem)e(can)i(b)r(e)h(found)g(in)f(metho)r
(ds)523 3100 y(for)k Fp(c)l(omp)l(ositional)k(r)l(e)l(asoning)k
Fx([dRLP97)o(,dRdBH)2169 3070 y Fw(+)2224 3100 y Fx(01)o(],)30
b(that)f(utilize)e(a)i(decomp)r(osition)523 3200 y(of)d(the)g(global)d
(sp)r(eci\014cation)g(in)n(to)i(lo)r(cal,)f(assume-guaran)n(tee)d(c)n
(hec)n(ks)k(for)h(the)g(individual)523 3300 y(comp)r(onen)n(ts.)f
(While)g(this)h(t)n(yp)r(e)h(of)f(reasoning)e(has)i(b)r(een)h(applied)e
(quite)h(successfully)e(in)523 3399 y(practice,)i(it)i(requires)d(a)j
(certain)e(degree)h(of)h(man)n(ual)d(e\013ort.)j(In)g(particular,)c
(the)29 b(decom-)523 3499 y(p)r(osition)d(of)h(the)h(sp)r
(eci\014cation)d(is)i(usually)e(done)j(b)n(y)f(hand)h(since)e(it)h(is)g
(di\016cult)f(to)i(auto-)523 3598 y(matically)19 b(decomp)r(ose)k(sp)r
(eci\014cations)e(written)i(using)f(temp)r(oral)g(logic)f(or)i
(automata.)f(In)523 3698 y(this)i(resp)r(ect,)h(MTD's)h(o\013er)e(a)h
(k)n(ey)f(adv)-5 b(an)n(tage:)24 b(they)h(can)g(b)r(e)g(syn)n
(tactically)c(partitioned)523 3798 y(in)n(to)31 b(a)h(collection)d(of)j
(assume-guaran)n(tee)d(t)n(yp)r(e)j(prop)r(erties)f(ab)r(out)h
(individual)d(comp)r(o-)523 3897 y(nen)n(ts)e(of)g(the)g(system.)e(W)-7
b(e)27 b(sho)n(w)f(in)g(this)g(pap)r(er)h(ho)n(w)f(to)h(p)r(erform)e
(suc)n(h)h(a)h(partitioning,)523 3997 y Fp(ful)t(ly)g(automatic)l(al)t
(ly)p Fx(,)e(and)e(ho)n(w)f(to)h(utilize)e(the)i(resulting)e
(assume-guaran)n(tee)e(prop)r(erties)523 4097 y(for)27
b(comp)r(ositional)c(reasoning.)648 4227 y(In)28 b(order)e(to)i(v)-5
b(alidate)26 b(b)r(oth)i(the)h(notation)d(and)i(our)f(metho)r(d,)h(w)n
(e)f(applied)f(it)i(to)g(the)523 4327 y(analysis)d(of)k(an)f(async)n
(hronous)e(telephon)n(y)h(mo)r(del)f(consisting)g(of)i(a)g(cen)n(tral)f
(switc)n(h)g(and)523 4426 y(sev)n(eral)22 b(users.)h(W)-7
b(e)25 b(c)n(hose)f(this)f(particular)f(case)h(study)i(for)f(a)g(n)n
(um)n(b)r(er)f(of)h(reasons.)f(First,)523 4526 y(the)j(mo)r(del)d(is)i
(highly)e(async)n(hronous)g(and)i(nondeterministic)c(in)k(nature.)g
(Second,)g(there)523 4625 y(is)31 b(signi\014can)n(t)e(prior)h(w)n(ork)
g(in)h(mo)r(del)f(c)n(hec)n(king)g(suc)n(h)i(systems)e(\(e.g.,)i
([SHE01)o(,PR99)o(]\),)523 4725 y(whic)n(h)21 b(ga)n(v)n(e)f(us)j(a)e
(reasonable)e(w)n(a)n(y)i(to)h(gauge)f(the)i(utilit)n(y)c(of)j(MTD's.)h
(Finally)-7 b(,)19 b(the)k(inher-)523 4825 y(en)n(t)f(mo)r(dularit)n(y)
17 b(in)k(these)g(systems)f(made)h(the)g(application)d(of)k(comp)r
(ositional)16 b(reasoning)523 4924 y(an)k(attractiv)n(e)e(option.)h
(MTD's)h(w)n(ere)g(used)g(to)g(sp)r(ecify)f(prop)r(erties)g(of)h
(telephon)n(y)f(features)1943 5173 y(2)p eop
%%Page: 3 3
3 2 bop 523 448 a Fx(suc)n(h)24 b(as)f(call)f(forw)n(arding;)f(this)j
(turned)g(out)g(to)g(b)r(e)h(quite)e(an)h(easy)f(task.)h(Our)f(exp)r
(erience)523 548 y(with)37 b(the)g(comp)r(ositional)c(reasoning)h
(metho)r(d)j(w)n(as)f(encouraging)e({)j(the)h(partitioning)523
648 y(algorithm)26 b(w)n(ork)n(ed)j(v)n(ery)h(w)n(ell,)e(sa)n(ving)g
(15\045-80\045)h(in)g(the)i(mo)r(del)e(c)n(hec)n(king)f(times,)h(and)
523 747 y(yielding)24 b(smaller,)g(y)n(et)j(signi\014can)n(t)e
(reductions)h(in)h(space.)523 865 y Fm(R)-5 b(elate)g(d)35
b(Work.)648 983 y Fx(Message)g(Sequence)i(Charts)f(are)h(a)f
(standardized)f(and)i(p)r(opular)f(w)n(a)n(y)g(of)h(visually)523
1083 y(describing)e(scenarios)g(in)i(comm)n(unication)d(proto)r(cols.)h
(MSC's)j(are)f(w)n(ell-studied)e(and)523 1183 y(o)r(ccur)24
b(in)g(man)n(y)f(\015a)n(v)n(ors)g(with)h(di\013eren)n(t)g(seman)n
(tics)e([LL94)o(].)j(They)g(ha)n(v)n(e)f(b)r(een)h(extended)523
1282 y(to)36 b(MSC-graphs)e(\(with)i(the)g(addition)e(of)h(c)n(hoice)f
(and)i(iteration\),)e(and)h(to)h(High-lev)n(el)523 1382
y(MSC's)d(\(b)n(y)g(adding)f(more)f(structure)i(and)g(abstractions\))d
([MSC96].)j(Mo)r(del)f(c)n(hec)n(king)523 1482 y(algorithms)g(for)j
(MSC's)h(fo)r(cus)g(on)g(either)f(c)n(hec)n(king)f(that)i(an)g
(MSC-graph)e(satis\014es)g(a)523 1581 y(temp)r(oral)e(prop)r(ert)n(y)g
([A)-7 b(Y99],)34 b(or)f(on)h(matc)n(hing)e(the)i(executions)e(of)i(t)n
(w)n(o)g(MSC-graphs)523 1681 y([MPS98)o(,MP00)o(].)24
b(This)f(is)g(b)r(ecause,)h(as)f(men)n(tioned)g(earlier,)d(MSC's)25
b(describ)r(e)d(high)h(lev)n(el)523 1780 y(implemen)n(tation)17
b(scenarios.)i(They)-7 b(,)22 b(therefore,)f(sp)r(ecify)h(\\lo)n(w)n
(er)c(b)r(ounds")k(on)g(implemen-)523 1880 y(tations.)j(In)i(con)n
(trast,)f(MTD's)h(sp)r(ecify)f(\\upp)r(er)g(b)r(ounds"{)g(prop)r
(erties)f(that)i(m)n(ust)f(hold)523 1980 y(of)f Fp(al)t(l)35
b Fx(computations)22 b(of)j(an)f(implemen)n(tation.)c(Th)n(us,)25
b(MTD's)g(are)f(indeed)g Fp(c)l(omplemen-)523 2079 y(tary)37
b Fx(to)29 b(MSC's)g(\(and)g(the)g(MSC)h(v)-5 b(arian)n(ts\))27
b(in)h(terms)g(of)h(their)f(in)n(tended)g(usage.)g(These)523
2179 y(observ)-5 b(ations)38 b(also)g(apply)h(to)h(a)g(shared)g(v)-5
b(ariable)37 b(v)n(ersion)h(of)i(MSC's)h(called)d(Shared)523
2279 y(V)-7 b(ariables)24 b(In)n(teraction)i(Diagrams)e([A)n(G01)o(].)
648 2397 y(MTD's)30 b(ha)n(v)n(e)f(sev)n(eral)e(adv)-5
b(an)n(tages)28 b(o)n(v)n(er)g(other)h(graphical)e(notations)h(suc)n(h)
h(as)h(Liv)n(e)523 2496 y(Sequence)d(Charts)g(\(LSC's\))h([DH01)o(])g
(and)f(Timeline)d([SHE01)o(],)j(in)g(terms)f(of)h(expressiv)n(e-)523
2596 y(ness)f(and)f(e\016cien)n(t)g(formal)f(analysis.)e(Liv)n(e)j
(Sequence)g(Charts)h(\(LSC's\))g(are)f(a)h(mo)r(di\014ca-)523
2696 y(tion)d(of)h(MSC's)h(that)f(allo)n(w)d(sp)r(eci\014cation)h(of)i
(univ)n(ersal)d(prop)r(erties.)h(LSC's)j(use)f(parts)f(of)523
2795 y(an)30 b(MSC)h(to)g(serv)n(e)e(as)h(an)h(activ)-5
b(ation)28 b(condition,)h(while)g(the)i(remainder)c(is)j(a)g(prop)r
(ert)n(y)523 2895 y(that)37 b(m)n(ust)f(hold)g(of)h(the)g(system.)f(Th)
n(us,)h(an)f(LSC)h(is)f(v)n(ery)g(close)f(to)i(a)f(single)f(timing)523
2994 y(diagram,)26 b(whic)n(h)j(also)f(has)h(a)h(precondition)d(and)i
(a)h(p)r(ostcondition)d(part.)j(A)g(k)n(ey)f(di\013er-)523
3094 y(ence)k(is)g(the)h(complexit)n(y)c(of)j(the)h(mo)r(del)d(c)n(hec)
n(king)h(pro)r(cedures.)g(The)i(mo)r(del)d(c)n(hec)n(king)523
3194 y(pro)r(cedure)f(describ)r(ed)f(in)i([KW01)o(])g(has)f(high)g(w)n
(orst-case)e(complexit)n(y)-7 b(,)27 b(due)k(to)g(the)g(p)r(o-)523
3293 y(ten)n(tial)c(exp)r(onen)n(tial)f(blo)n(wup)i(in)g(the)h(con)n(v)
n(ersion)d(from)h(a)h(partially)d(ordered)j(LSC)h(to)f(a)523
3393 y(timed)e(B)r(\177)-44 b(uc)n(hi)26 b(automaton)f(that)i(w)n(orks)
f(on)h(consisten)n(t)e(cuts)i(of)g(the)h(LSC)f(partial)d(order.)523
3493 y(In)36 b(con)n(trast,)f(although)f(MTD's)j(allo)n(w)c(partial)g
(ordering)g(of)k(ev)n(en)n(ts,)e(our)g(translation)523
3592 y(go)r(es)e(directly)g(to)h(an)g(automaton)e(with)i(a)g(small)d(p)
r(olynomial)f(blo)n(wup.)j(F)-7 b(urthermore,)523 3692
y(there)28 b(do)r(es)f(not)g(app)r(ear)g(to)h(b)r(e)g(an)f(LSC)h(coun)n
(terpart)e(to)i(our)f(automated)f(partitioning)523 3791
y(pro)r(cedure)d(for)h(comp)r(ositional)c(reasoning,)h(whic)n(h)j(is)f
(essen)n(tial)f(for)i(c)n(hec)n(king)e(prop)r(erties)523
3891 y(of)28 b(large)d(systems.)648 4009 y(The)f(Timeline)d(notation)i
([SHE01)o(])h(has)g(also)f(b)r(een)h(used)h(to)f(sp)r(ecify)g(univ)n
(ersal)d(prop-)523 4109 y(erties)38 b(of)i(async)n(hronous)e(systems.)g
(It)i(is)f(limited,)e(ho)n(w)n(ev)n(er,)g(to)j(describing)d(a)j(single)
523 4208 y(totally)28 b(ordered)h(sequence)h(of)g(ev)n(en)n(ts.)g(A)h
(nice)e(feature)h(of)h(the)f(notation)f(is)h(the)g(abilit)n(y)523
4308 y(to)21 b(in)n(terlea)n(v)n(e)16 b(pre-)k(and)h(p)r(ost-)f
(conditions)e(on)j(a)f(timeline;)d(w)n(e)j(ha)n(v)n(e)g(incorp)r
(orated)e(this)i(in)523 4408 y(MTD's.)k(Indeed,)g(an)g(MTD)g(ma)n(y)e
(b)r(e)i(view)n(ed)e(as)h(a)h(compact)e(form)g(of)i(a)f(set)h(of)g
(timelines.)648 4526 y(In)d(our)f(previous)f(w)n(ork)g(on)i(a)f
Fp(synchr)l(onous)28 b Fx(v)n(ersion)19 b(of)i(Timing)c(Diagrams)h
(\(SR)-7 b(TD's\))523 4625 y(w)n(e)26 b(presen)n(ted)f(algorithms)c
(for)26 b(e\016cien)n(t)f(mo)r(del)f(c)n(hec)n(king)f(and)j
(assume-guaran)n(tee)c(par-)523 4725 y(titioning)29 b([AEKN00)o
(,AENT01)o(].)k(In)f(this)f(pap)r(er,)h(w)n(e)g(adopt)g(a)g(similar)27
b(approac)n(h,)j(but)523 4825 y(sho)n(w)j(ho)n(w)h(to)g(apply)f(it)h
(to)g(a)f(more)g(general)f(notation)g(and)i(to)g(the)h(di\013eren)n(t)e
(domain)523 4924 y(of)k(async)n(hronous)e(pro)r(cesses.)h(The)h
(encouraging)d(exp)r(erimen)n(tal)g(results)i(for)g(the)i(new)1943
5173 y(3)p eop
%%Page: 4 4
4 3 bop 523 448 a Fx(framew)n(ork)37 b(lead)i(us)h(to)g(b)r(eliev)n(e)e
(that)i(it)g(is)f(\015exible,)f(and)i(holds)e(great)h(promise)f(for)523
548 y(practical)25 b(applications.)648 648 y(In)c(summary)-7
b(,)18 b(w)n(e)i(b)r(eliev)n(e)f(that)i(this)f(pap)r(er)h(prop)r(oses)e
(a)i(new)g(and)g(in)n(teresting)d(frame-)523 747 y(w)n(ork)36
b(for)h(com)n(bining)d(visual)h(sp)r(eci\014cations)g(with)j(mo)r
(dular)d(reasoning)f(ab)r(out)k(asyn-)523 847 y(c)n(hronous)23
b(systems.)h(By)h(closely)d(t)n(ying)i(together)g(these)h(t)n(w)n(o)f
(asp)r(ects,)h(w)n(e)g(deriv)n(e)e(sev)n(eral)523 946
y(adv)-5 b(an)n(tages)26 b(for)h(the)h(MTD)g(framew)n(ork:)575
1101 y Fl({)41 b Fx(W)-7 b(e)37 b(mak)n(e)d(formal)f(and)j(visually)d
(explicit)g(the)k(informal)32 b(com)n(bination)h(of)j(timing)664
1200 y(diagrams)24 b(for)j(individual)d(mo)r(dules.)575
1298 y Fl({)41 b Fx(W)-7 b(e)29 b(include)d(a)i(p)r(olynomial-tim)o(e)
22 b(mo)r(del)k(c)n(hec)n(king)g(algorithm)e(for)k(c)n(hec)n(king)d
(MTD)664 1397 y(prop)r(erties.)575 1494 y Fl({)41 b Fx(The)34
b(framew)n(ork)c(is)i(supp)r(orted)i(b)n(y)f(automated)f(comp)r
(ositional)c(reasoning)j(meth-)664 1594 y(o)r(ds)d(to)g(ameliorate)23
b(the)28 b(state)g(explosion)d(problem,)g(that)k(ha)n(v)n(e)d(p)r
(erformed)h(w)n(ell)e(on)664 1694 y(examples.)575 1791
y Fl({)41 b Fx(W)-7 b(e)38 b(generalize)33 b(and)k(impro)n(v)n(e)c(up)r
(on)38 b(existing)c(prop)r(osals,)g(suc)n(h)j(as)f(Timing)e(Dia-)664
1891 y(grams,)25 b(Liv)n(e)h(Sequence)i(Charts,)f(and)g(Timeline.)575
1988 y Fl({)41 b Fx(The)g(framew)n(ork)e(complemen)n(ts)f(the)j
(scenario-based)d(notation)h(of)j(Message)d(Se-)664 2087
y(quence)28 b(Charts.)523 2344 y Fq(2)112 b(Mo)s(dular)39
b(Timing)f(Diagrams)523 2533 y Fx(W)-7 b(e)28 b(illustrate)d(the)j(MTD)
g(syn)n(tax)f(and)h(seman)n(tics)d(through)i(the)h(Request-Gran)n(t)f
(prop-)523 2633 y(ert)n(y)h(sho)n(wn)f(in)h(Figure)f(1.)h(Eac)n(h)f(no)
r(de)h(in)g(an)g(MTD)h(con)n(tains)d(a)i(Regular)e(Timing)f(Dia-)523
2733 y(gram)20 b(\(R)-7 b(TD\))24 b([AEN99)o(].)e(Section)f(2.1)h
(presen)n(ts)f(the)i(formal)c(de\014nitions)i(of)h(b)r(oth)h(MTD's)523
2832 y(and)i(R)-7 b(TD's.)26 b(The)f(dotted)h(no)r(des)f(on)g(the)h
(left)f(are)f Fp(pr)l(e)l(c)l(ondition)33 b Fx(no)r(des,)25
b(while)f(the)h(solid)523 2932 y(no)r(des)33 b(on)g(the)h(righ)n(t)e
(are)g Fp(p)l(ostc)l(ondition)41 b Fx(no)r(des.)33 b(The)h(\014lled)d
(no)r(de)j(is)e(a)h(sp)r(ecial)e(short-)523 3031 y(hand)36
b(indicating)d(an)j(initial,)c(precondition)h(no)r(de)j(con)n(taining)d
(an)j(empt)n(y)f(R)-7 b(TD.)37 b(The)523 3131 y Fn(_)e
Fx(sym)n(b)r(ol)e(indicates)f(deterministic)f(c)n(hoice,)i(while)h(the)
h Fn(^)g Fx(sym)n(b)r(ol)d(indicates)h(forking)523 3231
y(\(conjunction\).)f(Eac)n(h)g(non-empt)n(y)f(R)-7 b(TD)33
b(sho)n(ws)e(a)h(n)n(um)n(b)r(er)f(of)i(w)n(a)n(v)n(eforms)c
(describing)523 3330 y(the)34 b(c)n(hange)e(of)i(v)-5
b(alues)32 b(for)h(v)-5 b(arious)31 b(signals.)g(These)i(c)n(hanges)f
(\(ev)n(en)n(ts\))i(are)e(link)n(ed)f(to-)523 3430 y(gether)20
b(with)h Fp(dep)l(endencies)29 b Fx(to)21 b(form)f(a)g(pattern)h(of)g
(ev)n(en)n(t)f(o)r(ccurrences.)g(The)h(arro)n(w)d(from)523
3530 y Fk(res.reply)g Fx(to)j Fk(usr.req)e Fx(indicates)g(that)j
Fk(usr.req)d Fx(m)n(ust)h(c)n(hange)h(v)-5 b(alue)20
b(at)i(least)e(1)h(clo)r(c)n(k)523 3629 y(unit)32 b(after)h
Fk(res.reply)c Fx(c)n(hanges)i(its)h(v)-5 b(alue.)31
b(W)-7 b(e)33 b(assume)e(that)i(timing)d(prop)r(erties)h(are)523
3729 y(tak)n(en)f(relativ)n(e)e(to)i(timers,)f(that)i(are)f(atomic)e
(prop)r(ositions)g(in)i(the)h(program.)c(Some)j(of)523
3828 y(the)21 b(no)r(des)f(of)h(an)f(MTD)h(ma)n(y)e(b)r(e)i(designated)
e(as)h(b)r(eing)g Fp(fair)p Fx(,)i(whic)n(h)d(is)h(indicated)f
(visually)523 3928 y(b)n(y)27 b(placing)e(a)i(\\*")g(ab)r(o)n(v)n(e)f
(the)i(no)r(de.)648 4028 y(Informally)-7 b(,)32 b(an)k(MTD)g(acts)g(as)
f(follo)n(ws.)e(MTD)k(c)n(hec)n(ks)d(are)h(b)r(egun)i(at)e(the)i
(initial)523 4127 y(no)r(des.)25 b(If)g(the)h(curren)n(t)e(no)r(de)h
(is)f(a)h(precondition)d(then)k(its)e(successor)f(no)r(des)i(are)f(c)n
(hec)n(k)n(ed)523 4227 y(only)k(if)h(the)g(curren)n(t)g(pattern)g
(holds.)f(Th)n(us,)h(a)g(precondition)d(no)r(de)j Fp(may)38
b Fx(not)29 b(hold.)f(On)523 4327 y(the)22 b(other)f(hand,)h(if)f(the)h
(curren)n(t)f(no)r(de)g(is)g(a)g(p)r(ostcondition,)f(its)g(pattern)i
Fp(must)28 b Fx(hold.)21 b(The)523 4426 y(set)e(of)h(successors)d(is)i
(determined)e(b)n(y)i(the)h(connector)e(asso)r(ciated)g(with)h(the)g
(curren)n(t)g(no)r(de.)523 4526 y(An)i Fn(_)p Fx(-connector,)f(as)g(in)
g(this)g(case,)g(is)g(resolv)n(ed)e(b)n(y)i(pic)n(king)f(the)i(unique)f
(successor)f(whose)523 4625 y(guard)i(expression)e(\(lab)r(eling)g(the)
j(edge)f(b)r(et)n(w)n(een)h(no)r(des\))g(holds)f(at)g(the)h(\014nal)f
(state)h(of)g(the)523 4725 y(curren)n(t)e(no)r(de.)g(An)h
Fn(^)p Fx(-connector)f(indicates)e(that)j(all)d(successor)g(no)r(des)j
(m)n(ust)e(b)r(e)i(c)n(hec)n(k)n(ed.)523 4825 y(W)-7
b(e)28 b(sometimes)c(omit)h(sho)n(wing)g(the)j(connector)e(when)i
(there)f(is)f(a)h(single)e(successor;)h(the)523 4924
y(connector)i(is)f(assumed)g(to)i(b)r(e)g(an)g Fn(^)p
Fx(-connector.)e(This)h(c)n(hec)n(king)f(pro)r(cess)g(b)r(egins)h(at)g
(all)1943 5173 y(4)p eop
%%Page: 5 5
5 4 bop 764 1373 a @beginspecial 0 @llx 0 @lly 636 @urx
267 @ury 2880 @rwi @setspecial
%%BeginDocument: figures/reqgnt.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: reqgnt.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Fri Apr 19 15:58:25 2002
%%For: kedar@trex8.cs.bell-labs.com (Kedar Namjoshi,,,,hrid=7700533,handle=knamjoshi)
%%BoundingBox: 0 0 636 267
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 267 moveto 0 0 lineto 636 0 lineto 636 267 lineto closepath clip newpath
-3.8 302.2 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Arc
7.500 slw
gs  clippath
267 2634 m 327 2644 l 352 2495 l 303 2609 l 292 2485 l cp
eoclip
n 675.0 2617.5 375.1 1.1 178.9 arcn
gs col0 s gr
 gr

% arrowhead
n 292 2485 m 303 2609 l 352 2495 l 292 2485 l  cp gs 0.00 setgray ef gr  col0 s
% Ellipse
n 1072 2864 212 212 0 360 DrawEllipse gs col0 s gr

% Polyline
 [60] 0 sd
n 75 2625 m 600 2625 l 600 3000 l 75 3000 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 5.00 175.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
n 600 2850 m
 825 2850 l gs col0 s gr 
% Polyline
gs  clippath
1590 2880 m 1590 2820 l 1439 2820 l 1559 2850 l 1439 2880 l cp
eoclip
n 1275 2850 m
 1575 2850 l gs col0 s gr gr

% arrowhead
n 1439 2880 m 1559 2850 l 1439 2820 l 1439 2880 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 987 2961 m 1062 2811 l
 1137 2961 l gs col0 s gr 
% Arc
gs  clippath
9541 2129 m 9538 2069 l 9387 2076 l 9509 2101 l 9390 2136 l cp
eoclip
n 9434.4 1578.1 529.7 -145.1 80.1 arcn
gs col1 s gr
 gr

% arrowhead
n 9390 2136 m 9509 2101 l 9387 2076 l 9390 2136 l  cp gs col1 1.00 shd ef gr  col1 s
% Arc
gs  clippath
9541 4529 m 9538 4469 l 9387 4476 l 9509 4501 l 9390 4536 l cp
eoclip
n 9434.4 3978.1 529.7 -145.1 80.1 arcn
gs col1 s gr
 gr

% arrowhead
n 9390 4536 m 9509 4501 l 9387 4476 l 9390 4536 l  cp gs col1 1.00 shd ef gr  col1 s
% Ellipse
n 5700 2775 212 212 0 360 DrawEllipse gs col0 s gr

% Polyline
n 2400 2850 m 3450 2850 l 3600 2625 l
 4725 2625 l gs col0 s gr 
% Polyline
n 8175 1350 m 8925 1350 l 9150 1050 l
 10275 1050 l gs col0 s gr 
% Polyline
n 8175 1050 m 8925 1050 l 9150 1350 l
 10275 1350 l gs col0 s gr 
% Polyline
n 5100 2775 m
 5475 2775 l gs col0 s gr 
% Polyline
n 6900 675 m 10575 675 l 10575 2625 l 6900 2625 l
 cp gs col1 s gr 
% Polyline
n 6825 600 m 10650 600 l 10650 2700 l 6825 2700 l
 cp gs col1 s gr 
% Polyline
n 6900 3150 m 10575 3150 l 10575 4950 l 6900 4950 l
 cp gs col1 s gr 
% Polyline
n 6825 3075 m 10650 3075 l 10650 5025 l 6825 5025 l
 cp gs col1 s gr 
% Polyline
gs  clippath
6855 1813 m 6817 1767 l 6702 1864 l 6813 1810 l 6740 1910 l cp
eoclip
n 5850 2625 m
 6825 1800 l gs col0 s gr gr

% arrowhead
n 6740 1910 m 6813 1810 l 6702 1864 l 6740 1910 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6813 4006 m 6857 3965 l 6754 3854 l 6814 3963 l 6710 3895 l cp
eoclip
n 5850 2925 m
 6825 3975 l gs col0 s gr gr

% arrowhead
n 6710 3895 m 6814 3963 l 6754 3854 l 6710 3895 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 8175 3750 m 8925 3750 l 9150 3450 l
 10275 3450 l gs col0 s gr 
% Polyline
n 8175 3450 m 8925 3450 l 9150 3750 l
 10275 3750 l gs col0 s gr 
% Polyline
n 8100 4425 m 9525 4425 l 9675 4650 l
 10275 4650 l gs col0 s gr 
% Polyline
n 8100 2025 m 9525 2025 l 9675 2250 l
 10275 2250 l gs col0 s gr 
% Polyline
15.000 slw
 [90] 0 sd
n 1600 2100 m 5100 2100 l 5100 3450 l 1600 3450 l
 cp gs col4 s gr  [] 0 sd
% Polyline
7.500 slw
n 5625 2700 m 5700 2850 l
 5775 2700 l gs col0 s gr 
/Times-Roman-iso ff 240.00 scf sf
7125 2175 m
gs 1 -1 sc (usr.req) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
8250 1275 m
gs 1 -1 sc (none) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7050 1275 m
gs 1 -1 sc (res.reply) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
5400 2025 m
gs 1 -1 sc (res.avail) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
5325 4050 m
gs 1 -1 sc (~res.avail) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7125 4575 m
gs 1 -1 sc (usr.req) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
8250 3675 m
gs 1 -1 sc (none) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
7050 3675 m
gs 1 -1 sc (res.reply) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
9375 1275 m
gs 1 -1 sc (grant) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
9225 3675 m
gs 1 -1 sc (no-grant) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
1725 2850 m
gs 1 -1 sc (usr.req) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 1385 1547 a Fs(Fig.)14 b(1.)25 b Fu(A)g(Request-Gran)n(t)g
(Prop)r(ert)n(y)523 1910 y Fx(initial)d(no)r(des)j(of)g(the)h(MTD,)g
(and)g(fails)d(only)h(if)h(some)f(p)r(ostcondition)f(fails)g(to)j
(hold,)e(or)g(if)523 2010 y(the)k(fairness)e(prop)r(ert)n(y)g(of)i(the)
g(MTD)g(fails)d(to)j(hold.)648 2109 y(In)34 b(the)g(precondition)d(of)j
(the)g(MTD)h(in)e(Figure)f(1,)i(a)f(user)g(pro)r(cess,)g
Fk(usr)p Fx(,)g(requests)523 2209 y(a)e(resource)e(b)n(y)i(setting)f
(the)h(v)-5 b(alue)30 b(of)h(b)r(o)r(olean)f(v)-5 b(ariable)28
b Fk(usr.req)g Fx(to)j Fp(true)p Fx(.)f(The)h(p)r(ost-)523
2309 y(condition)d(sp)r(eci\014es)h(the)i(t)n(w)n(o)f(p)r(ossible)e
(outcomes.)h(First,)g(if)h(the)g(resource)f(is)g(a)n(v)-5
b(ailable)523 2408 y(\()p Fk(res.avail)26 b Fx(is)i Fp(true)p
Fx(\))h(then)h(the)f(v)-5 b(ariable)27 b Fk(res.reply)e
Fx(is)j(set)h(to)h(the)f(v)-5 b(alue)28 b Fk(grant)p
Fx(.)g(Af-)523 2508 y(ter)k(receiving)c Fk(res.reply)p
Fx(,)h Fk(usr)h Fx(resets)h Fk(usr.req)p Fx(.)e(In)j(the)h(second)e(p)r
(ostcondition,)f(the)523 2607 y(resource)35 b(is)g(not)i(a)n(v)-5
b(ailable)32 b(and)k(the)h(v)-5 b(ariable)33 b Fk(res.reply)g
Fx(is)j(assigned)e(to)i(the)h(v)-5 b(alue)523 2707 y
Fk(no-grant)p Fx(.)20 b(The)j Fn(^)p Fx(-connector)g(at)g(the)g
(initial)d(no)r(de)j(ensures)g(that)g(this)g(c)n(hec)n(k)f(is)g
(enabled)523 2807 y(at)27 b(ev)n(ery)f(p)r(oin)n(t)h(along)e(a)i
(computation)e({)h(the)i(MTD)g(\\forks)e(o\013)6 b(")27
b(a)g(new)g(c)n(hec)n(k)g(at)g(eac)n(h)523 2906 y(step)h(due)g(to)f
(the)h(lo)r(op)e(through)h(the)h(connector.)648 3006
y(This)33 b(is)h(a)g(go)r(o)r(d)g(example)e(of)j(ho)n(w)f(MTD's)h(allo)
n(w)c(sharing)i(of)h(patterns.)h(In)g(other)523 3106
y(notations)j(suc)n(h)h(as)f(timing)f(diagrams)f(or)i(Timeline,)e(this)
j(prop)r(ert)n(y)f(w)n(ould)g(ha)n(v)n(e)g(to)523 3205
y(b)r(e)f(split)d(in)n(to)h(t)n(w)n(o)h(separate)f(prop)r(erties)f
(that)i(duplicate)f(the)i(precondition)c(pattern.)523
3305 y(F)-7 b(or)27 b(more)f(complex)f(prop)r(erties)g(with)j(m)n
(ultiple)c(pre-)j(and)g(p)r(ost-condition)e(no)r(des,)i(suc)n(h)523
3404 y(splitting)32 b(results)i(in)g(a)h(large)e(amoun)n(t)g(of)i
(replication,)c(whic)n(h)j(can)h(ha)n(v)n(e)f(unfortunate)523
3504 y(consequences)26 b(for)h(understanding)f(and)i(main)n(tenance)d
(of)i(sp)r(eci\014cations.)764 3981 y @beginspecial 0
@llx 0 @lly 524 @urx 60 @ury 2880 @rwi @setspecial
%%BeginDocument: figures/semantics.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: semantics.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Fri Apr 19 16:17:38 2002
%%For: kedar@trex8.cs.bell-labs.com (Kedar Namjoshi,,,,hrid=7700533,handle=knamjoshi)
%%BoundingBox: 0 0 524 60
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 60 moveto 0 0 lineto 524 0 lineto 524 60 lineto closepath clip newpath
-48.8 122.2 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Arc
7.500 slw
gs  clippath
1167 1567 m 1214 1605 l 1308 1487 l 1210 1562 l 1261 1449 l cp
eoclip
n 1425.0 1668.8 243.8 -22.6 -157.4 arcn
gs col0 s gr
 gr

% arrowhead
n 1261 1449 m 1210 1562 l 1308 1487 l 1261 1449 l  cp gs 0.00 setgray ef gr  col0 s
% Ellipse
n 1725 1725 168 168 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
2340 1755 m 2340 1695 l 2189 1695 l 2309 1725 l 2189 1755 l cp
eoclip
n 1875 1725 m
 2325 1725 l gs col0 s gr gr

% arrowhead
n 2189 1755 m 2309 1725 l 2189 1695 l 2189 1755 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3915 1755 m 3915 1695 l 3764 1695 l 3884 1725 l 3764 1755 l cp
eoclip
n 3300 1725 m
 3900 1725 l gs col0 s gr gr

% arrowhead
n 3764 1755 m 3884 1725 l 3764 1695 l 3764 1755 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1650 1800 m 1725 1650 l
 1800 1800 l gs col0 s gr 
% Polyline
gs  clippath
1590 1755 m 1590 1695 l 1439 1695 l 1559 1725 l 1439 1755 l cp
eoclip
n 1275 1725 m
 1575 1725 l gs col0 s gr gr

% arrowhead
n 1439 1755 m 1559 1725 l 1439 1695 l 1439 1755 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6615 1755 m 6615 1695 l 6464 1695 l 6584 1725 l 6464 1755 l cp
eoclip
n 6225 1725 m
 6600 1725 l gs col0 s gr gr

% arrowhead
n 6464 1755 m 6584 1725 l 6464 1695 l 6464 1755 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
8190 1755 m 8190 1695 l 8039 1695 l 8159 1725 l 8039 1755 l cp
eoclip
n 7575 1725 m
 8175 1725 l gs col0 s gr gr

% arrowhead
n 8039 1755 m 8159 1725 l 8039 1695 l 8039 1755 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
n 2325 1425 m 3300 1425 l 3300 2025 l 2325 2025 l
 cp gs col4 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6600 1425 m 7575 1425 l 7575 2025 l 6600 2025 l
 cp gs col4 s gr  [] 0 sd
% Polyline
n 3900 1425 m 4875 1425 l 4875 2025 l 3900 2025 l
 cp gs col1 s gr 
% Polyline
n 8175 1425 m 9150 1425 l 9150 2025 l 8175 2025 l
 cp gs col1 s gr 
% Polyline
n 8250 1500 m 9075 1500 l 9075 1950 l 8250 1950 l
 cp gs col1 s gr 
% Polyline
n 3975 1500 m 4800 1500 l 4800 1950 l 3975 1950 l
 cp gs col1 s gr 
% Polyline
gs  clippath
6045 1590 m 6105 1590 l 6105 1439 l 6075 1559 l 6045 1439 l cp
eoclip
n 9150 1725 m 9525 1725 l 9525 1050 l 6075 1050 l
 6075 1575 l gs col0 s gr gr

% arrowhead
n 6045 1439 m 6075 1559 l 6105 1439 l 6045 1439 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
n 825 1575 m 1275 1575 l 1275 1875 l 825 1875 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 55.00 105.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5775 1575 m 6225 1575 l 6225 1875 l 5775 1875 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 385.00 105.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
/Times-Roman ff 270.00 scf sf
4275 1800 m
gs 1 -1 sc (r2) col0 sh gr
/Times-Roman ff 270.00 scf sf
2700 1800 m
gs 1 -1 sc (r1) col0 sh gr
/Times-Roman ff 270.00 scf sf
6975 1800 m
gs 1 -1 sc (r1) col0 sh gr
/Times-Roman ff 270.00 scf sf
8550 1800 m
gs 1 -1 sc (r2) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 867 4155 a Fs(Fig.)14 b(2.)25 b Fu(Ov)n(erlapping)g
(\(left\))i(and)e(Non-o)n(v)n(erlapping)g(\(righ)n(t\))h(Seman)n(tics)
648 4526 y Fx(There)e(are)g(t)n(w)n(o)g(common)e(seman)n(tics)g(of)j
(timing)d(diagrams)f([Fis96)n(,AEKN00)n(]:)k Fp(over-)523
4625 y(lapping)32 b Fx(seman)n(tics,)20 b(where)i(the)h(precondition)d
(of)j(a)f(diagram)d(is)i(c)n(hec)n(k)n(ed)h(at)g(ev)n(ery)g(p)r(oin)n
(t)523 4725 y(on)35 b(a)g(computation,)d(and)j Fp(non-overlapping)p
Fx(,)j(where)c(the)i(precondition)c(is)i(c)n(hec)n(k)n(ed)g(at)523
4825 y(ev)n(ery)c(p)r(oin)n(t)h(un)n(til)f(it)g(holds,)g(follo)n(wing)e
(whic)n(h)i(the)i(c)n(hec)n(king)d(is)h(susp)r(ended)i(while)e(the)523
4924 y(p)r(ostcondition)19 b(pattern)j(is)f(b)r(eing)f(c)n(hec)n(k)n
(ed.)h(In)h(Figure)e(2,)h(w)n(e)g(sho)n(w)g(ho)n(w)g(these)h(st)n(yles)
e(are)1943 5173 y(5)p eop
%%Page: 6 6
6 5 bop 523 448 a Fx(represen)n(ted)30 b(with)g(MTD's.)i(Notice)e(ho)n
(w)g(the)i(lo)r(op)d(through)i(the)g Fn(^)p Fx(-connector)f(on)h(the)
523 548 y(left)24 b(enforces)f(the)h(o)n(v)n(erlapping)c(seman)n(tics,)
h(and)j(ho)n(w)f(the)h(lo)r(op)f(through)g(the)h(p)r(ost-no)r(de)523
648 y(on)j(the)h(righ)n(t)e(ensures)h(the)h(non-o)n(v)n(erlapping)23
b(seman)n(tics.)648 751 y(In)i(the)g(rest)f(of)h(this)f(section,)g(w)n
(e)g(de\014ne)i(the)f(syn)n(tax)f(and)g(seman)n(tics)f(of)h(MTD's)i
(pre-)523 851 y(cisely)-7 b(,)26 b(and)j(describ)r(e)e(the)i(e\016cien)
n(t)e(mo)r(del)g(c)n(hec)n(king)f(algorithm.)f(First,)i(w)n(e)h(will)e
(de\014ne)523 951 y(some)19 b(terms)g(that)i(w)n(e)f(will)e(use)i(in)g
(the)h(sequel.)e(There)h(are)g(a)g(n)n(um)n(b)r(er)f(of)i(di\013eren)n
(t)f(notions)523 1050 y(of)30 b(acceptance)g(used)g(with)f(automata)g
(on)h(in\014nite)f(strings.)f(A)i(B)r(\177)-44 b(uc)n(hi)29
b(acceptance)h(con-)523 1150 y(dition)e(states)i(that)h
Fo(F)42 b Fx(holds)29 b(in\014nitely)e(often)k(\(expressed)e(in)g
(Linear)g(T)-7 b(emp)r(oral)27 b(Logic)523 1249 y(\(L)-7
b(TL\))33 b(as)f Fj(GF)p Fx(\()p Fo(F)12 b Fx(\)\))34
b(and)e(a)g(co-B)r(\177)-44 b(uc)n(hi)30 b(acceptance)i(sp)r(eci\014es)
f(that)i Fo(F)44 b Fx(holds)31 b(from)h(some)523 1349
y(p)r(oin)n(t)27 b(on)n(w)n(ards)f(\(written)h(in)h(L)-7
b(TL)27 b(as)h Fj(F)n(G)p Fx(\()p Fo(F)12 b Fx(\)\).)29
b(One)e(ma)n(y)g(also)e(express)i(an)h(acceptance)523
1449 y(condition)e(as)i(a)g(disjunction)e(of)j(co-B)r(\177)-44
b(uc)n(hi)26 b(and)i(B)r(\177)-44 b(uc)n(hi)27 b(conditions)f([EL87)n
(].)j(Informally)-7 b(,)523 1548 y(a)22 b(safet)n(y)f(prop)r(ert)n(y)g
(sp)r(eci\014es)g(that)h(something)e(\\bad")g(nev)n(er)h(happ)r(ens)h
(during)f(an)h(execu-)523 1648 y(tion,)f(while)g(a)g(liv)n(eness)f
(prop)r(ert)n(y)h(states)g(that)i(something)c(\\go)r(o)r(d")i(ev)n(en)n
(tually)e(happ)r(ens.)523 1748 y(W)-7 b(e)28 b(use)f
Fl(N)h Fx(to)f(represen)n(t)g(the)h(natural)d(n)n(um)n(b)r(ers.)523
2017 y Fl(2.1)95 b(Syn)m(tax)523 2204 y Fx(An)22 b(MTD,)f
Fo(T)12 b Fx(,)21 b(is)f(sp)r(eci\014ed)g(o)n(v)n(er)f(a)i(set)g(of)g
(v)-5 b(ariables)18 b(\(sometimes)g(called)h(\\signals"\),)e(eac)n(h)
523 2304 y(with)26 b(an)h(asso)r(ciated)d(domain)h(of)i(v)-5
b(alues.)25 b Fo(T)38 b Fx(sp)r(eci\014es)26 b(the)h(ordering)d(of)j
(ev)n(en)n(ts)f(\(usually)-7 b(,)523 2404 y(these)37
b(are)g(c)n(hanges)f(in)g(v)-5 b(alue)37 b(of)g(the)h(v)-5
b(ariables\))34 b(and)j(timed)f(dep)r(endencies)h(b)r(et)n(w)n(een)523
2503 y(ev)n(en)n(ts.)32 b(Syn)n(tactically)-7 b(,)28
b(an)k Fp(event)h Fx(is)e(a)h(pair)e(\()p Fo(s;)14 b(i)p
Fx(\),)33 b(where)f Fo(s)g Fx(is)f(a)h(v)-5 b(ariable)29
b(name)i(with)523 2603 y(an)f(asso)r(ciated)f(domain)f(of)i(v)-5
b(alues)30 b Fn(D)1750 2615 y Fi(s)1785 2603 y Fx(,)h(and)f
Fo(i)e Fn(2)h Fl(N)h Fx(is)f(the)i(p)r(osition)e(of)h(the)h(ev)n(en)n
(t.)g(W)-7 b(e)523 2702 y(use)32 b Fo(v)s Fx(\()p Fo(s;)14
b(i)p Fx(\))32 b(to)f(refer)h(to)f(the)h(v)-5 b(alue)31
b(of)h(the)g(ev)n(en)n(t)f(\()p Fo(s;)14 b(i)p Fx(\).)32
b(An)h(MTD)f(ma)n(y)e(b)r(e)i(view)n(ed)f(as)523 2802
y(a)f(graph)f(with)h(no)r(des)g(that)h(are)e(asso)r(ciated)f(with)i
(regular)e(timing)f(diagrams)g(\(R)-7 b(TD's\);)523 2902
y(the)33 b(picture)f(in)f(Figure)g(3)h(sho)n(ws)g(an)g(example)e(MTD)j
(on)g(the)f(left,)h(and)f(a)g(comp)r(onen)n(t)523 3001
y(R)-7 b(TD)28 b(on)g(the)g(righ)n(t.)539 4100 y @beginspecial
0 @llx 0 @lly 421 @urx 270 @ury 1656 @rwi @setspecial
%%BeginDocument: figures/ertd.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ertd.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Thu Apr 25 13:24:08 2002
%%For: kedar@trex8.cs.bell-labs.com (Kedar Namjoshi,,,,hrid=7700533,handle=knamjoshi)
%%BoundingBox: 0 0 421 270
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 270 moveto 0 0 lineto 421 0 lineto 421 270 lineto closepath clip newpath
-151.7 306.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/Times-Roman /Times-Roman-iso isovec ReEncode
/Times-BoldItalic /Times-BoldItalic-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
7.500 slw
% Ellipse
n 4425 2550 225 225 0 360 DrawEllipse gs col0 s gr

% Polyline
n 4350 2475 m 4425 2625 l
 4500 2475 l gs col0 s gr 
% Ellipse
n 4350 3900 225 225 0 360 DrawEllipse gs col0 s gr

% Polyline
n 4410 3945 m 4335 3795 l
 4260 3945 l gs col0 s gr 
% Polyline
gs  clippath
5729 1666 m 5695 1616 l 5570 1700 l 5687 1659 l 5603 1750 l cp
eoclip
n 4575 2400 m
 5700 1650 l gs col0 s gr gr

% arrowhead
n 5603 1750 m 5687 1659 l 5570 1700 l 5603 1750 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5628 2958 m 5649 2902 l 5508 2847 l 5610 2919 l 5487 2903 l cp
eoclip
n 4650 2550 m
 5625 2925 l gs col0 s gr gr

% arrowhead
n 5487 2903 m 5610 2919 l 5508 2847 l 5487 2903 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7515 4005 m 7515 3945 l 7364 3945 l 7484 3975 l 7364 4005 l cp
eoclip
n 4575 3975 m
 7500 3975 l gs col0 s gr gr

% arrowhead
n 7364 4005 m 7484 3975 l 7364 3945 l 7364 4005 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3191 2094 m 3240 2129 l 3329 2007 l 3235 2087 l 3281 1972 l cp
eoclip
n 3825 1275 m
 3225 2100 l gs col12 s gr gr

% arrowhead
n 3281 1972 m 3235 2087 l 3329 2007 l 3281 1972 l  cp gs col12 1.00 shd ef gr  col12 s
% Polyline
gs  clippath
4661 2743 m 4617 2785 l 4722 2894 l 4661 2787 l 4765 2852 l cp
eoclip
n 6675 4875 m
 4650 2775 l gs col12 s gr gr

% arrowhead
n 4765 2852 m 4661 2787 l 4722 2894 l 4765 2852 l  cp gs col12 1.00 shd ef gr  col12 s
% Polyline
gs  clippath
4233 4206 m 4185 4170 l 4094 4291 l 4190 4213 l 4142 4327 l cp
eoclip
n 3750 4800 m
 4200 4200 l gs col12 s gr gr

% arrowhead
n 4142 4327 m 4190 4213 l 4094 4291 l 4142 4327 l  cp gs col12 1.00 shd ef gr  col12 s
% Polyline
n 3675 2550 m
 4200 2550 l gs col0 s gr 
% Polyline
n 3675 3900 m
 4125 3900 l gs col0 s gr 
% Polyline
15.000 slw
 [90] 0 sd
n 2550 3525 m 3675 3525 l 3675 4200 l 2550 4200 l
 cp gs col4 s gr  [] 0 sd
% Polyline
 [90] 0 sd
n 2550 2250 m 3675 2250 l 3675 2925 l 2550 2925 l
 cp gs col4 s gr  [] 0 sd
% Polyline
7.500 slw
gs  clippath
5653 3092 m 5621 3041 l 5493 3123 l 5611 3084 l 5526 3174 l cp
eoclip
n 4575 3750 m
 5625 3075 l gs col0 s gr gr

% arrowhead
n 5526 3174 m 5611 3084 l 5493 3123 l 5526 3174 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 4950 2850 m 5025 2850 l
 5025 2925 l gs col0 s gr 
% Polyline
gs  clippath
8265 1680 m 8265 1620 l 8114 1620 l 8234 1650 l 8114 1680 l cp
eoclip
n 6825 1650 m
 8250 1650 l gs col0 s gr gr

% arrowhead
n 8114 1680 m 8234 1650 l 8114 1620 l 8114 1680 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
 [90] 0 sd
n 5700 1350 m 6825 1350 l 6825 2025 l 5700 2025 l
 cp gs col4 s gr  [] 0 sd
% Polyline
7.500 slw
gs  clippath
8470 1308 m 8504 1258 l 8378 1174 l 8462 1266 l 8345 1224 l cp
eoclip
n 8025 975 m
 8475 1275 l gs col12 s gr gr

% arrowhead
n 8345 1224 m 8462 1266 l 8378 1174 l 8345 1224 l  cp gs col12 1.00 shd ef gr  col12 s
/Times-Roman-iso ff 270.00 scf sf
2925 2700 m
gs 1 -1 sc (T1) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
2925 3975 m
gs 1 -1 sc (T4) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
5025 1950 m
gs 1 -1 sc (g) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
5100 2925 m
gs 1 -1 sc (g) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
6075 1800 m
gs 1 -1 sc (T2) col0 sh gr
% Arc
gs  clippath
4502 4016 m 4471 4067 l 4600 4147 l 4514 4059 l 4631 4096 l cp
eoclip
n 6390.7 1114.5 3491.7 64.8 122.8 arc
gs col0 s gr
 gr

% arrowhead
n 4631 4096 m 4514 4059 l 4600 4147 l 4631 4096 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 5850 4950 m 5925 5100 l
 6000 4950 l gs col12 s gr 
% Polyline
n 7500 3525 m 8625 3525 l 8625 4200 l 7500 4200 l
 cp gs col1 s gr 
% Polyline
n 5700 2550 m 6825 2550 l 6825 3225 l 5700 3225 l
 cp gs col1 s gr 
% Polyline
n 8325 1350 m 9450 1350 l 9450 2025 l 8325 2025 l
 cp gs col1 s gr 
% Polyline
n 5625 2475 m 6900 2475 l 6900 3300 l 5625 3300 l
 cp gs col1 s gr 
% Polyline
n 7425 3450 m 8700 3450 l 8700 4275 l 7425 4275 l
 cp gs col1 s gr 
% Polyline
n 8250 1275 m 9525 1275 l 9525 2100 l 8250 2100 l
 cp gs col1 s gr 
% Polyline
n 2625 5100 m 2700 4950 l
 2775 5100 l gs col12 s gr 
/Times-Roman-iso ff 270.00 scf sf
8700 1800 m
gs 1 -1 sc (T5) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
7875 3975 m
gs 1 -1 sc (T6) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
6075 3000 m
gs 1 -1 sc (T3) col0 sh gr
/Times-BoldItalic-iso ff 270.00 scf sf
2775 5100 m
gs 1 -1 sc (-connector) col12 sh gr
/Times-BoldItalic-iso ff 270.00 scf sf
6000 5100 m
gs 1 -1 sc (-connector) col12 sh gr
/Times-BoldItalic-iso ff 270.00 scf sf
7275 825 m
gs 1 -1 sc (post -node) col12 sh gr
/Times-BoldItalic-iso ff 270.00 scf sf
3375 1125 m
gs 1 -1 sc (pre -node) col12 sh gr
/Times-Roman-iso ff 270.00 scf sf
8550 3375 m
gs 1 -1 sc (*) col1 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 2217 4031 a @beginspecial 0 @llx 0 @lly
196 @urx 163 @ury 1080 @rwi @setspecial
%%BeginDocument: figures/rtdseg.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: rtdseg.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Mon Jan 21 13:54:21 2002
%%For: namla@nslocum.cs.bell-labs.com (Nina Amla,2c530,,bl011272,07/26/99,[ k,k ])
%%BoundingBox: 0 0 196 163
%%Magnification: 0.8000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 163 moveto 0 0 lineto 196 0 lineto 196 163 lineto closepath clip newpath
-75.6 187.2 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% crosshatch30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<033003300c0c0c0c30033003c000c000300330030c0c0c0c
	0330033000c000c0033003300c0c0c0c30033003c000c000
	300330030c0c0c0c0330033000c000c0>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P3 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.04800 0.04800 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 2400 2550 m
 2250 2775 l gs col0 s gr 
% Polyline
n 2325 3450 m 4125 3450 l 4275 3675 l
 5550 3675 l gs col0 s gr 
% Polyline
n 2325 1875 m
 2700 1875 l gs col0 s gr 
% Polyline
n 5400 2550 m 4950 2550 l 4725 2775 l 3675 2775 l 3525 2550 l
 2400 2550 l gs col0 s gr 
% Polyline
n 5400 2550 m
 5550 2775 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
1575 1800 m
gs 1 -1 sc (M.r) col0 sh gr
/Times-Roman ff 180.00 scf sf
1575 2700 m
gs 1 -1 sc (N.s) col0 sh gr
/Times-Roman ff 180.00 scf sf
1575 3600 m
gs 1 -1 sc (M.t) col0 sh gr
% Polyline
gs  clippath
2966 2026 m 3021 2051 l 3083 1913 l 3007 2010 l 3029 1888 l cp
eoclip
n 3375 1200 m
 3000 2025 l gs col12 s gr gr

% arrowhead
n 3029 1888 m 3007 2010 l 3083 1913 l 3029 1888 l  cp gs col12 1.00 shd ef gr  col12 s
% Polyline
gs  clippath
4916 1648 m 4968 1677 l 5043 1546 l 4958 1636 l 4991 1516 l cp
eoclip
n 5250 1125 m
 4950 1650 l gs col12 s gr gr

% arrowhead
n 4991 1516 m 4958 1636 l 5043 1546 l 4991 1516 l  cp gs col12 1.00 shd ef gr  col12 s
% Ellipse
n 4807 1716 40 67 0 360 DrawEllipse gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 317.80 109.93] PATmp PATsp ef gr PATusp gs col4 s gr

% Ellipse
n 4807 2636 40 67 0 360 DrawEllipse gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 317.80 171.27] PATmp PATsp ef gr PATusp gs col4 s gr

% Polyline
n 4836 1488 m
 4836 2867 l gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 322.40 99.20] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 4780 1488 m
 4780 2867 l gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 318.67 99.20] PATmp PATsp ef gr PATusp gs col4 s gr 
% Arc
gs  clippath
3527 2658 m 3550 2602 l 3410 2545 l 3510 2619 l 3387 2601 l cp
eoclip
n 3828.4 1694.3 978.9 178.2 108.1 arcn
gs col0 s gr
 gr

% arrowhead
n 3387 2601 m 3510 2619 l 3410 2545 l 3387 2601 l  cp gs 0.00 setgray ef gr  col0 s
/Times-BoldItalic ff 240.00 scf sf
4650 2700 m
gs 1 -1 sc (2) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
5550 2700 m
gs 1 -1 sc (3) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
5400 1800 m
gs 1 -1 sc (3) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
5475 3900 m
gs 1 -1 sc (2) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
2250 2550 m
gs 1 -1 sc (0) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
3750 2700 m
gs 1 -1 sc (1) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
2250 3900 m
gs 1 -1 sc (0) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
4275 3900 m
gs 1 -1 sc (1) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
2250 1800 m
gs 1 -1 sc (0) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
2775 975 m
gs 1 -1 sc (dependency) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
2775 675 m
gs 1 -1 sc (sequential) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
4500 975 m
gs 1 -1 sc (dependency) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
4575 1575 m
gs 1 -1 sc (2) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
4500 675 m
gs 1 -1 sc (concurrent) col12 sh gr
/Times-BoldItalic ff 240.00 scf sf
2850 1575 m
gs 1 -1 sc (1) col12 sh gr
% Polyline
n 2700 1875 m 2925 1650 l 4725 1650 l 4950 1875 l
 5550 1875 l gs col0 s gr 
$F2psEnd
rs
end

%%EndDocument
 @endspecial 961 4243 a Fs(Fig.)13 b(3.)26 b Fu(A)f(Mo)r(dular)i
(Timing)e(Diagram)h(and)f(a)h(comp)r(onen)n(t)f(R)-6
b(TD)648 4538 y Fx(A)28 b Fp(r)l(e)l(gular)h(timing)h(diagr)l(am)36
b Fx(\(cf.)28 b([AEN99)o(]\))g(is)f(a)g(tuple)g(\()p
Fo(S;)14 b Fn(E)7 b Fo(;)14 b Fp(SD)8 b Fo(;)14 b Fp(CD)8
b Fx(\),)28 b(where)575 4721 y Fl({)41 b Fo(S)33 b Fx(is)26
b(a)h(\014nite)g(set)h(of)g(v)-5 b(ariable)24 b(names.)575
4825 y Fl({)41 b Fx(F)-7 b(or)24 b(eac)n(h)g Fo(s)f Fn(2)h
Fo(S)29 b Fx(there)24 b(is)g(a)g(\014nite)h(set)f(of)h(ev)n(en)n(ts,)f
Fn(E)7 b Fx(\()p Fo(s)p Fx(\),)25 b(represen)n(ted)f(as)g
Fn(f)p Fx(\()p Fo(s;)14 b Fx(0\))p Fo(;)g(:)g(:)g(:)f(;)664
4924 y Fx(\()p Fo(s;)h(n)822 4936 y Fi(s)876 4924 y Fn(\000)k
Fx(1\))p Fn(g)p Fx(,)27 b(called)e(the)j Fp(waveform)36
b Fx(for)27 b Fo(s)p Fx(.)h(The)g(set)f(of)h(all)d(ev)n(en)n(ts)i
Fn(E)7 b Fx(,)28 b(is)e Fn([)3101 4936 y Fi(s)p Fh(2)p
Fi(S)3226 4924 y Fn(E)7 b Fx(\()p Fo(s)p Fx(\).)1943
5173 y(6)p eop
%%Page: 7 7
7 6 bop 575 448 a Fl({)41 b Fp(SD)29 b Fx(is)21 b(the)i(set)f(of)g
Fp(se)l(quential)g Fx(dep)r(endencies)f(on)h(the)g(ev)n(en)n(ts)f(of)h
Fn(E)7 b Fx(.)23 b(Eac)n(h)e(dep)r(endency)664 548 y(is)f(sp)r
(eci\014ed)h(as)g(\()p Fo(s;)14 b(i)p Fx(\))1385 501
y Fi(c)1358 548 y Fn(!)23 b Fx(\()p Fo(t;)14 b(j)5 b
Fx(\).)22 b(The)f(timing)e(constrain)n(t)g(for)i(the)h(dep)r(endency)-7
b(,)22 b Fo(c)p Fx(,)g(has)664 648 y(the)32 b(form)d(\()p
Fo(cl)r(ock)s(;)14 b Fx([)p Fo(a;)g(b)p Fn(i)p Fx(\),)31
b(where)f Fp(clo)l(ck)41 b Fx(is)30 b(an)h(atomic)d(prop)r(osition)g
(that)k(acts)e(as)g(a)664 747 y(timer,)c Fo(a)d Fn(2)g
Fl(N)p Fx(,)28 b Fo(b)22 b Fn(2)i Fl(N)18 b Fn([)h(f1g)p
Fx(,)27 b(and)g(1)c Fn(\024)f Fo(a)h Fn(\024)g Fo(b)p
Fx(.)575 859 y Fl({)41 b Fp(CD)h Fx(is)33 b(a)h(collection)d(of)j(m)n
(utually)d(disjoin)n(t)i(sets)g(of)i(ev)n(en)n(ts.)e(Eac)n(h)g(set)h
(is)g(called)d(a)664 958 y Fp(c)l(oncurr)l(ent)e(dep)l(endency)p
Fx(.)648 1161 y(W)-7 b(e)19 b(refer)e(to)i(the)g(comp)r(onen)n(ts)e(of)
i(an)f(R)-7 b(TD)19 b Fo(r)j Fx(as)c Fo(S)2230 1173 y
Fi(r)2266 1161 y Fx(,)h Fn(E)2352 1173 y Fi(r)2389 1161
y Fx(,)f Fp(SD)2547 1173 y Fi(r)2603 1161 y Fx(and)g
Fp(CD)2885 1173 y Fi(r)2922 1161 y Fx(,)h(resp)r(ectiv)n(ely)-7
b(.)523 1260 y(The)25 b Fp(size)32 b Fx(of)25 b(an)g(R)-7
b(TD)25 b Fo(r)r Fx(,)h Fn(j)p Fo(r)r Fn(j)p Fx(,)g(is)e
Fn(jE)1631 1272 y Fi(r)1668 1260 y Fn(j)13 b Fx(+)g Fn(j)p
Fp(SD)1922 1272 y Fi(r)1959 1260 y Fn(j)g Fx(+)g Fn(j)p
Fp(CD)2226 1272 y Fi(r)2263 1260 y Fn(j)p Fx(.)25 b(An)h(ev)n(en)n(t)e
(\()p Fo(s;)14 b(i)f Fx(+)g(1\))25 b(is)f(a)h Fp(change)523
1360 y(event)42 b Fx(if)34 b Fo(v)s Fx(\()p Fo(s;)14
b(i)23 b Fx(+)g(1\))34 b Fn(6)p Fx(=)g Fo(v)s Fx(\()p
Fo(s;)14 b(i)p Fx(\).)35 b(An)g(R)-7 b(TD)35 b(is)e Fp(wel)t(l-forme)l
(d)45 b Fx(if)34 b(\(a\))g(the)h(source)e(of)i(eac)n(h)523
1459 y(sequen)n(tial)25 b(dep)r(endency)k(is)d(a)i(c)n(hange)f(ev)n(en)
n(t,)g(and)h(the)g(destination)e(is)h(either)g(a)g(c)n(hange)523
1559 y(ev)n(en)n(t)i(or)g(a)g(concurren)n(t)g(dep)r(endency)-7
b(,)30 b(\(b\))g(eac)n(h)f(concurren)n(t)f(dep)r(endency)i(con)n(tains)
e(at)523 1659 y(least)e(one)g(c)n(hange)g(ev)n(en)n(t,)h(\(c\))g(the)h
(set)f(of)g(dep)r(endencies)f(of)h(the)g(R)-7 b(TD)28
b(\(not)f(considering)523 1758 y(the)36 b(m)n(utual)e(concurren)n(t)h
(dep)r(endencies\))g(is)g(acyclic,)e(and)j(\(d\))h(an)n(y)e(non-empt)n
(y)f(R)-7 b(TD)523 1858 y(con)n(tains)36 b(at)i(least)e(t)n(w)n(o)h(ev)
n(en)n(ts)h(p)r(er)f(signal.)f(In)i(the)g(sequel,)f(w)n(e)g(consider)f
(only)h(w)n(ell-)523 1958 y(formed)29 b(R)-7 b(TD's.)30
b(F)-7 b(or)30 b(a)f(non-empt)n(y)g(R)-7 b(TD,)30 b(the)h(set)f
Fn(f)p Fx(\()p Fo(s;)14 b(n)2440 1970 y Fi(s)2495 1958
y Fn(\000)19 b Fx(1\))27 b Fn(j)g Fo(s)g Fn(2)h Fo(S)5
b Fn(g)29 b Fx(of)h(the)g(\014nal)523 2057 y(ev)n(en)n(ts)h(of)g(eac)n
(h)f(signal)f(forms)g(a)i(pre-de\014ned)g(concurren)n(t)f(dep)r
(endency)-7 b(,)32 b(one)e(of)i(whose)523 2157 y(c)n(hange)26
b(ev)n(en)n(ts)h(is)g(designated)f(as)h(the)h Fp(\014nal)f
Fx(ev)n(en)n(t.)648 2268 y(F)-7 b(or)34 b(example,)f(the)j(R)-7
b(TD)36 b(in)e(Figure)g(3)h(has)g(three)g(v)-5 b(ariables:)32
b Fo(M)t(:r)n(;)14 b(N)t(:s)36 b Fx(and)f Fo(M)t(:t)p
Fx(.)523 2368 y(There)h(is)f(a)h(sequen)n(tial)d(dep)r(endency)k(from)e
(\()p Fo(M)t(:r)n(;)14 b Fx(1\))36 b(to)g(\()p Fo(N)t(:s;)14
b Fx(1\),)37 b(and)f(a)f(concurren)n(t)523 2468 y(dep)r(endency)28
b(con)n(taining)d(\()p Fo(M)t(:r)n(;)14 b Fx(2\))27 b(and)h(\()p
Fo(N)t(:s;)14 b Fx(2\).)648 2579 y(Mo)r(dular)27 b(Timing)f(Diagrams)g
(are)i(built)g(b)n(y)h(comp)r(osing)d(together)i(R)-7
b(TD's.)30 b(A)g Fp(mo)l(d-)523 2679 y(ular)g(timing)g(diagr)l(am)f
Fx(is)e(de\014ned)h(b)n(y)f(a)g(tuple)g(\()p Fo(N)t(;)14
b(C)q(;)g(I)7 b(;)14 b(F)e Fx(\),)29 b(where)575 2893
y Fl({)41 b Fo(N)i Fx(is)33 b(a)g(\014nite)h(set)g(of)g
Fp(no)l(des)p Fx(,)g(partitioned)e(in)n(to)g Fo(N)2328
2905 y Fi(pr)r(e)2430 2893 y Fx(,)i(the)h(set)f(of)g
Fp(pr)l(e-no)l(des)p Fx(,)g(and)664 2993 y Fo(N)731 3005
y Fi(post)858 2993 y Fx(,)28 b(the)g(set)g(of)f Fp(p)l(ost-no)l(des)p
Fx(.)h(Eac)n(h)f(no)r(de)g(is)g(lab)r(eled)f(with)h(an)g(R)-7
b(TD.)575 3104 y Fl({)41 b Fo(C)34 b Fx(is)27 b(a)h(set)g(of)g
Fp(c)l(onne)l(ctors)p Fx(.)f(An)i Fn(^)p Fx(-connector)e(is)f(an)i
(elemen)n(t)e(of)i Fo(N)f Fn(\002)19 b Fx(2)2987 3074
y Fi(N)3049 3104 y Fx(,)28 b(while)e(an)664 3204 y Fn(_)p
Fx(-connector)j(is)h(an)g(elemen)n(t)e(of)j Fo(N)e Fn(\002)20
b Fx(2)1963 3174 y Fi(G)p Fh(\002)p Fi(N)2129 3204 y
Fx(,)30 b(where)g Fo(G)h Fx(is)e(a)h(set)h(of)f Fp(guar)l(ds)p
Fx(,)h(whic)n(h)664 3304 y(are)c(b)r(o)r(olean-t)n(yp)r(ed)f
(expressions)f(o)n(v)n(er)g(the)j(v)-5 b(ariables)25
b(of)i(the)h(MTD.)575 3415 y Fl({)41 b Fo(I)30 b Fn(\022)23
b Fo(N)885 3427 y Fi(pr)r(e)1015 3415 y Fx(is)j(a)h(set)h(of)g
Fp(initial)h Fx(no)r(des.)575 3527 y Fl({)41 b Fo(F)35
b Fn(\022)23 b Fo(N)36 b Fx(is)27 b(a)g(set)g(of)h Fp(fair)38
b Fx(no)r(des,)27 b(de\014ning)g(a)g(co-B)r(\177)-44
b(uc)n(hi)26 b(acceptance)g(condition.)648 3729 y(The)20
b Fn(^)p Fx(-connectors)f(indicate)f(forking,)g Fn(_)p
Fx(-connectors)h(indicate)f(deterministic)f(c)n(hoice)523
3828 y(and)32 b(iteration)d(is)h(allo)n(w)n(ed)e(b)n(y)k(lo)r(oping)d
(in)i(the)h(MTD)g(graph.)e(Giv)n(en)h(a)g(connector)g
Fo(c)e Fx(=)523 3928 y(\()p Fo(r)n(;)14 b(R)q Fx(\),)25
b(w)n(e)f(sa)n(y)f(that)i Fo(c)g Fx(is)e(an)h Fp(outgoing)h
Fx(connector)e(from)h Fo(r)r Fx(.)h(The)f(size)g(of)g(an)g
Fn(^)p Fx(-connector)523 4028 y(\()p Fo(r)n(;)14 b(R)q
Fx(\))37 b(is)e Fn(j)p Fo(R)q Fn(j)p Fx(;)h(the)h(size)e(of)i(an)f
Fn(_)p Fx(-connector)f(\()p Fo(r)n(;)14 b Fn(f)p Fo(g)2223
4040 y Fi(i)2250 4028 y Fo(;)g(r)2324 4040 y Fi(i)2352
4028 y Fn(g)p Fx(\))36 b(is)g(the)g(sum)g(of)g(the)h(lengths)523
4127 y(of)c(the)f(form)n(ulas)e(de\014ning)h(the)i(guards)e
Fo(g)1892 4139 y Fi(i)1920 4127 y Fx(.)h(The)h Fp(size)39
b Fx(of)33 b(an)f(MTD)h(is)f(the)g(sum)g(of)h(the)523
4227 y(sizes)c(of)h(its)g(comp)r(onen)n(t)f(R)-7 b(TD's)31
b(and)g(the)g(sizes)d(of)j(its)f(connectors.)f(An)i(MTD)g(is)e
Fp(wel)t(l-)523 4327 y(forme)l(d)40 b Fx(if)e(\(a\))h(for)f(eac)n(h)g
(pre-no)r(de)g(R)-7 b(TD,)39 b(its)f(dep)r(endency)h(graph)f(is)g(a)g
(total)f(order,)523 4426 y(\(b\))k(ev)n(ery)e(pre-no)r(de)g(has)h(one)g
(outgoing)e(connector,)h(and)h(ev)n(ery)f(p)r(ost)h(no)r(de)g(has)g(at)
523 4526 y(most)22 b(one)h(outgoing)e(connector,)h(\(c\))h(for)g(ev)n
(ery)f Fn(_)p Fx(-connector,)g(the)h(guards)f(are)g(m)n(utually)523
4625 y(disjoin)n(t)33 b(and)i(complete)d(\(that)k(is,)e
Fo(g)1726 4637 y Fi(i)1790 4625 y Fn(^)j Fo(g)1922 4637
y Fi(j)2006 4625 y Fn(\021)49 b Fp(false)42 b Fx(for)34
b Fo(i)h Fn(6)p Fx(=)g Fo(j)5 b Fx(,)35 b(and)2885 4563
y Fg(W)2954 4650 y Fi(i)2996 4625 y Fo(g)3036 4637 y
Fi(i)3098 4625 y Fx(=)g Fp(true)6 b Fx(\).)523 4725 y(W)-7
b(e)38 b(use)f Fo(N)896 4737 y Fi(ter)r(m)1085 4725 y
Fx(for)f(the)i(subset)f(of)g(p)r(ost-no)r(des,)g(called)e
Fp(terminal)46 b Fx(no)r(des,)37 b(that)g(ha)n(v)n(e)523
4825 y(no)d(asso)r(ciated)d(outgoing)h(connector.)h(In)h(the)g(sequel,)
f(w)n(e)h(consider)d(only)i(w)n(ell-formed)523 4924 y(MTD's.)1943
5173 y(7)p eop
%%Page: 8 8
8 7 bop 523 448 a Fl(2.2)95 b(Seman)m(tics)523 603 y
Fx(The)33 b(seman)n(tics)c(of)k(an)f(MTD)h(is)e(a)h(set)g(of)h
(in\014nite)e(sequences)h(o)n(v)n(er)e Fp(states)p Fx(;)j(eac)n(h)e
(state)523 703 y(is)f(a)h(v)n(ector)f(of)h(v)-5 b(alues)30
b(for)h(the)g(v)-5 b(ariables)28 b(app)r(earing)h(in)i(the)g(comp)r
(onen)n(t)f(R)-7 b(TD's.)32 b(The)523 802 y(informal)f(seman)n(tics)h
(of)j(an)g(MTD)g(w)n(as)f(giv)n(en)f(earlier;)e(here,)k(w)n(e)f(sp)r
(ecify)h(the)g(seman-)523 902 y(tics)29 b(formally)d(b)n(y)k
(describing)d(a)j Fn(8)p Fx(-automaton)d(whose)i(language)f(\(the)i
(set)g(of)g(accepted)523 1001 y(sequences\))d(is)g(the)h(seman)n(tics)c
(of)k(the)g(MTD.)648 1101 y(A)22 b Fn(8)p Fx(F)-9 b(A,)21
b Fo(A)p Fx(,)h(is)e(sp)r(eci\014ed)h(b)n(y)g(a)g(tuple)h(\()p
Fo(\006)5 b(;)14 b(Q;)g(Q)2130 1113 y Fw(0)2166 1101
y Fo(;)g(\016)o(;)g(F)e Fx(\))21 b(where)g Fo(\006)26
b Fx(is)21 b(a)g(\014nite)g(alphab)r(et;)523 1201 y Fo(Q)i
Fx(is)e(a)i(\014nite)f(set)h(of)g(states;)f Fo(Q)1497
1213 y Fw(0)1534 1201 y Fx(,)h(a)g(non-empt)n(y)e(subset)i(of)g
Fo(Q)p Fx(,)g(is)e(the)j(set)e(of)h(initial)c(states;)523
1300 y Fo(\016)36 b Fx(:)d Fo(Q)22 b Fn(\002)g Fo(\006)38
b Fn(!)33 b Fx(2)1088 1270 y Fi(Q)1140 1245 y Ff(+)1224
1300 y Fx(is)g(the)h(transition)c(relation,)h(where)i
Fo(Q)2493 1270 y Fw(+)2581 1300 y Fx(=)g Fo(Q)22 b Fn([)g(f)p
Fo(\017)p Fx(\()p Fo(q)s Fx(\))33 b(:)g Fo(q)j Fn(2)e
Fo(Q)p Fn(g)p Fx(;)523 1400 y(and)e Fo(F)12 b Fx(,)32
b(a)g(subset)h(of)f Fo(Q)1308 1370 y Fi(!)1355 1400 y
Fx(,)h(is)e(the)i(acceptance)e(condition.)f(States)i(of)h(the)f(form)f
Fo(\017)p Fx(\()p Fo(q)s Fx(\))i(in)523 1500 y Fo(Q)589
1469 y Fw(+)677 1500 y Fx(are)f(used)h(to)f(indicate)f(an)i
Fo(\017)g Fx(mo)n(v)n(e.)e(A)i(run)g(of)f Fo(A)i Fx(on)e(input)h
(string)e Fo(\033)36 b Fn(2)c Fo(\006)3148 1469 y Fi(!)3228
1500 y Fx(is)g(an)523 1599 y(in\014nite)g(sequence)g
Fo(\032)h Fx(from)e(\()p Fo(Q)22 b Fn(\002)g Fl(N)p Fx(\))1750
1569 y Fi(!)1798 1599 y Fx(.)33 b(A)g(con\014guration)d(\()p
Fo(q)s(;)14 b(i)p Fx(\))33 b(on)f(the)i(run)e(indicates)523
1699 y(that)25 b(the)h(automaton)d(is)g(in)i(state)f
Fo(q)k Fx(and)d(is)f(reading)f(sym)n(b)r(ol)f Fo(\033)2559
1711 y Fi(i)2587 1699 y Fx(.)j(The)g(run)g(is)f(v)-5
b(alid)23 b(if)i(for)523 1798 y Fo(\032)566 1810 y Fw(0)626
1798 y Fx(=)e(\()p Fo(q)s(;)14 b(a)p Fx(\),)24 b Fo(q)i
Fn(2)e Fo(Q)1154 1810 y Fw(0)1215 1798 y Fx(and)f Fo(a)g
Fx(=)g(0,)g(and)h(for)g(all)d Fo(i)i Fn(2)g Fl(N)p Fx(,)h(if)f
Fo(\032)2375 1810 y Fi(i)2426 1798 y Fx(=)g(\()p Fo(q)s(;)14
b(k)s Fx(\))24 b(and)g Fo(\032)2926 1810 y Fi(i)p Fw(+1)3060
1798 y Fx(=)f(\()p Fo(q)3220 1768 y Fh(0)3244 1798 y
Fo(;)14 b(k)3327 1768 y Fh(0)3350 1798 y Fx(\),)523 1898
y(then)29 b(either)e Fo(k)995 1868 y Fh(0)1043 1898 y
Fx(=)c Fo(k)32 b Fx(and)c Fo(\017)p Fx(\()p Fo(q)1474
1868 y Fh(0)1497 1898 y Fx(\))d Fn(2)g Fo(\016)s Fx(\()p
Fo(q)s(;)14 b(\033)1830 1910 y Fi(k)1871 1898 y Fx(\),)29
b(or)e Fo(k)2103 1868 y Fh(0)2151 1898 y Fx(=)d Fo(k)d
Fx(+)e(1)28 b(and)g Fo(q)2660 1868 y Fh(0)2708 1898 y
Fn(2)c Fo(\016)s Fx(\()p Fo(q)s(;)14 b(\033)2983 1910
y Fi(k)3025 1898 y Fx(\).)29 b(The)f(run)523 1998 y(is)d
Fp(ac)l(c)l(epting)33 b Fx(if)26 b(the)g(pro)5 b(jection)23
b(of)j Fo(\032)g Fx(on)f Fo(Q)g Fx(is)g(in)g Fo(F)12
b Fx(,)25 b(or)g(if)g(there)h(are)e(only)h Fo(\017)g
Fx(mo)n(v)n(es)e(from)523 2097 y(some)k(p)r(oin)n(t)i(on.)f
Fn(8)p Fx(F)-9 b(A's)29 b(di\013er)f(from)f(NF)-9 b(A's)30
b(in)e(that)h(a)g(string)e Fo(\033)32 b Fx(is)c(in)g(the)i(language)c
(of)523 2197 y Fo(A)h Fx(if,)e(and)h(only)f(if,)h Fp(al)t(l)36
b Fx(runs)25 b(of)i Fo(A)f Fx(on)g Fo(\033)k Fx(are)25
b(accepting)f(runs)i(\(for)g(NF)-9 b(A's,)27 b(only)d(one)i(run)523
2297 y(need)34 b(b)r(e)h(accepting\).)e(As)h(observ)n(ed)f(in)g([MP87)o
(],)h(one)g(can)g(generate)e(an)i(NF)-9 b(A)35 b(for)f(the)523
2396 y(complemen)n(t)e(of)i(a)g Fn(8)p Fx(F)-9 b(A)35
b(language,)d(and)i(vice)f(v)n(ersa,)g(in)h(linear)e(time)h(b)n(y)i(k)n
(eeping)e(the)523 2496 y(same)c(transition)f(structure)i(but)h
(negating)d(the)j(acceptance)f(condition.)e(Therefore,)i(as)523
2595 y(NF)-9 b(A's)33 b(with)f(B)r(\177)-44 b(uc)n(hi)32
b(acceptance)g(conditions)e(\(that)j(is,)f Fj(GF)p Fx(\()p
Fp(ac)l(c)l(ept)9 b Fx(\)\))34 b(su\016ce)e(to)h(de\014ne)523
2695 y(the)21 b Fo(!)s Fx(-regular)16 b(languages,)i(the)i(same)f(is)g
(true)h(for)g Fn(8)p Fx(F)-9 b(A's)20 b(with)f(the)i(complemen)n(ted)c
(B)r(\177)-44 b(uc)n(hi)523 2795 y(condition)25 b(\(that)k(is,)d
Fj(F)n(G)p Fx(\()p Fp(ac)l(c)l(ept)9 b Fx(\)\).)523 2894
y Fl(R)-8 b(TD)35 b(Language:)30 b Fx(Let)g Fo(r)g Fx(=)d(\()p
Fo(S;)14 b Fn(E)7 b Fo(;)14 b Fp(SD)8 b Fo(;)14 b Fp(CD)8
b Fx(\))30 b(b)r(e)g(a)g(non-empt)n(y)f(R)-7 b(TD.)31
b(The)f(language)523 2994 y(of)25 b Fo(r)j Fx(is)c(the)h(set)g(of)g
(\014nite)f(strings)f Fo(z)29 b Fx(o)n(v)n(er)23 b Fo(\006)1908
2964 y Fh(\003)1970 2994 y Fx(for)i(whic)n(h)f(there)h(exists)e(a)i
Fp(lo)l(c)l(ator)34 b Fx(function)523 3094 y Fo(\025)571
3106 y Fi(z)633 3094 y Fx(:)23 b Fn(E)30 b(!)23 b Fx([0)p
Fo(::)p Fn(j)p Fo(z)t Fn(j)18 b(\000)g Fx(1],)27 b(suc)n(h)g(that:)575
3245 y Fl({)41 b Fx(Ev)n(ery)29 b(ev)n(en)n(t)i(in)f
Fn(E)38 b Fx(can)30 b(b)r(e)h(lo)r(cated)f(on)g Fo(z)k
Fx(and)d(has)f(a)h(v)-5 b(alue)29 b(consisten)n(t)g(with)i(that)664
3345 y(in)25 b Fo(r)r Fx(.)h(That)f(is,)g Fo(\025)1205
3357 y Fi(z)1269 3345 y Fx(is)f(total,)g(and)h(if)g Fo(\025)1850
3357 y Fi(z)1889 3345 y Fx(\()p Fo(s;)14 b(i)p Fx(\))23
b(=)f Fo(k)s Fx(,)k(then)f Fo(z)2488 3357 y Fi(k)2529
3345 y Fx(\()p Fo(s)p Fx(\),)h(the)g(v)-5 b(alue)24 b(of)h
Fo(s)g Fx(at)h(the)664 3445 y Fo(k)s Fx(th)i(p)r(osition)e(on)h
Fo(z)t Fx(,)g(equals)f Fo(v)s Fx(\()p Fo(s;)14 b(i)p
Fx(\).)575 3541 y Fl({)41 b Fx(Let)28 b Fo(\025)861 3553
y Fi(z)900 3541 y Fx(\()p Fo(s;)14 b(i)p Fx(\))23 b(=)f
Fo(k)31 b Fx(and)c Fo(\025)1462 3553 y Fi(z)1501 3541
y Fx(\()p Fo(s;)14 b(i)k Fx(+)g(1\))23 b(=)g Fo(l)r Fx(.)k(F)-7
b(or)27 b(ev)n(ery)f Fo(j)33 b Fx(in)26 b([)p Fo(k)s(;)14
b(l)r Fx(\),)28 b Fo(z)2787 3553 y Fi(j)2821 3541 y Fx(\()p
Fo(s)p Fx(\))c(=)e Fo(v)s Fx(\()p Fo(s;)14 b(i)p Fx(\).)575
3677 y Fl({)41 b Fx(F)-7 b(or)33 b(eac)n(h)g(sequen)n(tial)e(dep)r
(endency)j(\()p Fo(s;)14 b(i)p Fx(\))2056 3622 y Fw(\()p
Fe(c)s Fi(;)p Fw([)p Fe(a)5 b Fi(;)p Fe(b)s Fh(i)o Fw(\))2138
3677 y Fn(!)105 b Fx(\()p Fo(t;)14 b(j)5 b Fx(\),)34
b(the)g(n)n(um)n(b)r(er)e(of)i Fo(c)g Fx(ev)n(en)n(ts)664
3776 y(b)r(et)n(w)n(een)28 b Fo(\025)1033 3788 y Fi(z)1071
3776 y Fx(\()p Fo(s;)14 b(i)p Fx(\))28 b(and)g Fo(\025)1478
3788 y Fi(z)1516 3776 y Fx(\()p Fo(t;)14 b(j)5 b Fx(\))28
b(is)f(within)f([)p Fo(a;)14 b(b)p Fn(i)p Fx(.)575 3873
y Fl({)41 b Fx(F)-7 b(or)29 b(eac)n(h)h(concurren)n(t)e(dep)r(endency)i
Fo(c)p Fx(,)g(and)g(eac)n(h)f(pair)f(of)i(ev)n(en)n(ts)g(\()p
Fo(s;)14 b(i)p Fx(\))p Fo(;)g Fx(\()p Fo(t;)g(j)5 b Fx(\))30
b(in)f Fo(c)p Fx(,)664 3973 y Fo(\025)712 3985 y Fi(z)751
3973 y Fx(\()p Fo(s;)14 b(i)p Fx(\))23 b(=)g Fo(\025)1079
3985 y Fi(z)1117 3973 y Fx(\()p Fo(t;)14 b(j)5 b Fx(\).)648
4127 y(F)-7 b(rom)23 b(the)h(w)n(ell-formedness)c(conditions)i(on)i(an)
h(R)-7 b(TD)25 b(and)f(the)h(\014rst)f(t)n(w)n(o)f(conditions)523
4227 y(ab)r(o)n(v)n(e,)e(eac)n(h)g(c)n(hange)f(ev)n(en)n(t)i(has)f(a)h
(unique)f(lo)r(cation,)e(that)j(can)g(b)r(e)g(computed)f(b)n(y)h(a)f
(\014nite)523 4327 y(automaton)h(that)j(follo)n(ws)c(the)k(c)n(hanges)e
(of)h(v)-5 b(alue)23 b(on)h(its)f(signal.)f(Once)h(the)i(start)f(of)g
(eac)n(h)523 4426 y(dep)r(endency)d(is)d(lo)r(cated)h(on)h
Fo(z)t Fx(,)g(the)g(third)f(and)h(fourth)g(conditions)e(can)i(b)r(e)g
(determined)e(b)n(y)523 4526 y(\014nite)24 b(automata,)f(one)h(for)g
(eac)n(h)g(dep)r(endency)-7 b(.)26 b(Th)n(us,)e(the)h(language)d(of)j
Fo(r)i Fx(is)d(determined)523 4625 y(b)n(y)f(a)g(pro)r(duct)g
(automaton)e(and)i(therefore)g(is)f(regular.)e(The)k(DF)-9
b(A)24 b(for)e(this)h(language)e(has)523 4725 y(a)27
b(single)e(initial)f(state.)k(An)g(empt)n(y)e(R)-7 b(TD)29
b(has)e(language)e Fn(f)p Fo(\017)p Fn(g)p Fx(.)523 4825
y Fl(MTD)37 b(Seman)m(tics:)31 b Fx(Let)h Fo(T)12 b Fx(=\()p
Fo(N)t(;)i(C)q(;)g(I)7 b(;)14 b(F)e Fx(\))32 b(b)r(e)h(an)f(MTD,)g
(comp)r(osed)f(of)h(R)-7 b(TD's)33 b Fn(f)p Fo(r)3313
4837 y Fi(i)3340 4825 y Fn(g)p Fx(.)523 4924 y(The)39
b(seman)n(tics)e(of)i Fo(T)50 b Fx(is)38 b(giv)n(en)g(b)n(y)h(a)f
Fn(8)p Fx(F)-9 b(A,)39 b Fo(B)2109 4936 y Fi(T)2161 4924
y Fx(,)h(that)f(is)f(obtained)g(as)h(follo)n(ws.)d(Let)1943
5173 y(8)p eop
%%Page: 9 9
9 8 bop 523 448 a Fo(B)586 460 y Fi(i)643 448 y Fx(=)28
b(\()p Fo(\006)5 b(;)14 b(Q)941 460 y Fi(i)968 448 y
Fo(;)g Fn(f)p Fo(q)1087 418 y Fw(0)1124 448 y Fn(g)p
Fo(;)g(\016)1240 460 y Fi(i)1267 448 y Fo(;)g(F)1357
460 y Fi(i)1385 448 y Fx(\))32 b(b)r(e)f(the)h(DF)-9
b(A)32 b(for)f Fo(r)2082 460 y Fi(i)2110 448 y Fx(,)g(where)g
Fo(F)2461 460 y Fi(i)2520 448 y Fx(is)f(the)i(set)f(of)g(\014nal)f
(states.)523 548 y(The)19 b(set)h(of)f(states)f(of)i
Fo(B)1270 560 y Fi(T)1341 548 y Fx(is)e(\()p Fn([)1503
560 y Fi(i)1532 548 y Fo(Q)1598 560 y Fi(i)1625 548 y
Fx(\))r Fn([)r(f)p Fo(t)1788 560 y Fi(i)1838 548 y Fn(j)23
b Fo(i)g Fn(2)g Fo(N)2081 560 y Fi(ter)r(m)2233 548 y
Fn(g)p Fx(.)c(The)g(initial)d(states)j(of)g Fo(B)3088
560 y Fi(T)3159 548 y Fx(are)g(the)523 648 y(initial)e(states)j(of)g
(the)h(DF)-9 b(A's)20 b(for)g(the)h(initial)16 b(no)r(des)21
b(of)f(the)h(MTD.)g(The)f(transitions)d(of)k Fo(B)3353
660 y Fi(T)523 747 y Fx(include)29 b(the)i(transitions)c(of)j(eac)n(h)g
Fo(B)1722 759 y Fi(i)1749 747 y Fx(,)h(together)e(with)h(the)h(follo)n
(wing)26 b(new)31 b(transitions,)523 847 y(added)c(in)g(the)h(giv)n(en)
e(order.)558 1007 y(1.)41 b(If)c Fo(r)793 1019 y Fi(i)857
1007 y Fx(is)e(a)g(terminal)e(p)r(ost)j(no)r(de,)g(then)g(for)g(eac)n
(h)f Fo(q)40 b Fn(2)d Fo(F)2540 1019 y Fi(i)2604 1007
y Fx(and)f(eac)n(h)f Fo(a)i Fn(2)h Fo(\006)5 b Fx(,)35
b(add)664 1107 y Fo(\016)s Fx(\()p Fo(q)s(;)14 b(a)p
Fx(\))24 b(=)e Fn(f)p Fo(\017)p Fx(\()p Fo(t)1138 1119
y Fi(i)1165 1107 y Fx(\))p Fn(g)p Fx(.)28 b(F)-7 b(or)27
b(eac)n(h)g Fo(b)p Fx(,)g(add)h Fo(\016)s Fx(\()p Fo(t)1976
1119 y Fi(i)2003 1107 y Fo(;)14 b(b)p Fx(\))23 b(=)g
Fn(f)p Fo(t)2291 1119 y Fi(i)2318 1107 y Fn(g)p Fx(.)558
1205 y(2.)41 b(If)28 b Fo(r)784 1217 y Fi(i)840 1205
y Fx(is)e Fn(^)p Fx(-connected)i(to)f Fo(r)1532 1217
y Fi(j)1568 1205 y Fo(;)14 b(:)g(:)g(:)f(;)h(r)1789 1217
y Fi(k)1831 1205 y Fx(,)27 b(then)h(for)f(eac)n(h)g Fo(q)f
Fn(2)e Fo(F)2579 1217 y Fi(i)2607 1205 y Fx(,)j(and)h(eac)n(h)f
Fo(a)c Fn(2)g Fo(\006)5 b Fx(,)27 b(add)664 1305 y Fo(\016)s
Fx(\()p Fo(q)s(;)14 b(a)p Fx(\))24 b(=)e Fn(f)p Fo(\017)p
Fx(\()p Fo(q)1148 1275 y Fw(0)1145 1326 y Fi(j)1185 1305
y Fx(\))p Fo(;)14 b(:)g(:)g(:)g(;)g(\017)p Fx(\()p Fo(q)1508
1275 y Fw(0)1505 1328 y Fi(k)1546 1305 y Fx(\))p Fn(g)p
Fx(.)558 1403 y(3.)41 b(If)31 b Fo(r)787 1415 y Fi(i)846
1403 y Fx(is)f Fn(_)p Fx(-connected)g(b)n(y)g(guards)g
Fo(g)1836 1415 y Fi(j)1870 1403 y Fo(;)14 b(:)g(:)g(:)g(;)g(g)2095
1415 y Fi(k)2166 1403 y Fx(to)30 b(R)-7 b(TD's)32 b Fo(r)2572
1415 y Fi(j)2607 1403 y Fo(;)14 b(:)g(:)g(:)g(;)g(r)2829
1415 y Fi(k)2870 1403 y Fx(,)31 b(then)g(for)f(eac)n(h)664
1503 y Fo(q)38 b Fn(2)c Fo(F)881 1515 y Fi(i)910 1503
y Fx(,)g(and)g(eac)n(h)g Fo(a)g Fn(2)h Fo(\006)5 b Fx(,)34
b(add)h Fo(\016)s Fx(\()p Fo(q)s(;)14 b(a)p Fx(\))34
b(=)h Fn(f)p Fo(\017)p Fx(\()p Fo(q)2300 1473 y Fw(0)2297
1526 y Fi(l)2336 1503 y Fx(\))p Fn(g)p Fx(,)g(where)f
Fo(g)2755 1515 y Fi(l)2780 1503 y Fx(\()p Fo(a)p Fx(\))h(is)e(the)i
(unique)664 1603 y(guard)27 b(that)h(holds)e(for)h Fo(a)p
Fx(.)558 1701 y(4.)41 b(F)-7 b(or)26 b(eac)n(h)f(state)g
Fo(q)30 b Fx(that)c(is)f(in)g(its)g(o)n(wn)g Fo(\017)p
Fx(-closure)e(\(that)k(is,)e(reac)n(hable)e(from)i(itself)f(b)n(y)664
1801 y Fo(\017)k Fx(mo)n(v)n(es\))d(add)i Fo(q)k Fx(to)d(eac)n(h)e
Fo(\016)s Fx(\()p Fo(q)s(;)14 b(a)p Fx(\).)523 1962 y(The)27
b(\014rst)f(rule)f(adds)h(a)g(transition)e(from)h(the)i(\014nal)e
(state)h(of)h(a)f(terminal)d(p)r(ost)k(no)r(de)f(to)g(a)523
2062 y(state)c(that)h(accepts)f(an)n(y)f(subsequen)n(t)h(sequence)g(of)
h(v)-5 b(alues.)21 b(The)h(second)g(and)g(third)g(rules)523
2161 y(implemen)n(t)31 b(forking)h(and)j(deterministic)30
b(c)n(hoice.)j(The)h(last)f(rule)h(is)f(needed)h(to)h(ensure)523
2261 y(that)25 b(MTD's)g(with)f(o)n(v)n(erlapping)d(c)n(hec)n(ks)i
(\(e.g.,)i(Figure)e(2\))i(ha)n(v)n(e)e(the)j(desired)d(seman)n(tics.)
523 2361 y(The)37 b(fairness)e(condition)g(of)i Fo(B)1552
2373 y Fi(T)1642 2361 y Fx(is)f(that)h(a)g(run)g(is)f(rejecting)g(if)g
(\(a\))i(it)e(gets)h(stuc)n(k)g(in)523 2460 y(the)31
b(states)f(of)g(some)f(p)r(ost-no)r(de,)h(from)f(some)f(p)r(oin)n(t)i
(on)n(w)n(ards,)e(or)i(\(b\))h(in\014nitely)d(often,)523
2560 y(it)38 b(exits)e(out)j(of)f(DF)-9 b(A's)38 b(for)g(no)r(des)g
(that)g(are)f(not)h(in)f Fo(F)12 b Fx(.)39 b(This)e(can)g(b)r(e)i
(written)e(as)g(a)523 2660 y(disjunction)32 b(of)h(co-B)r(\177)-44
b(uc)n(hi)31 b(and)i(B)r(\177)-44 b(uc)n(hi)32 b(conditions.)f(Pre-)h
(and)h(p)r(ost-)g(no)r(des)g(b)r(eha)n(v)n(e)g(as)523
2759 y(indicated)23 b(b)n(y)i(their)g(names:)e(the)j(acceptance)e
(condition)f(ensures)i(that)g(whenev)n(er)f(a)h(run)523
2859 y(en)n(ters)30 b(a)g(p)r(ost-R)-7 b(TD,)31 b(it)f
Fp(must)37 b Fx(satisfy)29 b(the)i(en)n(tire)e(pattern)i(in)e(that)i
(no)r(de;)g(th)n(us,)f(ev)n(ery)523 2958 y(p)r(ostcondition)21
b(that)i(is)f(enabled)g(m)n(ust)g(hold.)g(On)g(the)i(other)e(hand,)h(a)
g(pre-no)r(de)f(ma)n(y)f(not)523 3058 y(b)r(e)31 b(satis\014ed)e(but,)i
(if)f(it)f(is,)h(the)g(automaton)f(construction)f(ensures)i(that)g(the)
h(follo)n(wing)523 3158 y(no)r(des)c(are)g(c)n(hec)n(k)n(ed.)523
3257 y Fl(Expressiv)m(eness:)37 b Fx(The)h(follo)n(wing)c(theorem)j
(sho)n(ws)g(that)i(MTD's)g(can)f(express)f(an)n(y)523
3357 y Fo(!)s Fx(-regular)24 b(prop)r(ert)n(y)j(o)n(v)n(er)e(ev)n(en)n
(ts.)523 3510 y Fl(Theorem)30 b(0.)41 b Fx(F)-7 b(or)28
b(an)n(y)f Fo(!)s Fx(-regular)d(language)i Fn(L)i Fx(of)g(c)n(hange)f
(ev)n(en)n(t)g(sequences,)g(there)h(is)523 3610 y(an)23
b(MTD)h Fo(T)35 b Fx(suc)n(h)23 b(that)g(the)h(language)d(of)i
Fo(T)34 b Fx(is)23 b(the)h(set)f(of)g(those)g(state)g(sequences)g(whic)
n(h,)523 3709 y(when)28 b(pro)5 b(jected)27 b(on)g(to)h(c)n(hange)e(ev)
n(en)n(ts,)h(form)f Fn(L)p Fx(.)523 3821 y Fl(Pro)s(of)e(Sk)m(etc)m(h.)
39 b Fx(Since)20 b Fn(L)h Fx(is)f Fo(!)s Fx(-regular,)d(it)j(can)h(b)r
(e)g(represen)n(ted)f(b)n(y)g(a)h Fn(8)p Fx(F)-9 b(A)20
b Fo(A)h Fx(with)f(a)h(co-)523 3921 y(B)r(\177)-44 b(uc)n(hi)25
b(acceptance)g(condition)f(on)i(transitions)e([MP87)n(].)j(The)f(MTD,)h
Fo(T)12 b Fx(,)25 b(is)h(constructed)523 4020 y(from)32
b Fo(A)h Fx(as)f(follo)n(ws:)e(transitions)g(of)i Fo(A)i
Fx(are)d(turned)i(in)n(to)f(pre-no)r(des,)g(and)g(states)h(of)g
Fo(A)523 4120 y Fx(b)r(ecome)c Fn(^)p Fx(-connectors.)f(The)i(co-B)r
(\177)-44 b(uc)n(hi)28 b(acceptance)h(condition)e(of)j
Fo(A)g Fx(is)f(turned)h(in)n(to)e(a)523 4220 y(corresp)r(onding)d(co-B)
r(\177)-44 b(uc)n(hi)25 b(fairness)h(condition)f(on)i(the)h(no)r(des)g
(of)f Fo(T)12 b Fx(.)618 b Fn(u)-55 b(t)523 4464 y Fl(2.3)95
b(Mo)s(del)30 b(Chec)m(king)i(with)f(MTD's)523 4625 y
Fx(W)-7 b(e)30 b(ga)n(v)n(e)d(the)j(seman)n(tics)d(of)i(an)g(MTD)h
Fo(T)41 b Fx(as)29 b(a)g Fn(8)p Fx(F)-9 b(A,)29 b Fo(B)2356
4637 y Fi(T)2408 4625 y Fx(.)g(This)g(automaton,)e(could)i(b)r(e)523
4725 y(quite)c(large,)d(and)j(ma)n(y)f(not)h(b)r(e)h(appropriate)c(for)
j(mo)r(del)e(c)n(hec)n(king.)g(This)i(is)f(b)r(ecause)h(the)523
4825 y(DF)-9 b(A)26 b(for)e(a)h(p)r(ost)g(no)r(de)g(can)g(b)r(e)g(exp)r
(onen)n(tial)e(in)h(its)g(size,)g(since)g(it)g(m)n(ust)g(resolv)n(e)f
(all)f(non-)523 4924 y(deterministic)d(c)n(hoices)i(b)r(et)n(w)n(een)i
(unordered)e(ev)n(en)n(ts.)h(W)-7 b(e)23 b(no)n(w)g(sk)n(etc)n(h)f(the)
h(construction)1943 5173 y(9)p eop
%%Page: 10 10
10 9 bop 523 448 a Fx(of)28 b(an)g(alternativ)n(e)c Fn(8)p
Fx(F)-9 b(A,)28 b(that)g(is)f(more)f(complex,)f(but)k(of)f(size)e
(cubic)i(in)f(the)h(size)f(of)h(the)523 548 y(MTD.)648
648 y(There)37 b(are)g(t)n(w)n(o)h(k)n(ey)f(parts)h(to)g(this)f
(construction.)f(First,)h(since)g(the)i(ev)n(en)n(ts)e(of)h(a)523
747 y(pre-no)r(de)33 b(are)f(totally)f(ordered,)h(there)i(is)e(a)h(DF)
-9 b(A)34 b(for)f(the)h(pre-no)r(de)f(of)g(size)f(linear)f(in)523
847 y(the)f(size)e(of)h(the)h(no)r(de.)f(This)g(DF)-9
b(A)30 b(just)g(c)n(hec)n(ks)e(for)h(the)h(ev)n(en)n(ts)e(in)h(the)h
(order)e(giv)n(en)f(b)n(y)523 946 y(the)33 b(total)e(ordering.)f
(Second,)i(for)g(a)g(p)r(ost-no)r(de,)g(one)g(can)g(construct)g(a)g
Fn(8)p Fx(F)-9 b(A)32 b(on)g(\014nite)523 1046 y(strings)d(instead)h
(of)g(a)h(DF)-9 b(A,)31 b(along)e(the)i(lines)e(indicated)g(in)h
([AEN99)o(].)h(This)f Fn(8)p Fx(F)-9 b(A)30 b(runs)523
1146 y(sev)n(eral)f(small)f(DF)-9 b(A)32 b(c)n(hec)n(ks)f(in)f
(parallel.)e(The)k(DF)-9 b(A's)32 b(c)n(hec)n(k)e(\(a\))i(eac)n(h)f(w)n
(a)n(v)n(eform,)d(\(b\))523 1245 y(eac)n(h)20 b(sequen)n(tial)f(dep)r
(endency)-7 b(,)22 b(using)e(the)h(linear)e(size)h(DF)-9
b(A's)21 b(for)g(the)h(lo)r(cation)c(function,)523 1345
y(and)k(\(c\))h(eac)n(h)f(concurren)n(t)f(dep)r(endency)-7
b(,)24 b(b)n(y)e(lo)r(cating)e(one)i(ev)n(en)n(t)g Fo(e)g
Fx(of)h(that)f(dep)r(endency)-7 b(,)523 1445 y(and)32
b(c)n(hec)n(king)f(pairwise)e(that)k(for)f(eac)n(h)g(other)g(ev)n(en)n
(t)g Fo(f)42 b Fx(in)31 b(the)i(dep)r(endency)-7 b(,)34
b Fo(e)e Fx(and)g Fo(f)523 1544 y Fx(o)r(ccur)25 b(at)h(the)g(same)f
(instan)n(t.)g(As)h(sho)n(wn)f(in)g([AEN99)o(],)h(these)g(c)n(hec)n(ks)
f(can)h(b)r(e)g(done)f(with)523 1644 y(a)36 b Fn(8)p
Fx(F)-9 b(A)36 b(of)g(size)f(cubic)g(in)h(the)g(R)-7
b(TD)37 b(size.)e(W)-7 b(e)37 b(can)f(replace)e(the)j(DF)-9
b(A's)37 b(for)e(the)i(p)r(ost)523 1743 y(no)r(des)25
b(in)f(the)i(seman)n(tics)c(with)j(these)g Fn(8)p Fx(F)-9
b(A's.)24 b(Since)h(the)g(set)g(of)g(\014nal)f(ev)n(en)n(ts)g(of)i(an)e
(R)-7 b(TD)523 1843 y(is)24 b(a)g(concurren)n(t)f(dep)r(endency)-7
b(,)25 b(w)n(e)f(can)h(pic)n(k)e(the)i(c)n(hange)e(ev)n(en)n(t)i(of)f
(that)h(dep)r(endency)g(to)523 1943 y(signal)20 b(the)j(end)h(of)e(c)n
(hec)n(king)f(the)i(R)-7 b(TD.)24 b(The)f(\014nal)f(states)g(of)h(the)h
(DF)-9 b(A)23 b(in)f(the)i(seman)n(tics)523 2042 y(are)e(no)n(w)g
(replaced)f(b)n(y)h(the)h(\014nal)f(state)h(for)f(the)h(w)n(a)n(v)n
(eform)d(DF)-9 b(A)23 b(that)g(con)n(tains)e(this)h(\014nal)523
2142 y(c)n(hange)e(ev)n(en)n(t.)h(These)f(replacemen)n(ts)e(result)i
(in)g(a)h Fn(8)p Fx(F)-9 b(A,)21 b(that)g(w)n(e)g(call)d
Fn(A)2826 2154 y Fi(T)2879 2142 y Fx(,)j(that)h(has)e(size)3369
2112 y Fw(1)523 2242 y Fx(at)28 b(most)e(cubic)h(in)g(the)h(MTD)g
(size.)523 2412 y Fl(Theorem)i(1.)41 b Fx(F)-7 b(or)27
b(an)n(y)g(MTD)h Fo(T)12 b Fx(,)27 b Fn(L)p Fx(\()p Fo(B)1840
2424 y Fi(T)1893 2412 y Fx(\))c(=)g Fn(L)p Fx(\()p Fn(A)2191
2424 y Fi(T)2244 2412 y Fx(\).)523 2542 y Fl(Pro)s(of)35
b(Sk)m(etc)m(h.)50 b Fx(The)30 b(main)e(comp)r(onen)n(t)h(of)h(this)g
(pro)r(of)f(is)h(the)g(observ)-5 b(ation)28 b(that)j(the)523
2641 y Fn(8)p Fx(F)-9 b(A)29 b(replacing)e(a)i(p)r(ostcondition)f(DF)-9
b(A)30 b(accepts)g(the)g(same)e(set)i(of)g(\014nite)f(strings.)f(This)
523 2741 y(is)22 b(b)r(ecause)h(it)g(c)n(hec)n(ks)f(the)i(same)e
(conditions,)f(using)h(DF)-9 b(A's)23 b(running)f(in)h(parallel)c
(instead)523 2841 y(of)28 b(a)f(pro)r(duct)g(construction.)1879
b Fn(u)-55 b(t)648 2940 y Fx(Since)31 b Fn(A)935 2952
y Fi(T)1021 2940 y Fx(accepts)h(the)h(language)d(of)i
Fo(T)12 b Fx(,)32 b(the)h(complemen)n(tary)28 b(NF)-9
b(A)p 2967 2873 67 4 v 33 w Fn(A)3034 2952 y Fi(T)3086
2940 y Fx(,)33 b(deriv)n(ed)523 3040 y(from)k Fn(A)796
3052 y Fi(T)849 3040 y Fx(,)h(accepts)g(the)h(complemen)n(ted)c
(language.)g(The)k(mo)r(del)d(c)n(hec)n(king)g(problem,)523
3139 y(stated)f(as)f Fo(M)44 b Fn(j)-14 b Fx(=)36 b Fo(T)12
b Fx(,)34 b(is)g(to)g(sho)n(w)h(that)g(the)g(language)e(of)i
Fo(M)43 b Fx(is)34 b(con)n(tained)f(in)i(that)g(of)523
3239 y Fo(T)12 b Fx(.)33 b(F)-7 b(or)33 b(an)h(MTD)g
Fo(T)12 b Fx(,)33 b(this)h(can)f(b)r(e)h(done)g(b)n(y)g(forming)d(the)j
(pro)r(duct)g Fo(M)d Fn(\002)p 3019 3172 V 22 w(A)3086
3251 y Fi(T)3138 3239 y Fx(,)j(whic)n(h)523 3339 y(is)e(an)g(NF)-9
b(A)34 b(with)e(a)h(fairness)e(condition)f(of)j(the)g(form)f
Fj(GF)p Fx(p)h Fn(_)h Fj(FG)p Fx(q,)f(and)g(c)n(hec)n(king)e(for)523
3438 y(emptiness.)523 3609 y Fl(Theorem)f(2.)41 b Fx(F)-7
b(or)31 b(MTD)g Fo(T)43 b Fx(and)31 b(pro)r(cess)f Fo(M)9
b Fx(,)31 b Fo(M)37 b Fn(j)-14 b Fx(=)29 b Fo(T)42 b
Fx(can)31 b(b)r(e)h(determined)d(in)h(time)523 3709 y(at)e(most)e
(cubic)h(in)g(the)h(size)e(of)h Fo(T)12 b Fx(,)27 b(and)h(linear)c(in)j
(the)h(size)f(of)g Fo(M)9 b Fx(.)523 3838 y Fl(Pro)s(of.)41
b Fx(By)24 b(Theorem)e(1)i(and)g(the)g(pro)r(cedure)f(giv)n(en)g(ab)r
(o)n(v)n(e,)f Fo(M)32 b Fn(j)-14 b Fx(=)23 b Fo(T)35
b Fx(i\013)24 b Fn(L)p Fx(\()p 2989 3771 V Fn(A)3056
3850 y Fi(T)3119 3838 y Fn(\002)11 b Fo(M)e Fx(\))23
b(=)523 3938 y Fn(;)p Fx(.)h(This)f(is)f(equiv)-5 b(alen)n(t)22
b(to)i(searc)n(hing)d(for)j(a)f(rejecting)g(run)h(of)g
Fn(A)2556 3950 y Fi(T)2632 3938 y Fx(on)g(some)e(computation)523
4037 y(of)f Fo(M)9 b Fx(.)20 b(This)g(can)h(b)r(e)g(done)g(in)f(time)f
(linear)f(in)i(the)i(size)d(of)i Fo(M)30 b Fx(and)20
b(linear)f(in)h(the)h(size)f(of)p 3286 3971 V 20 w Fn(A)3353
4049 y Fi(T)523 4137 y Fx([EL87)o(].)27 b(Since)p 1028
4070 V 27 w Fn(A)1094 4149 y Fi(T)1174 4137 y Fx(has)g(size)g(at)g
(most)g(cubic)f(in)h(the)h(size)e(of)i Fo(T)12 b Fx(,)27
b(the)h(result)e(follo)n(ws.)101 b Fn(u)-55 b(t)523 4400
y Fq(3)112 b(Comp)s(ositional)39 b(Reasoning)g(with)e(MTD's)523
4596 y Fx(Large)e(systems)h(are)g(often)h(comp)r(osed)e(of)i(man)n(y)e
(concurren)n(t,)h(in)n(teracting)d(pro)r(cesses.)523
4696 y(This)d(leads)f(to)i(a)f(blo)n(wup)f(in)h(the)h(state)g(space)f
(of)h(the)g(system,)e(commonly)f(referred)h(to)p 523
4748 473 4 v 546 4801 a Fv(1)606 4833 y Fu(The)d(size)h(of)f
Fd(A)1058 4841 y Fc(T)1133 4833 y Fu(is)g(the)g(size)h(of)f(the)g
(transition)g(relation,)i(whic)n(h)d(is)i(the)e(total)i(length)f(of)g
(the)606 4924 y(form)n(ulas)g(lab)r(eling)h(eac)n(h)f(transition,)h
(plus)e(the)h(n)n(um)n(b)r(er)d(of)k(states.)1922 5173
y Fx(10)p eop
%%Page: 11 11
11 10 bop 523 448 a Fx(as)29 b(\\state)g(explosion",)e(whic)n(h)i(is)f
(one)i(of)g(the)g(main)e(barriers)e(to)k(successfully)e(applying)523
548 y(mo)r(del)23 b(c)n(hec)n(king)g(in)h(practice.)g(One)h(imp)r
(ortan)n(t)d(w)n(a)n(y)i(of)h(ameliorating)20 b(this)k(state)h(explo-)
523 648 y(sion)30 b(is)g(to)h(reason)e(not)i(ab)r(out)g(the)h(en)n
(tire)d(system)h(as)h(a)f(whole,)g(but)i(ab)r(out)f(individual)523
747 y(comp)r(onen)n(ts.)25 b(The)h(comp)r(ositional)20
b(reasoning)j(rule)i(that)h(w)n(e)g(use)g(is)e(based)i(on)f(so-called)
523 847 y(`circular',)d(assume-guaran)n(tee)f(st)n(yle)i(reasoning,)g
(where)h(individual)d(comp)r(onen)n(ts)j(guar-)523 946
y(an)n(tee)38 b(certain)f(prop)r(erties)f(based)i(on)g(assumptions)e
(ab)r(out)i(their)f(en)n(vironmen)n(t.)f(The)523 1046
y(pro)r(of)27 b(rule)f(that)i(w)n(e)f(use,)h(from)e([AENT02)o(],)i(is)f
(b)r(oth)h(sound)f(and)g(complete.)648 1152 y(First)33
b(w)n(e)i(describ)r(e)f(the)h(mo)r(del)e(of)i(computation)d(used)j(in)g
(the)g(sequel;)e(a)i(detailed)523 1252 y(description)21
b(can)i(b)r(e)h(found)g(in)f(the)h(reference)f(ab)r(o)n(v)n(e.)f(The)i
(de\014nitions)e(of)h(pro)r(cesses)f(and)523 1352 y(async)n(hronous)27
b(comp)r(osition)g(are)h(largely)f(based)i(on)g(those)h(in)f([AL95)o
(].)h(W)-7 b(e)30 b(assume)e(an)523 1451 y(un)n(b)r(ounded)20
b(set)g(of)g(v)-5 b(ariable)17 b(names.)i(A)h Fp(pr)l(o)l(c)l(ess)28
b Fx(is)18 b(giv)n(en)h(b)n(y)g(a)h(tuple)f(\()p Fo(V)5
b(;)14 b Fn(I)6 b Fo(;)14 b(T)7 b(;)14 b Fn(F)8 b Fx(\),)21
b(where)523 1551 y Fo(V)e Fx(=)p Fo(V)703 1563 y Fi(l)737
1551 y Fn([)8 b Fo(V)848 1563 y Fi(i)899 1551 y Fx(is)21
b(a)i(set)f(of)h(v)-5 b(ariables,)19 b Fo(V)1666 1563
y Fi(l)1714 1551 y Fx(is)j(a)g(non-empt)n(y)f(set)h(of)h(\\lo)r(cal")c
(v)-5 b(ariables)19 b(and)j Fo(V)3298 1563 y Fi(i)3349
1551 y Fx(is)523 1651 y(a)28 b(disjoin)n(t)e(set)i(of)f(\\in)n
(terface")f(v)-5 b(ariables.)24 b Fn(I)6 b Fx(\()p Fo(V)2032
1663 y Fi(l)2059 1651 y Fx(\))28 b(is)f(an)h(initial)c(condition,)i
Fo(T)12 b Fx(\()p Fo(V)5 b(;)14 b(V)3196 1620 y Fh(0)3219
1651 y Fx(\))29 b(is)d(a)523 1750 y(transition)17 b(relation,)g(where)i
Fo(V)1513 1720 y Fh(0)1556 1750 y Fx(is)g(a)g(set)h(of)g(v)-5
b(ariable)17 b(names)h(in)h(1-1)g(corresp)r(ondence)e(with)523
1850 y Fo(V)42 b Fx(that)23 b(de\014ne)g(the)g(next)g(state,)g(and)f
Fn(F)8 b Fx(\()p Fo(V)d(;)14 b(V)1978 1820 y Fh(0)2002
1850 y Fx(\))23 b(is)f(a)g(fairness)f(condition.)f(A)k
Fp(c)l(omputation)523 1949 y Fx(of)30 b(the)g(pro)r(cess)f(is)f(a)i
(sequence)f(of)h(states)f(that)h(starts)f(at)h(an)g(initial)c(state,)j
(where)h(eac)n(h)523 2049 y(pair)24 b(of)h(adjacen)n(t)g(states)g
(either)g(satis\014es)e(the)j(transition)d(relation)g(of)i(the)h(pro)r
(cess,)f(or)f(is)523 2149 y(an)j(\\en)n(vironmen)n(t")d(mo)n(v)n(e)h
(that)j(do)r(es)g(not)f(c)n(hange)g(the)h(v)-5 b(alues)26
b(of)h(lo)r(cal)e(v)-5 b(ariables.)648 2255 y(The)23
b(in)n(terlea)n(ving)18 b Fp(c)l(omp)l(osition)31 b Fx(of)23
b(pro)r(cesses)f Fo(P)2213 2267 y Fw(1)2274 2255 y Fx(and)h
Fo(P)2484 2267 y Fw(2)2521 2255 y Fx(,)h(written)e(as)g
Fo(P)35 b Fx(=)23 b Fo(P)3180 2267 y Fw(1)3231 2255 y
Fx([])14 b Fo(P)3344 2267 y Fw(2)3382 2255 y Fx(,)523
2355 y(is)33 b(de\014ned)i(pro)n(vided)e(that,)i(for)e(eac)n(h)h(pro)r
(cess,)g(its)f(lo)r(cal)f(v)-5 b(ariables)31 b(are)j(disjoin)n(t)e
(from)523 2454 y(the)e(v)-5 b(ariables)26 b(of)k(the)g(other,)f(that)h
(is)f Fo(V)1814 2466 y Fi(l)1840 2454 y Fx(\()p Fo(P)1925
2466 y Fw(1)1962 2454 y Fx(\))20 b Fn(\\)h Fo(V)e Fx(\()p
Fo(P)2242 2466 y Fw(2)2279 2454 y Fx(\))30 b(=)g Fn(;)f
Fx(and)g Fo(V)2718 2466 y Fi(l)2744 2454 y Fx(\()p Fo(P)2829
2466 y Fw(2)2867 2454 y Fx(\))20 b Fn(\\)g Fo(V)f Fx(\()p
Fo(P)3146 2466 y Fw(1)3184 2454 y Fx(\))30 b(=)f Fn(;)p
Fx(.)523 2554 y(F)-7 b(urthermore,)27 b Fo(P)40 b Fx(has)28
b(lo)r(cal)e(v)-5 b(ariables)25 b Fo(V)1861 2566 y Fi(l)1887
2554 y Fx(\()p Fo(P)1972 2566 y Fw(1)2010 2554 y Fx(\))19
b Fn([)h Fo(V)2184 2566 y Fi(l)2209 2554 y Fx(\()p Fo(P)2294
2566 y Fw(2)2332 2554 y Fx(\),)29 b(in)n(terface)e(v)-5
b(ariables)25 b Fo(V)3147 2566 y Fi(i)3175 2554 y Fx(\()p
Fo(P)3260 2566 y Fw(1)3298 2554 y Fx(\))20 b Fn([)523
2653 y Fo(V)571 2665 y Fi(i)599 2653 y Fx(\()p Fo(P)684
2665 y Fw(2)722 2653 y Fx(\),)28 b(initial)23 b(condition)i
Fn(I)6 b Fx(\()p Fo(P)1544 2665 y Fw(1)1582 2653 y Fx(\))32
b Fn(^)g(I)6 b Fx(\()p Fo(P)1869 2665 y Fw(2)1907 2653
y Fx(\),)27 b(transition)e(relation)f Fo(T)12 b Fx(\()p
Fo(P)2818 2665 y Fw(1)2855 2653 y Fx(\))32 b Fn(_)g Fo(T)12
b Fx(\()p Fo(P)3152 2665 y Fw(2)3189 2653 y Fx(\),)27
b(and)523 2753 y(fairness)f(condition)f Fn(F)8 b Fx(\()p
Fo(P)1339 2765 y Fw(1)1377 2753 y Fx(\))32 b Fn(^)h(F)8
b Fx(\()p Fo(P)1682 2765 y Fw(2)1720 2753 y Fx(\).)648
2859 y(W)-7 b(e)29 b(use)h(the)g(notation)e Fo(W)1507
2829 y Fh(0)1556 2859 y Fx(=)e Fo(W)12 b Fx(,)30 b(for)f(a)g(set)h(of)f
(v)-5 b(ariables)26 b Fo(W)12 b Fx(,)30 b(to)f(mean)g(that)g(\()p
Fn(8)p Fo(w)g Fx(:)523 2959 y Fo(w)d Fn(2)d Fo(W)35 b
Fx(:)23 b Fo(w)906 2929 y Fh(0)953 2959 y Fx(=)g Fo(w)r
Fx(\).)g(The)g(set)f(of)h(in\014nite)e(executions)f(of)j(pro)r(cess)e
Fo(P)12 b Fx(,)22 b Fo(L)2775 2971 y Fi(!)2823 2959 y
Fx(\()p Fo(P)12 b Fx(\),)23 b(is)e(the)i(set)f(of)523
3059 y(in\014nite)e(sequences)g(satisfying)e(the)k(form)n(ula)c
Fn(I)6 b Fx(\()p Fo(P)12 b Fx(\))20 b Fn(^)f Fj(G)p Fx(\()p
Fo(T)2376 3071 y Fi(P)2451 3059 y Fn(_)g Fo(V)2592 3029
y Fh(0)2573 3082 y Fi(l)2615 3059 y Fx(\()p Fo(P)12 b
Fx(\))24 b(=)e Fo(V)2903 3071 y Fi(l)2929 3059 y Fx(\()p
Fo(P)12 b Fx(\)\))20 b Fn(^)g(F)8 b Fx(\()p Fo(P)k Fx(\).)523
3158 y(The)21 b(set)g(of)h(\014nite)e(executions,)g Fo(L)1582
3170 y Fh(\003)1620 3158 y Fx(\()p Fo(P)12 b Fx(\),)21
b(is)f(the)i(set)f(of)g(\014nite)g(sequences)f(satisfying)f
Fo(I)7 b Fx(\()p Fo(P)12 b Fx(\))20 b Fn(^)523 3258 y
Fj(G)p Fx(\()p Fo(T)659 3270 y Fi(P)738 3258 y Fn(_)25
b Fo(V)884 3228 y Fh(0)866 3281 y Fi(l)908 3258 y Fx(\()p
Fo(P)12 b Fx(\))23 b(=)g Fo(V)1196 3270 y Fi(l)1222 3258
y Fx(\()p Fo(P)12 b Fx(\)\).)24 b(The)f Fp(language)31
b Fx(of)23 b Fo(P)12 b Fx(,)23 b(denoted)h(b)n(y)f Fo(L)p
Fx(\()p Fo(P)12 b Fx(\))23 b(is)g Fo(L)2906 3270 y Fi(!)2953
3258 y Fx(\()p Fo(P)12 b Fx(\))e Fn([)g Fo(L)3214 3270
y Fh(\003)3252 3258 y Fx(\()p Fo(P)i Fx(\).)523 3358
y(The)26 b(form)n(ula)e(for)i Fo(L)1179 3370 y Fi(!)1226
3358 y Fx(\()p Fo(P)12 b Fx(\))27 b(expresses)e(the)i(constrain)n(ts)d
(that)i(the)h(\014rst)f(state)g(is)g(an)g(initial)523
3457 y(one,)k(ev)n(ery)f(transition)f(is)h(either)g(that)i(of)f
Fo(P)42 b Fx(or)30 b(an)g(\\en)n(vironmen)n(t")c(transition,)i(whic)n
(h)523 3557 y(k)n(eeps)f(the)h(lo)r(cal)e(v)-5 b(ariables)24
b(of)k Fo(P)40 b Fx(unc)n(hanged,)27 b(and)h(the)g(fairness)e
(condition)f(holds.)i(The)523 3656 y(in)n(terlea)n(ving)33
b(of)k(en)n(vironmen)n(t)e(and)i(pro)r(cess)g(mo)n(v)n(es)e(is)h
(inspired)f(b)n(y)j([AL95)o(].)g(This)e(is)523 3756 y(the)h
(appropriate)d(c)n(hoice)h(for)h(mo)r(deling)e(computations)g(of)j
(programs)c(that)k(are)f(op)r(en)523 3856 y(to)29 b(the)h(en)n
(vironmen)n(t)c({)j(notice)f(that)i(eac)n(h)e(comp)r(onen)n(t)g(of)i(a)
e(comp)r(osition)e Fo(P)g Fx([])14 b Fo(Q)29 b Fx(is,)f(of)523
3955 y(necessit)n(y)-7 b(,)30 b(an)h(op)r(en)h(program.)d(It)j(also)d
(has)i(the)h(nice)f(consequence)g(that)h(comp)r(osition)523
4055 y(can)24 b(b)r(e)h(view)n(ed)d(as)i(the)h(conjunction)e(of)h
(languages.)e(The)i(external)e(language)g(of)i(pro)r(cess)523
4155 y Fo(P)12 b Fx(,)30 b Fo(L)698 4167 y Fe(ext)794
4155 y Fx(\()p Fo(P)12 b Fx(\),)31 b(is)e(the)h(pro)5
b(jection)29 b(of)h(its)f(language)f(on)i(the)h(in)n(terface)d(v)-5
b(ariables,)27 b(that)k(is,)523 4254 y Fo(L)580 4266
y Fe(ext)675 4254 y Fx(\()p Fo(P)12 b Fx(\))57 b Fn(\021)f
Fx(\()p Fn(9)p Fo(V)1108 4266 y Fi(l)1135 4254 y Fx(\()p
Fo(P)12 b Fx(\))43 b(:)f Fo(L)p Fx(\()p Fo(P)12 b Fx(\)\).)40
b(The)g(relationship)35 b Fo(P)54 b Fn(j)-14 b Fx(=)43
b Fo(Q)c Fx(is)f(de\014ned)i(only)e(when)523 4354 y Fo(V)571
4366 y Fi(i)599 4354 y Fx(\()p Fo(Q)p Fx(\))23 b Fn(\022)g
Fo(V)888 4366 y Fi(i)916 4354 y Fx(\()p Fo(P)12 b Fx(\),)28
b(and)g(holds)e(if,)h(and)g(only)g(if,)g Fo(L)2074 4366
y Fe(ext)2169 4354 y Fx(\()p Fo(P)12 b Fx(\))38 b Fn(\))f
Fo(L)2513 4366 y Fe(ext)2608 4354 y Fx(\()p Fo(Q)p Fx(\))28
b(is)e(v)-5 b(alid.)648 4460 y(The)36 b Fp(choic)l(e)45
b Fx(of)36 b(pro)r(cesses)f Fo(P)49 b Fx(and)36 b Fo(Q)p
Fx(,)g(denoted)h(b)n(y)f Fo(P)h Fx(+)24 b Fo(Q)p Fx(,)36
b(is)f(the)i(pro)r(cess)f(that)523 4560 y(b)r(eha)n(v)n(es)28
b(either)g(as)g Fo(P)41 b Fx(or)28 b(as)h Fo(Q)p Fx(.)g(The)g
Fp(closur)l(e)36 b Fx(of)29 b(pro)r(cess)e Fo(P)12 b
Fx(,)29 b(denoted)h(b)n(y)e Fp(CL)q Fx(\()p Fo(P)12 b
Fx(\),)29 b(is)f(a)523 4659 y(pro)r(cess)i(whose)g(language)e(is)i(the)
i(safet)n(y)e(closure)2140 4629 y Fw(2)2206 4659 y Fx(of)h(the)g
(language)d(of)j Fo(P)12 b Fx(;)31 b(this)g(is)e(just)523
4759 y Fo(P)40 b Fx(with)27 b(fairness)e(condition)h
Fp(true)p Fx(.)p 523 4839 473 4 v 546 4893 a Fv(2)606
4924 y Fu(The)g(safet)n(y)g(closure)h(of)f Fb(L)g Fu(is)g(the)g
(strongest)g(safet)n(y)g(prop)r(ert)n(y)f(con)n(taining)i
Fb(L)e Fu([AS85)q(].)1922 5173 y Fx(11)p eop
%%Page: 12 12
12 11 bop 523 448 a Fl(Comp)s(ositional)29 b(Reasoning[AENT02)m(]:)60
b Fx(F)-7 b(or)28 b(pro)r(cesses)e Fo(P)2658 460 y Fw(1)2696
448 y Fo(;)14 b(P)2786 460 y Fw(2)2851 448 y Fx(and)28
b Fo(T)12 b Fx(,)28 b(to)g(sho)n(w)523 548 y(that)g Fo(P)756
560 y Fw(1)807 548 y Fx([])14 b Fo(P)920 560 y Fw(2)981
548 y Fn(j)-14 b Fx(=)23 b Fo(T)12 b Fx(,)27 b(\014nd)h(abstract)e(pro)
r(cesses)g Fo(Q)2103 560 y Fw(1)2168 548 y Fx(and)h Fo(Q)2395
560 y Fw(2)2460 548 y Fx(suc)n(h)g(that)558 703 y(1.)41
b Fo(P)717 715 y Fw(1)769 703 y Fx([])14 b Fo(Q)895 715
y Fw(2)954 703 y Fn(j)-14 b Fx(=)23 b Fo(Q)1117 715 y
Fw(1)1154 703 y Fx(,)28 b Fo(Q)1271 715 y Fw(1)1322 703
y Fx([])14 b Fo(P)1435 715 y Fw(2)1495 703 y Fn(j)-14
b Fx(=)23 b Fo(Q)1658 715 y Fw(2)1695 703 y Fx(,)28 b(and)558
800 y(2.)41 b Fo(Q)730 812 y Fw(1)781 800 y Fx([])14
b Fo(Q)907 812 y Fw(2)967 800 y Fn(j)-14 b Fx(=)23 b
Fo(T)12 b Fx(,)26 b(and)558 898 y(3.)41 b(either)27 b
Fo(P)953 910 y Fw(1)1004 898 y Fx([])14 b Fp(CL)p Fx(\()p
Fo(T)e Fx(\))23 b Fn(j)-14 b Fx(=)23 b(\()p Fo(T)30 b
Fx(+)18 b Fo(Q)1680 910 y Fw(1)1735 898 y Fx(+)g Fo(Q)1884
910 y Fw(2)1921 898 y Fx(\),)28 b(or)f Fo(P)2159 910
y Fw(2)2210 898 y Fx([])14 b Fp(CL)q Fx(\()p Fo(T)e Fx(\))22
b Fn(j)-14 b Fx(=)23 b(\()p Fo(T)30 b Fx(+)18 b Fo(Q)2886
910 y Fw(1)2941 898 y Fx(+)g Fo(Q)3090 910 y Fw(2)3127
898 y Fx(\).)648 1055 y(Note)35 b(that)g(the)g(last)f(c)n(hec)n(k)g(in)
h(the)g(pro)r(of)g(rule)e(is)h(not)h(needed)h(if)e(one)h(of)g
Fo(Q)3184 1067 y Fw(1)3221 1055 y Fx(,)g Fo(Q)3345 1067
y Fw(2)3382 1055 y Fx(,)523 1155 y(or)j Fo(T)49 b Fx(is)37
b(a)h(safet)n(y)g(prop)r(ert)n(y)-7 b(.)38 b(The)g(auxiliary)c(pro)r
(cesses)j Fo(Q)2498 1167 y Fw(1)2573 1155 y Fx(and)i
Fo(Q)2812 1167 y Fw(2)2887 1155 y Fx(act)f(as)g(m)n(utual)523
1254 y(assumptions)c(and)i(guaran)n(tees)f(in)h(the)h(\014rst)f
(condition.)e(F)-7 b(or)36 b(instance,)g Fo(P)2998 1266
y Fw(1)3072 1254 y Fx(assuming)523 1354 y Fo(Q)589 1366
y Fw(2)659 1354 y Fx(satis\014es)31 b Fo(Q)1036 1366
y Fw(1)1105 1354 y Fx(and)i(symmetrically)26 b Fo(P)1865
1366 y Fw(2)1936 1354 y Fx(satisfying)k Fo(Q)2377 1366
y Fw(2)2446 1354 y Fx(under)j(the)g(assumption)d Fo(Q)3345
1366 y Fw(1)3382 1354 y Fx(.)523 1453 y(The)e(second)e(condition)f
(ensures)i(that)h(they)f(join)n(tly)f(satisfy)g Fo(T)12
b Fx(.)26 b(The)i(last)e(c)n(hec)n(k)g(guards)523 1553
y(against)e(w)n(ell-kno)n(wn)e(pitfalls)h(\(see)j([NT00,AENT01)o(]\))g
(in)f(applying)e(circular)g(reasoning)523 1653 y(in)k(the)h(presence)f
(of)g(fairness.)648 1752 y(In)20 b(the)h(next)g(section,)e(w)n(e)h
(presen)n(t)f(an)i(automated)d(metho)r(d)i(of)h(partitioning)16
b(an)k(MTD)523 1852 y Fo(T)35 b Fx(in)n(to)22 b(comp)r(onen)n(ts)h
Fo(T)1274 1864 y Fw(1)1334 1852 y Fx(and)h Fo(T)1541
1864 y Fw(2)1578 1852 y Fx(,)g(and)f(for)g(generating)f(the)i
(auxiliary)19 b(pro)r(cesses)j Fo(Q)3210 1864 y Fw(1)3271
1852 y Fx(and)523 1952 y Fo(Q)589 1964 y Fw(2)654 1952
y Fx(from)k(this)h(partitioning.)523 2192 y Fl(3.1)95
b(Decomp)s(osing)28 b(an)33 b(MTD)f(Prop)s(ert)m(y)523
2349 y Fx(Let)f Fo(T)42 b Fx(b)r(e)31 b(a)f(sp)r(eci\014cation)e(MTD)k
(for)e Fo(P)1844 2361 y Fw(1)1895 2349 y Fx([])14 b Fo(P)2008
2361 y Fw(2)2046 2349 y Fx(.)31 b(T)-7 b(o)30 b(use)g
Fo(T)42 b Fx(for)30 b(assume)f(guaran)n(tee)g(rea-)523
2449 y(soning,)f(w)n(e)i(m)n(ust)f(decomp)r(ose)g Fo(T)41
b Fx(in)n(to)29 b(parts)g Fo(T)2086 2461 y Fw(1)2153
2449 y Fx(and)h Fo(T)2366 2461 y Fw(2)2433 2449 y Fx(corresp)r(onding)e
(to)i(pro)r(cesses)523 2548 y Fo(P)576 2560 y Fw(1)641
2548 y Fx(and)e Fo(P)856 2560 y Fw(2)893 2548 y Fx(,)g(resp)r(ectiv)n
(ely)-7 b(.)25 b(W)-7 b(e)28 b(call)d(these)j(the)g Fp(fr)l(agments)34
b Fx(of)28 b Fo(T)12 b Fx(.)648 2648 y(Consider)31 b(the)i
Fn(8)p Fx(F)-9 b(A,)33 b Fn(A)1424 2660 y Fi(T)1476 2648
y Fx(,)h(for)e Fo(T)44 b Fx(as)33 b(constructed)f(in)h(Section)f(2.3.)g
(Let)h Fn(A)3100 2660 y Fw(1)3171 2648 y Fx(b)r(e)h(the)523
2747 y Fn(8)p Fx(F)-9 b(A)32 b(de\014ning)g(fragmen)n(t)f
Fo(T)1433 2759 y Fw(1)1470 2747 y Fx(,)i(that)g(is)f(obtained)f(from)g
Fn(A)2413 2759 y Fi(T)2499 2747 y Fx(b)n(y)h(the)i(follo)n(wing)28
b(pruning)523 2847 y(pro)r(cedure.)e(In)i Fn(A)1101 2859
y Fw(1)1139 2847 y Fx(,)f(\014rst)g(retain)f(all)f(the)j(p)r(ost-no)r
(de)f(DF)-9 b(A's)28 b(that)f(either)g(c)n(hec)n(k)f(a)h(w)n(a)n(v)n
(e-)523 2947 y(form)i(for)h(a)f(v)-5 b(ariable)27 b(of)k
Fo(P)1388 2959 y Fw(1)1425 2947 y Fx(,)f(c)n(hec)n(k)g(a)f(sequen)n
(tial)f(dep)r(endency)j(that)f(ends)g(in)g(an)g(ev)n(en)n(t)523
3046 y(of)25 b Fo(P)668 3058 y Fw(1)705 3046 y Fx(,)g(or)e(c)n(hec)n(k)
h(for)g(the)h(\014nal)f(ev)n(en)n(t)g(of)g(a)g(no)r(de)h(that)g(con)n
(tains)d(a)i(v)-5 b(ariable)22 b(of)j Fo(P)3108 3058
y Fw(1)3145 3046 y Fx(.)g(Then,)523 3146 y(for)32 b(all)f(no)r(des)h
(that)h(are)f(on)h(a)f(path)h(to)f(the)i(p)r(ost-no)r(de)e(DF)-9
b(A's)33 b(c)n(hosen)f(earlier,)e(retain)523 3246 y(the)i(sub-automata)
c(for)j(all)e(pre-no)r(des,)h(and)h(for)g(all)e(p)r(ost-no)r(des)h
(that)i(do)f(not)g(con)n(tain)523 3345 y(a)e(v)-5 b(ariable)26
b(of)j Fo(P)1056 3357 y Fw(1)1093 3345 y Fx(,)g(retain)f(only)g(the)h
(c)n(hec)n(k)f(for)h(the)g(\014nal)f(ev)n(en)n(t.)h(Prune)f(a)n(w)n(a)n
(y)f(all)g(other)523 3445 y(sub-automata.)22 b(The)i(form)f(of)h(the)h
(acceptance)e(condition)f(remains)f(unc)n(hanged.)i(De\014ne)523
3545 y Fn(L)p Fx(\()p Fo(T)661 3557 y Fw(1)698 3545 y
Fx(\))28 b(to)g(b)r(e)g(the)g(language)d(of)i Fn(A)1622
3557 y Fw(1)1660 3545 y Fx(.)523 3708 y Fl(Theorem)j(3.)41
b Fx(F)-7 b(or)27 b(MTD)h Fo(T)39 b Fx(and)28 b(fragmen)n(ts)d
Fo(T)2102 3720 y Fw(1)2166 3708 y Fx(and)j Fo(T)2377
3720 y Fw(2)2414 3708 y Fx(,)f Fn(L)p Fx(\()p Fo(T)12
b Fx(\))23 b(=)g Fn(L)p Fx(\()p Fo(T)2895 3720 y Fw(1)2932
3708 y Fx(\))c Fn(\\)g(L)p Fx(\()p Fo(T)3195 3720 y Fw(2)3232
3708 y Fx(\).)523 3830 y Fl(Pro)s(of)35 b(Sk)m(etc)m(h.)49
b Fx(Since)30 b(the)g(languages)e(are)h(de\014ned)h(b)n(y)g
Fn(8)p Fx(F)-9 b(A,)30 b(it)g(is)f(more)f(con)n(v)n(enien)n(t)523
3929 y(to)h(sho)n(w)f(the)h(con)n(trap)r(ositiv)n(e.)c(F)-7
b(rom)27 b(left-to-righ)n(t,)f(a)i(rejecting)f(run)i(for)f(a)h
(sequence)f(in)523 4029 y Fn(L)p Fx(\()p Fo(T)12 b Fx(\))24
b(m)n(ust)f(either)g(get)h(stuc)n(k)f(in)h(some)e(p)r(ost-DF)-9
b(A,)25 b(in)e(this)g(case,)g(it)h(induces)f(a)g(rejecting)523
4128 y(run)33 b(in)g Fn(A)850 4140 y Fi(i)878 4128 y
Fx(,)g(where)g Fo(i)g Fx(is)f(the)i(pro)r(cess)e(to)h(whic)n(h)g(the)g
(DF)-9 b(A)34 b(corresp)r(onds;)e(or,)g(it)h(passes)523
4228 y(through)d(a)h(non-fair)e(no)r(de)j(in\014nitely)c(often)k(and)f
(the)g(same)f(run)h(is)f(a)h(rejecting)f(run)h(in)523
4328 y(one)h(of)g Fn(A)845 4340 y Fw(1)914 4328 y Fx(or)g
Fn(A)1087 4340 y Fw(2)1124 4328 y Fx(.)g(In)h(the)f(other)g(direction,)
d(since)i(the)i Fn(8)p Fx(F)-9 b(A's)31 b(for)h(the)g(fragmen)n(ts)e
(are)523 4427 y(sub-automata)20 b(of)j Fn(A)1200 4439
y Fi(T)1252 4427 y Fx(,)g(a)f(rejecting)f(run)i(in)e(one)h(of)h(them)f
(is)f(a)h(rejecting)g(run)g(for)g Fn(A)3191 4439 y Fi(T)3243
4427 y Fx(.)84 b Fn(u)-55 b(t)523 4668 y Fl(3.2)95 b(Constructing)31
b(Abstract)i(Pro)s(cesses)523 4825 y Fx(F)-7 b(rom)20
b(the)h(fragmen)n(ts)e Fo(T)1297 4837 y Fw(1)1355 4825
y Fx(and)i Fo(T)1559 4837 y Fw(2)1617 4825 y Fx(constructed)g(earlier,)
d(w)n(e)j(can)f(construct)h(the)g(auxiliary)523 4924
y(pro)r(cesses)j Fo(Q)946 4936 y Fw(1)1009 4924 y Fx(and)h
Fo(Q)1234 4936 y Fw(2)1271 4924 y Fx(,)h(resp)r(ectiv)n(ely)-7
b(.)23 b(Informally)f(sp)r(eaking,)i Fo(Q)2618 4936 y
Fi(i)2671 4924 y Fx(is)g(the)i(automaton)e Fn(A)3377
4936 y Fi(i)1922 5173 y Fx(12)p eop
%%Page: 13 13
13 12 bop 523 448 a Fx(considered)20 b(as)i(a)f(pro)r(cess)g(\(this)h
(sort)f(of)i(dualit)n(y)c(is)i(used,)i(for)e(instance,)g(in)h(the)g
(COSP)-7 b(AN)523 548 y(mo)r(del)27 b(c)n(hec)n(k)n(er\).)h(F)-7
b(or)29 b(simplicit)n(y)-7 b(,)24 b(w)n(e)29 b(assume)f(that)h(the)h
(pro)r(cesses)d Fo(P)2818 560 y Fw(1)2885 548 y Fx(and)i
Fo(P)3101 560 y Fw(2)3168 548 y Fx(do)g(not)523 648 y(write)23
b(to)i(a)f(shared)g(v)-5 b(ariable.)21 b(The)k(pro)r(cess)e
Fo(Q)2009 660 y Fw(1)2071 648 y Fx(is)g(obtained)g(b)n(y)i
(determinizing)20 b Fn(A)3186 660 y Fw(1)3223 648 y Fx(,)25
b(and)523 747 y(mo)r(difying)f(the)j(resulting)d(automaton,)h(that)i
(accepts)f(sequences,)g(in)n(to)g(a)g(pro)r(cess,)g(that)523
847 y(generates)33 b(sequences,)g(as)g(follo)n(ws:)e(for)j(eac)n(h)f
(automaton)f(transition)g(of)i(a)f(p)r(ost-no)r(de,)523
946 y Fo(Q)589 958 y Fw(1)656 946 y Fx(reads)c(v)-5 b(ariables)26
b(written)j(b)n(y)h Fo(P)1686 958 y Fw(2)1723 946 y Fx(,)h(and)e
(writes)g(v)-5 b(alues)28 b(of)i(v)-5 b(ariables)27 b(written)i(b)n(y)g
Fo(P)3344 958 y Fw(1)3382 946 y Fx(,)523 1046 y(according)19
b(to)i(the)h(transition.)d(F)-7 b(or)21 b(a)h(transition)c(corresp)r
(onding)h(to)j(a)f(pre-no)r(de,)g Fo(Q)3212 1058 y Fw(1)3270
1046 y Fx(sets)523 1146 y(its)h(v)-5 b(ariables)20 b
(non-deterministicall)o(y)-7 b(,)18 b(un)n(til)j(the)j(precondition)c
(is)i(met.)h(The)g(acceptance)523 1245 y(conditions)18
b(on)j Fn(A)1088 1257 y Fw(1)1146 1245 y Fx(are)f(turned)h(in)n(to)f
(fairness)e(conditions)h(for)h Fo(Q)2569 1257 y Fw(1)2606
1245 y Fx(.)h(T)-7 b(o)20 b(prev)n(en)n(t)g(deadlo)r(c)n(ks)523
1345 y(in)28 b Fo(Q)687 1357 y Fw(1)723 1345 y Fx(,)h(w)n(e)f(mak)n(e)e
(the)j(follo)n(wing)24 b(assumption)i(on)i Fo(T)12 b
Fx(:)27 b(if)h(a)g(v)-5 b(ariable)25 b Fo(v)31 b Fx(o)r(ccurs)d(in)f(a)
h(no)r(de)523 1445 y Fo(r)h Fx(of)d Fo(T)12 b Fx(,)26
b(then)g Fo(v)k Fx(ma)n(y)24 b(o)r(ccur)i(in)g(an)n(y)f(of)h
Fo(r)r Fx('s)h Fn(_)p Fx(-successors,)d(but)j Fo(v)j
Fx(can)c(only)e(o)r(ccur)i(in)f(one)523 1544 y(of)h Fo(r)r
Fx('s)g Fn(^)p Fx(-successors.)e(W)-7 b(e)26 b(ha)n(v)n(e)f(not)h
(found)g(this)f(to)g(b)r(e)i(a)e(restriction)e(in)i(our)g(case)g(study)
-7 b(.)523 1712 y Fl(Theorem)30 b(4.)41 b Fx(F)-7 b(or)27
b(eac)n(h)g(fragmen)n(t)f Fo(T)1780 1724 y Fi(i)1835
1712 y Fx(of)h(MTD)h Fo(T)12 b Fx(,)27 b Fn(L)p Fx(\()p
Fo(Q)2422 1724 y Fi(i)2450 1712 y Fx(\))c(=)g Fn(L)p
Fx(\()p Fo(T)2731 1724 y Fi(i)2759 1712 y Fx(\).)536
b Fn(u)-55 b(t)648 1880 y Fx(Since)35 b Fn(A)939 1892
y Fi(i)1003 1880 y Fx(is)f(a)i Fn(8)p Fx(F)-9 b(A,)35
b(w)n(e)h(ma)n(y)-7 b(,)34 b(in)h(general,)f(need)i(to)f(determinize)e
(it)i(in)h(order)e(to)523 1979 y(consider)24 b(it)h(as)g(a)h(pro)r
(cess.)f(This)f(can)i(incur)f(an)g(exp)r(onen)n(tial)e(blo)n(wup.)i(Ho)
n(w)n(ev)n(er,)f(b)n(y)i(the)523 2079 y(Lic)n(h)n(tenstein-Pn)n(ueli)j
(thesis)k([LP85)o(],)h(the)g(size)f(of)h(the)h(sp)r(eci\014cation)d(is)
h(usually)e(m)n(uc)n(h)523 2179 y(smaller)17 b(than)k(the)h(size)d(of)i
(the)g(pro)r(cess.)f(Th)n(us,)h(one)g(ma)n(y)e(assume)g(that,)i(for)g
(instance,)f(the)523 2278 y(size)f(of)i Fo(T)810 2290
y Fw(1)867 2278 y Fx(is)f(m)n(uc)n(h)f(smaller)d(than)21
b(the)g(size)e(of)i Fo(P)2051 2290 y Fw(1)2088 2278 y
Fx(,)g(so)f(the)h(p)r(oten)n(tial)d(exp)r(onen)n(tial)g(blo)n(wup)523
2378 y(in)29 b(going)e(from)i Fo(T)1093 2390 y Fw(1)1159
2378 y Fx(to)h Fo(Q)1329 2390 y Fw(1)1395 2378 y Fx(still)d(results)h
(in)h(a)h(pro)r(cess)e(that)i(is)f(smaller)c(than)30
b Fo(P)3092 2390 y Fw(1)3130 2378 y Fx(.)f(Recall)523
2477 y(that)f Fo(Q)769 2489 y Fw(1)833 2477 y Fx(replaces)d
Fo(P)1200 2489 y Fw(1)1265 2477 y Fx(in)h(the)i(comp)r(ositional)22
b(c)n(hec)n(ks.)k(Theorem)g(4)h(lets)f(us)h(reform)n(ulate)523
2577 y(the)32 b(c)n(hec)n(k)e Fo(P)950 2589 y Fw(1)1001
2577 y Fx([])14 b Fo(Q)1127 2589 y Fw(2)1193 2577 y Fn(j)-14
b Fx(=)28 b Fo(Q)1361 2589 y Fw(1)1398 2577 y Fx(,)k(in)e(step)h(1)g
(of)g(the)g(comp)r(ositional)26 b(rule,)k(as)h Fo(P)2933
2589 y Fw(1)2984 2577 y Fx([])14 b Fo(Q)3110 2589 y Fw(2)3176
2577 y Fn(j)-14 b Fx(=)28 b Fn(A)3344 2589 y Fw(1)3382
2577 y Fx(.)523 2677 y(Using)36 b Fn(A)832 2689 y Fw(1)907
2677 y Fx(on)h(the)h(righ)n(t)d(hand)j(side)e(allo)n(ws)e(us)j(use)g
(the)h(e\016cien)n(t)f(complemen)n(tation)523 2776 y(prop)r(ert)n(y)30
b(of)h Fn(8)p Fx(F)-9 b(A,)30 b(that)i(reduces)e(the)h(complexit)n(y)d
(of)j(this)f(c)n(hec)n(k.)g(Theorems)f(3)i(and)f(4)523
2876 y(ensure)d(that)h(w)n(e)f(do)g(not)h(need)g(to)f(c)n(hec)n(k)g
(step)h(2)f(of)g(the)h(comp)r(ositional)23 b(rule.)523
3136 y Fq(4)112 b(Applications)523 3330 y Fx(W)-7 b(e)26
b(used)g(the)h(v)n(eri\014cation)22 b(to)r(ol)j(COSP)-7
b(AN/F)g(ormalChec)n(k)22 b([HHK96)o(])k(to)g(v)n(erify)f(a)g(n)n(um-)
523 3430 y(b)r(er)g(of)h(prop)r(erties)e(of)h(a)g(Plain)e(Old)h(T)-7
b(elephone)25 b(System)f(\(POTS\).)i(W)-7 b(e)26 b(c)n(hose)e(COSP)-7
b(AN)523 3530 y(for)36 b(its)g(e\016cien)n(t)g(sym)n(b)r(olic)d(mo)r
(del)i(c)n(hec)n(king)g(implemen)n(tation.)d(Ho)n(w)n(ev)n(er,)i(since)
i(it)g(is)523 3629 y(based)d(on)g(a)g(sync)n(hronous)f(pro)r(cess)g
(comp)r(osition)e(mo)r(del,)h(w)n(e)i(had)h(to)f(sim)n(ulate)d(asyn-)
523 3729 y(c)n(hronous)d(comp)r(osition)f(b)n(y)i(in)n(tro)r(ducing)f
(an)h(en)n(vironmen)n(t)e(v)-5 b(ariable,)26 b Fp(turn)p
Fx(,)i(that)h(is)f(set)523 3828 y(nondeterministically)-8
b(,)18 b(ensuring)k(that)i(at)g(eac)n(h)f(p)r(oin)n(t,)g(only)f(one)h
(comp)r(onen)n(t)g(can)g(mak)n(e)523 3928 y(a)k(mo)n(v)n(e.)648
4028 y(The)19 b(POTS)g(mo)r(del)e(consists)h(of)h(a)g
Fk(Switch)p Fx(,)e(a)i Fk(Phones)e Fx(pro)r(cess)h(and)h(the)h(en)n
(vironmen)n(t)523 4127 y(pro)r(cess)40 b Fk(Env)p Fx(,)f(that)i(is)f
(resp)r(onsible)e(for)i(assigning)e(the)j Fp(turn)f Fx(v)-5
b(ariable.)38 b(The)i Fk(Phones)523 4227 y Fx(pro)r(cess)19
b(con)n(tains)f(three)h(telephones,)g Fk(T0)p Fx(,)g
Fk(T1)h Fx(and)f Fk(T2)p Fx(,)h(and)f(eac)n(h)g(telephone)g(is)g
(connected)523 4327 y(to)25 b(the)h Fk(Switch)p Fx(,)d(as)h(sho)n(wn)h
(in)f(Figure)g(4)g(for)h(telephone)f Fk(T0)p Fx(.)h(Eac)n(h)f
(telephone)g(in)g Fk(Phones)523 4426 y Fx(comm)n(unicates)j(with)j(the)
h Fk(Switch)d Fx(through)i(the)h(follo)n(wing)c(v)-5
b(ariables:)28 b Fk(cmd)p Fx(,)h Fk(busy)g Fx(and)523
4526 y Fk(outnum)p Fx(.)18 b(The)i Fk(Switch)e Fx(send)i(messages)e(to)
i(the)g(telephones)f(through)h(the)h(v)-5 b(ariables)17
b Fk(msg0)p Fx(,)523 4625 y Fk(msg1)26 b Fx(and)h Fk(msg2)p
Fx(.)648 4725 y(W)-7 b(e)20 b(sp)r(eci\014ed)g(and)g(v)n(eri\014ed)f
(the)i(follo)n(wing)16 b(telephone)j(features:)h(the)h(basic)e
(telephone)523 4825 y(call,)35 b(call)h(forw)n(arding)e(and)k(c)n
(hanging)d(the)j(existing)d(call)g(forw)n(arding)g(plan.)h(The)i
Fp(c)l(al)t(l)523 4924 y(forwar)l(ding)27 b Fx(feature)d(sp)r
(eci\014ed)g(in)g(Figure)f(5)h(allo)n(ws)e(a)i(user)g(to)h(forw)n(ard)d
(a)j(telephone)e(call)1922 5173 y(13)p eop
%%Page: 14 14
14 13 bop 1214 1017 a @beginspecial 0 @llx 0 @lly 366
@urx 159 @ury 1800 @rwi @setspecial
%%BeginDocument: figures/block.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: block.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Jan  6 17:21:15 2002
%%For: namla@nslocum.cs.bell-labs.com (Nina Amla,2c530,,bl011272,07/26/99,[ k,k ])
%%BoundingBox: 0 0 366 159
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 159 moveto 0 0 lineto 366 0 lineto 366 159 lineto closepath clip newpath
-143.3 319.6 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
/Times-Roman ff 270.00 scf sf
5025 5250 m
gs 1 -1 sc (msg0) col0 sh gr
/Times-Roman ff 270.00 scf sf
5025 4500 m
gs 1 -1 sc (cmd) col0 sh gr
/Times-Roman ff 270.00 scf sf
5025 3825 m
gs 1 -1 sc (busy) col0 sh gr
/Times-Roman ff 270.00 scf sf
5025 2850 m
gs 1 -1 sc (outnum) col0 sh gr
/Times-Roman ff 270.00 scf sf
6975 4050 m
gs 1 -1 sc (Phones.T0) col0 sh gr
/Times-Roman ff 270.00 scf sf
3000 4050 m
gs 1 -1 sc (switch) col0 sh gr
% Polyline
7.500 slw
n 6600 3375 m 8475 3375 l 8475 4425 l 6600 4425 l
 cp gs col0 s gr 
% Polyline
gs  clippath
7530 4410 m 7470 4410 l 7470 4561 l 7500 4441 l 7530 4561 l cp
eoclip
n 3375 4500 m 3375 4875 l 7500 4875 l
 7500 4425 l gs col0 s gr gr

% arrowhead
n 7530 4561 m 7500 4441 l 7470 4561 l 7530 4561 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4260 4245 m 4260 4305 l 4411 4305 l 4291 4275 l 4411 4245 l cp
eoclip
n 6600 4275 m
 4275 4275 l gs col0 s gr gr

% arrowhead
n 4411 4245 m 4291 4275 l 4411 4305 l 4411 4245 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4260 3870 m 4260 3930 l 4411 3930 l 4291 3900 l 4411 3870 l cp
eoclip
n 6600 3900 m
 4275 3900 l gs col0 s gr gr

% arrowhead
n 4411 3870 m 4291 3900 l 4411 3930 l 4411 3870 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 2400 3375 m 4275 3375 l 4275 4425 l 2400 4425 l
 cp gs col0 s gr 
% Polyline
gs  clippath
3345 3390 m 3405 3390 l 3405 3239 l 3375 3359 l 3345 3239 l cp
eoclip
n 7500 3375 m 7500 2925 l 3375 2925 l
 3375 3375 l gs col0 s gr gr

% arrowhead
n 3345 3239 m 3375 3359 l 3405 3239 l 3345 3239 l  cp gs 0.00 setgray ef gr  col0 s
$F2psEnd
rs

%%EndDocument
 @endspecial 1130 1191 a Fs(Fig.)13 b(4.)26 b Fu(The)g(Plain)g(Old)f(T)
-6 b(elephone)26 b(System)e(\(POTS\))523 1561 y Fx(to)37
b(another)f(phone)h(if)f(the)i(curren)n(t)e(phone)h(is)f(either)g(busy)
g(or)h(if)f(it)h(is)e(not)i(answ)n(ered)523 1661 y(after)32
b(exactly)f(four)i(rings.)e(The)h(\014rst)h(precondition)d(states)i
(that)h(telephone)f Fk(T1)g Fx(places)523 1761 y(a)h(call)f(to)h
Fk(T2)p Fx(,)g(that)h(has)f(a)h(call)d(forw)n(arding)g(plan)h(\()p
Fk(switch.fplan[T2])c Fx(=)33 b Fk(yes)p Fx(\))g(that)523
1860 y(forw)n(ards)f(calls)g(to)i Fk(T0)f Fx(\()p Fk(switch.fnum[T2])28
b Fx(=)34 b Fk(T0)p Fx(\).)g(If)g(either)f Fk(T2)g Fx(is)g(busy)h(or)g
(if)f(there)523 1960 y(is)i(no)i(answ)n(er)e(after)h(four)g(rings)e(\()
p Fk(Switch.ringer)e Fx(=)k(4\),)g(the)h Fk(Switch)d
Fx(forw)n(ards)h(the)523 2060 y(call.)23 b(In)i(the)g(p)r
(ostcondition,)e(that)i(sp)r(eci\014es)f(the)h(forw)n(arding)d(proto)r
(col,)h(the)i Fk(Switch)e Fx(\(a\))523 2159 y(informs)j
Fk(T1)h Fx(that)i(it)e(is)g(forw)n(arding)f(the)i(call)e(\()p
Fk(msg1)h Fx(=)h Fk(forwarding)p Fx(\),)c(\(b\))29 b(c)n(hec)n(ks)e(if)
h Fk(T0)523 2259 y Fx(is)j(busy)g(\()p Fk(msg0)g Fx(=)g
Fk(ru-busy)p Fx(\))e(and)j(\(c\))g(w)n(aits)e(for)h Fk(T1)g
Fx(to)g(ac)n(kno)n(wledge)e(the)j(forw)n(arding)523 2358
y(message)25 b(\()p Fk(msg1)i Fx(=)g Fk(forwarding)p
Fx(\).)614 4187 y @beginspecial 0 @llx 0 @lly 663 @urx
398 @ury 3240 @rwi @setspecial
%%BeginDocument: figures/pots2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: pots2.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Thu Apr 25 13:24:35 2002
%%For: kedar@trex8.cs.bell-labs.com (Kedar Namjoshi,,,,hrid=7700533,handle=knamjoshi)
%%BoundingBox: 0 0 663 398
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 398 moveto 0 0 lineto 663 0 lineto 663 398 lineto closepath clip newpath
-57.8 410.2 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
7.500 slw
% Ellipse
n 7088 702 18 51 0 360 DrawEllipse gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 471.33 43.40] PATmp PATsp ef gr PATusp gs col4 s gr

% Ellipse
n 7088 1266 18 51 0 360 DrawEllipse gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 471.33 81.00] PATmp PATsp ef gr PATusp gs col4 s gr

% Polyline
n 7125 525 m
 7125 1425 l gs col4 s gr 
% Polyline
n 7050 525 m 7050 1425 l
 7050 1343 l gs col4 s gr 
% Polyline
n 6300 2850 m
 9000 2850 l gs col-1 s gr 
% Polyline
n 6300 3150 m
 9000 3150 l gs col-1 s gr 
/Times-Roman ff 240.00 scf sf
7200 3075 m
gs 1 -1 sc (T0) col-1 sh gr
% Ellipse
n 3713 4752 18 51 0 360 DrawEllipse gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 246.33 313.40] PATmp PATsp ef gr PATusp gs col4 s gr

% Ellipse
n 3713 5316 18 51 0 360 DrawEllipse gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 246.33 351.00] PATmp PATsp ef gr PATusp gs col4 s gr

% Polyline
n 3750 4575 m
 3750 5475 l gs col4 s gr 
% Polyline
n 3675 4575 m 3675 5475 l
 3675 5393 l gs col4 s gr 
% Ellipse
n 3300 1725 212 212 0 360 DrawEllipse gs col0 s gr

% Polyline
n 3225 1800 m 3300 1650 l
 3375 1800 l gs col0 s gr 
% Arc
gs  clippath
1991 1501 m 2046 1525 l 2108 1387 l 2032 1485 l 2053 1363 l cp
eoclip
n 2662.5 1712.5 672.0 -18.4 -161.6 arcn
gs col0 s gr
 gr

% arrowhead
n 2053 1363 m 2032 1485 l 2108 1387 l 2053 1363 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
n 1575 1500 m 2325 1500 l 2325 1950 l 1575 1950 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 105.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
n 2325 1725 m
 3075 1725 l gs col0 s gr 
% Polyline
n 3521 1725 m 3529 1725 l gs col0 s gr
% Arc
gs  clippath
7896 1750 m 7882 1692 l 7735 1727 l 7859 1729 l 7749 1785 l cp
eoclip
n 7681.7 1202.9 556.7 -179.7 69.7 arcn
gs col-1 s gr
 gr

% arrowhead
n 7749 1785 m 7859 1729 l 7735 1727 l 7749 1785 l  cp gs 0.00 setgray ef gr  col-1 s
% Arc
gs  clippath
10499 6483 m 10526 6430 l 10392 6361 l 10486 6443 l 10365 6415 l cp
eoclip
n 10698.2 5908.9 576.2 -174.1 110.1 arcn
gs col0 s gr
 gr

% arrowhead
n 10365 6415 m 10486 6443 l 10392 6361 l 10365 6415 l  cp gs 0.00 setgray ef gr  col0 s
% Arc
gs  clippath
4051 5958 m 4076 5903 l 3938 5840 l 4035 5918 l 3913 5895 l cp
eoclip
n 4162.5 5512.5 427.6 -164.7 105.3 arcn
gs col0 s gr
 gr

% arrowhead
n 3913 5895 m 4035 5918 l 3938 5840 l 3913 5895 l  cp gs 0.00 setgray ef gr  col0 s
% Ellipse
n 6375 3975 188 188 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 6300 525 m 6975 525 l 7200 825 l
 9000 825 l gs col0 s gr 
% Polyline
n 6300 825 m 6975 825 l 7200 525 l
 9000 525 l gs col0 s gr 
% Polyline
n 6300 1050 m 6975 1050 l 7200 1350 l
 9000 1350 l gs col0 s gr 
% Polyline
n 6300 1350 m 6975 1350 l 7200 1050 l
 9000 1050 l gs col0 s gr 
% Polyline
n 6300 1875 m 7800 1875 l 8025 1575 l
 9000 1575 l gs col0 s gr 
% Polyline
n 6300 1575 m 7800 1575 l 8025 1875 l
 9000 1875 l gs col0 s gr 
% Polyline
 [60] 0 sd
n 4125 225 m 9375 225 l 9375 3450 l 4125 3450 l
 cp gs col4 s gr  [] 0 sd
% Polyline
n 6300 2175 m
 9000 2175 l gs col-1 s gr 
% Polyline
n 6300 2475 m
 9000 2475 l gs col-1 s gr 
% Polyline
n 6375 3450 m
 6375 3750 l gs col-1 s gr 
% Polyline
n 6330 3885 m 6405 4035 l
 6480 3885 l gs col-1 s gr 
% Polyline
gs  clippath
9045 4365 m 9105 4365 l 9105 4214 l 9075 4334 l 9045 4214 l cp
eoclip
n 6600 3975 m 8175 3975 l 9075 3975 l
 9075 4350 l gs col0 s gr gr

% arrowhead
n 9045 4214 m 9075 4334 l 9105 4214 l 9045 4214 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 4800 3750 m 4875 3750 l
 4875 3825 l gs col-1 s gr 
% Polyline
gs  clippath
3645 4365 m 3705 4365 l 3705 4214 l 3675 4334 l 3645 4214 l cp
eoclip
n 6150 3975 m 3675 3975 l
 3675 4350 l gs col0 s gr gr

% arrowhead
n 3645 4214 m 3675 4334 l 3705 4214 l 3645 4214 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6765 5580 m 6765 5520 l 6614 5520 l 6734 5550 l 6614 5580 l cp
eoclip
n 6075 5550 m
 6750 5550 l gs col0 s gr gr

% arrowhead
n 6614 5580 m 6734 5550 l 6614 5520 l 6614 5580 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 8850 4575 m 10200 4575 l 10425 4875 l
 11550 4875 l gs col0 s gr 
% Polyline
n 8850 4875 m 10200 4875 l 10425 4575 l
 11550 4575 l gs col0 s gr 
% Polyline
n 8850 5475 m 10050 5475 l 10275 5175 l
 11550 5175 l gs col0 s gr 
% Polyline
n 8850 5175 m 10050 5175 l 10275 5475 l
 11550 5475 l gs col0 s gr 
% Polyline
n 6750 4350 m 12000 4350 l 12000 6825 l 6750 6825 l
 cp gs col1 s gr 
% Polyline
n 8850 5700 m 10050 5700 l 10275 6000 l
 11550 6000 l gs col0 s gr 
% Polyline
n 8850 6600 m 10425 6600 l 10650 6300 l
 11550 6300 l gs col0 s gr 
% Polyline
n 8850 6300 m 10425 6300 l 10650 6600 l
 11550 6600 l gs col0 s gr 
% Polyline
n 6825 4425 m 11925 4425 l 11925 6750 l 6825 6750 l
 cp gs col1 s gr 
% Polyline
n 8850 6000 m 10050 6000 l 10275 5700 l
 11550 5700 l gs col0 s gr 
% Polyline
n 8850 5850 m 8925 5850 l
 8925 5925 l gs col0 s gr 
% Polyline
n 2625 4575 m 3600 4575 l 3825 4875 l
 5925 4875 l gs col-1 s gr 
% Polyline
n 2625 4875 m 3600 4875 l 3825 4575 l
 5925 4575 l gs col-1 s gr 
% Polyline
n 2625 5175 m 3600 5175 l 3825 5475 l 4200 5475 l 4425 5175 l 4725 5175 l
 4950 5475 l 5325 5475 l 5550 5175 l
 5925 5175 l gs col-1 s gr 
% Polyline
n 2625 5475 m 3600 5475 l 3825 5175 l 4200 5175 l 4425 5475 l 4725 5475 l
 4950 5175 l 5325 5175 l 5550 5475 l
 5925 5475 l gs col-1 s gr 
% Polyline
n 2625 6150 m 3900 6150 l 4125 5850 l
 5925 5850 l gs col-1 s gr 
% Polyline
n 2625 5850 m 3900 5850 l 4125 6150 l
 5925 6150 l gs col-1 s gr 
% Polyline
gs  clippath
4065 1755 m 4065 1695 l 3914 1695 l 4034 1725 l 3914 1755 l cp
eoclip
n 3525 1725 m
 4050 1725 l gs col0 s gr gr

% arrowhead
n 3914 1755 m 4034 1725 l 3914 1695 l 3914 1755 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
n 975 4350 m 6075 4350 l 6075 6375 l 975 6375 l
 cp gs col4 s gr  [] 0 sd
/Times-Roman ff 240.00 scf sf
6450 750 m
gs 1 -1 sc (none) col0 sh gr
/Times-Roman ff 240.00 scf sf
7650 750 m
gs 1 -1 sc (place_call) col0 sh gr
/Times-Roman ff 240.00 scf sf
5175 750 m
gs 1 -1 sc (T1.cmd) col0 sh gr
/Times-Roman ff 240.00 scf sf
4950 1275 m
gs 1 -1 sc (T1.outnum) col0 sh gr
/Times-Roman ff 240.00 scf sf
4800 1800 m
gs 1 -1 sc (switch.msg1) col0 sh gr
/Times-Roman ff 240.00 scf sf
7800 1275 m
gs 1 -1 sc (T2) col0 sh gr
/Times-Roman ff 240.00 scf sf
6525 1275 m
gs 1 -1 sc (T1) col0 sh gr
/Times-Roman ff 240.00 scf sf
6825 1800 m
gs 1 -1 sc (none) col0 sh gr
/Times-Roman ff 240.00 scf sf
7200 2400 m
gs 1 -1 sc (yes) col-1 sh gr
/Times-Roman ff 240.00 scf sf
7725 3825 m
gs 1 -1 sc (T2.busy) col-1 sh gr
/Times-Roman ff 240.00 scf sf
4950 3825 m
gs 1 -1 sc (T2.busy) col-1 sh gr
/Times-Roman ff 240.00 scf sf
9225 4800 m
gs 1 -1 sc (T2) col0 sh gr
/Times-Roman ff 240.00 scf sf
10800 4800 m
gs 1 -1 sc (T0) col0 sh gr
/Times-Roman ff 240.00 scf sf
7275 4800 m
gs 1 -1 sc (T1.outnum) col0 sh gr
/Times-Roman ff 240.00 scf sf
7200 5400 m
gs 1 -1 sc (switch.msg0) col0 sh gr
/Times-Roman ff 240.00 scf sf
8175 1800 m
gs 1 -1 sc (try_conn) col0 sh gr
/Times-Roman ff 240.00 scf sf
7200 5925 m
gs 1 -1 sc (switch.msg1) col0 sh gr
/Times-Roman ff 240.00 scf sf
10575 5925 m
gs 1 -1 sc (forwarding) col-1 sh gr
/Times-Roman ff 240.00 scf sf
8925 5400 m
gs 1 -1 sc (switch_busy) col0 sh gr
/Times-Roman ff 240.00 scf sf
9300 6525 m
gs 1 -1 sc (src_ack) col0 sh gr
/Times-Roman ff 240.00 scf sf
7575 6450 m
gs 1 -1 sc (T1.cmd) col0 sh gr
/Times-Roman ff 240.00 scf sf
9000 5925 m
gs 1 -1 sc (forwarding) col0 sh gr
/Times-Roman ff 240.00 scf sf
10800 5400 m
gs 1 -1 sc (ru_busy) col0 sh gr
/Times-Roman ff 240.00 scf sf
10800 6525 m
gs 1 -1 sc (ack) col-1 sh gr
/Times-Roman ff 240.00 scf sf
1125 4800 m
gs 1 -1 sc (switch.msg1) col-1 sh gr
/Times-Roman ff 180.00 scf sf
3000 5400 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 180.00 scf sf
3975 5400 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 180.00 scf sf
4575 5400 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 180.00 scf sf
5100 5400 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 180.00 scf sf
5700 5400 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 240.00 scf sf
1125 5400 m
gs 1 -1 sc (switch.ringer) col-1 sh gr
/Times-Roman ff 240.00 scf sf
4500 4800 m
gs 1 -1 sc (ring_tone) col-1 sh gr
/Times-Roman ff 240.00 scf sf
2700 4800 m
gs 1 -1 sc (try_conn) col-1 sh gr
/Times-Roman ff 240.00 scf sf
1575 6000 m
gs 1 -1 sc (T2.cmd) col0 sh gr
/Times-Roman ff 240.00 scf sf
4950 6075 m
gs 1 -1 sc (none) col-1 sh gr
/Times-Roman ff 240.00 scf sf
2925 6075 m
gs 1 -1 sc (ack) col-1 sh gr
/Times-Roman ff 240.00 scf sf
4425 2400 m
gs 1 -1 sc (switch.fplan[T2]) col0 sh gr
/Times-Roman ff 240.00 scf sf
4425 3075 m
gs 1 -1 sc (switch.fnum[T2]) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 1297 4362 a Fs(Fig.)13 b(5.)26 b Fu(POTS:)g(Call)h(F)-6
b(orw)n(arding)26 b(F)-6 b(eature)648 4725 y Fx(W)f(e)28
b(did)f(the)g(v)n(eri\014cation)e(b)r(oth)j(non-comp)r(ositionall)o(y)
22 b(and)27 b(comp)r(ositionally)21 b(using)523 4825
y(our)g(assume-guaran)n(tee)d(pro)r(of)k(rule.)e(F)-7
b(urthermore,)20 b(w)n(e)i(used)g(the)g(heuristic)e(to)h(partition)523
4924 y(the)34 b(MTD)g(prop)r(ert)n(y)f Fk(T)g Fx(in)n(to)f(fragmen)n
(ts,)g Fk(Tp)h Fx(and)g Fk(Ts)p Fx(,)g(and)g(to)h(generate)e(the)i
(abstract)1922 5173 y(14)p eop
%%Page: 15 15
15 14 bop 523 369 2764 4 v 521 460 4 92 v 535 433 a Fu(Mo)r(del)26
b(Chec)n(king)g(T)-6 b(ask)p 1400 460 V 154 w(Reac)n(hable)26
b(States)p 1995 460 V 23 w(BDD)f(size)p 2334 460 V 25
w(Time)g(\(seconds\))p 2871 460 V 24 w(Space)g(\(Mb\))p
3285 460 V 523 463 2764 4 v 523 480 V 521 571 4 92 v
1572 544 a(Basic)j(telephone)d(call)p 3285 571 V 523
575 2764 4 v 523 591 V 521 682 4 92 v 535 655 a(Comp)r(ositional)i(c)n
(hec)n(k)e(1)p 1400 682 V 259 w(2.7)i(x)e(e11)p 1995
682 V 183 w(1060069)p 2335 682 V 269 w(91)p 2871 682
V 379 w(728)p 3285 682 V 523 686 2764 4 v 521 777 4 92
v 535 750 a(Comp)r(ositional)i(c)n(hec)n(k)e(2)p 1400
777 V 259 w(7.0)i(x)e(e06)p 1995 777 V 222 w(32553)p
2335 777 V 325 w(3)p 2871 777 V 437 w(7)p 3285 777 V
523 780 2764 4 v 521 872 4 92 v 535 844 a(Non-Comp)r(ositional)h(c)n
(hec)n(k)p 1401 872 V 158 w(7.4)h(x)e(e09)p 1995 872
V 183 w(4707116)p 2335 872 V 249 w(263)p 2871 872 V 342
w(3923)p 3285 872 V 523 875 2764 4 v 523 892 V 521 983
4 92 v 1644 956 a(Call)j(forw)n(arding)p 3285 983 V 523
986 2764 4 v 523 1003 V 521 1094 4 92 v 535 1067 a(Comp)r(ositional)f
(c)n(hec)n(k)e(1)p 1400 1094 V 259 w(1.2)i(x)e(e11)p
1995 1094 V 183 w(1610343)p 2335 1094 V 249 w(190)p 2871
1094 V 342 w(1234)p 3285 1094 V 523 1098 2764 4 v 521
1189 4 92 v 535 1161 a(Comp)r(ositional)i(c)n(hec)n(k)e(2)p
1400 1189 V 259 w(1.4)i(x)e(e08)p 1995 1189 V 222 w(23283)p
2335 1189 V 325 w(2)p 2871 1189 V 418 w(11)p 3285 1189
V 523 1192 2764 4 v 521 1284 4 92 v 535 1256 a(Non-Comp)r(ositional)h
(c)n(hec)n(k)p 1401 1284 V 158 w(3.1)h(x)e(e09)p 1995
1284 V 183 w(2273486)p 2335 1284 V 249 w(100)p 2871 1284
V 342 w(1457)p 3285 1284 V 523 1287 2764 4 v 523 1303
V 521 1395 4 92 v 1467 1367 a(Changing)i(forw)n(arding)g(plan)p
3285 1395 V 523 1398 2764 4 v 523 1415 V 521 1506 4 92
v 535 1479 a(Comp)r(ositional)g(c)n(hec)n(k)e(1)p 1400
1506 V 259 w(2.6)i(x)e(e11)p 1995 1506 V 183 w(1388866)p
2335 1506 V 249 w(165)p 2871 1506 V 361 w(789)p 3285
1506 V 523 1509 2764 4 v 521 1601 4 92 v 535 1573 a(Comp)r(ositional)i
(c)n(hec)n(k)e(2)p 1400 1601 V 313 w(47150)p 1995 1601
V 278 w(10295)p 2335 1601 V 325 w(1)p 2871 1601 V 437
w(1)p 3285 1601 V 523 1604 2764 4 v 521 1695 4 92 v 535
1668 a(Non-Comp)r(ositional)h(c)n(hec)n(k)p 1401 1695
V 158 w(4.2)h(x)e(e09)p 1995 1695 V 183 w(3519750)p 2335
1695 V 249 w(337)p 2871 1695 V 342 w(2202)p 3285 1695
V 523 1699 2764 4 v 1435 1759 a Fs(T)-7 b(able)28 b(1.)e
Fu(Exp)r(erimen)n(tal)f(Results)523 2134 y Fx(pro)r(cesses,)36
b Fk(Qp)h Fx(and)g Fk(Qs)p Fx(.)f(Since)h(the)h(abstract)e(pro)r(cess)g
(for)h(the)h Fk(Switch)d Fx(had)i(no)g(fair-)523 2234
y(ness,)c(w)n(e)g(did)g(not)g(need)g(to)h(c)n(hec)n(k)e(the)i(last)e
(condition)f(in)h(the)i(pro)r(of)f(rule.)f(Moreo)n(v)n(er,)523
2333 y(as)37 b(a)h(consequence)e(of)i(Theorem)e(4,)i(w)n(e)f(did)g(not)
h(ha)n(v)n(e)f(to)g(c)n(hec)n(k)g(the)h(second)g(condi-)523
2433 y(tion)24 b(\()p Fk(Qp)14 b Fx([])g Fk(Qs)21 b Fn(j)-14
b Fx(=)23 b Fk(T)p Fx(\))h(either.)g(The)g(table)g(summarizes)c(our)k
(v)n(eri\014cation)d(results)i(for)h(three)523 2533 y(prop)r(erties,)i
(where)h(the)h(\014rst)g(t)n(w)n(o)e(ro)n(ws)h(corresp)r(ond)f(to)h
(the)h(assume-guaran)n(tee)c(c)n(hec)n(ks)523 2632 y(\()p
Fk(Switch)14 b Fx([])g Fk(Qp)g Fx([])g Fk(Env)k Fn(j)-14
b Fx(=)23 b Fk(Ts)c Fx(and)g Fk(Qs)14 b Fx([])g Fk(Phones)g
Fx([])g Fk(Env)k Fn(j)-14 b Fx(=)22 b Fk(Tp)p Fx(\))d(and)g(the)g(last)
f(ro)n(w)g(is)g(the)h(non-)523 2732 y(comp)r(ositional)k(v)n
(eri\014cation)h(\()p Fk(Switch)14 b Fx([])g Fk(Phones)g
Fx([])g Fk(Env)j Fn(j)-14 b Fx(=)22 b Fk(T)p Fx(\).)648
2834 y(The)j(results)f(in)h(T)-7 b(able)24 b(1)h(indicate)e(that)j(the)
f(t)n(w)n(o)g(comp)r(ositional)20 b(c)n(hec)n(ks)25 b(led)f(to)h(sa)n
(v-)523 2934 y(ings)36 b(of)i(15\045-80\045)e(in)h(v)n(eri\014cation)d
(times)i(and)i(comparable)c(sa)n(vings)h(in)i(BDD-no)r(des)523
3034 y(used,)e(when)f(compared)f(to)h(the)h(single)d(non-comp)r
(ositional)d(c)n(hec)n(k.)k(The)i(partitioning)523 3133
y(heuristic)18 b(w)n(ork)n(ed)h(without)h(an)n(y)f(mo)r(di\014cation)e
(for)j(the)h(\014rst)f(prop)r(ert)n(y)-7 b(.)19 b(Ho)n(w)n(ev)n(er,)g
(for)h(the)523 3233 y(other)27 b(prop)r(erties,)e(w)n(e)i(had)g(to)g
(strengthen)g(the)h(precondition)d(and)i(redo)f(the)i(partition-)523
3332 y(ing)j(and)g(abstract)g(pro)r(cess)f(generation.)g(The)i(c)n(hec)
n(ks)e(in)n(v)n(olving)e(the)k(abstract)e(phones)523
3432 y(w)n(as)25 b(more)e(exp)r(ensiv)n(e)i(b)r(ecause)g(the)h
Fk(Phones)d Fx(pro)r(cess,)h(b)r(eing)h(the)h(initiator)c(of)k(all)d
(trans-)523 3532 y(actions,)k(has)h(more)e(non-determinism.)e(As)29
b(part)f(of)g(future)h(w)n(ork,)e(w)n(e)h(in)n(tend)g(to)g(apply)523
3631 y(this)j(tec)n(hnique)g(on)h(other)f(examples)e(and)j(in)n(v)n
(estigate)c(w)n(a)n(ys)j(of)h(re\014ning)e(the)i(abstract)523
3731 y(pro)r(cess)26 b(without)h(ha)n(ving)f(to)h(mo)r(dify)g(the)h
(prop)r(ert)n(y)-7 b(.)523 4011 y Fq(5)112 b(Conclusions)523
4224 y Fx(The)32 b(goal)e(of)i(this)g(w)n(ork,)f(inspired)f(b)n(y)i
(the)g(success)f(of)i(MSC-based)e(notations)g(for)g(de-)523
4324 y(scribing)23 b(async)n(hronous)g(systems,)h(is)g(to)i(pro)n(vide)
d(a)i(framew)n(ork)e(for)i(visually)d(sp)r(ecifying)523
4423 y(async)n(hronous)34 b(b)r(eha)n(vior,)h(coupled)h(with)g(mo)r
(dular)e(reasoning)g(algorithms.)f(This)j(pa-)523 4523
y(p)r(er)30 b(do)r(es)h(so)e(b)n(y)i(prop)r(osing)d(a)i(new)g
(notation,)f(Mo)r(dular)g(Timing)f(Diagrams,)f(together)523
4623 y(with)36 b(an)h(e\016cien)n(t,)f(p)r(olynomial-time)30
b(mo)r(del)35 b(c)n(hec)n(king)g(algorithm,)e(and)j(an)h(assume-)523
4722 y(guaran)n(tee)26 b(partitioning)e(algorithm)f(that)28
b(app)r(ears)e(to)i(w)n(ork)e(quite)h(w)n(ell)e(in)i(practice.)648
4825 y(In)34 b([MP87)n(])h(it)e(w)n(as)g(prop)r(osed)g(that)h
Fn(8)p Fx(F)-9 b(A)34 b(b)r(e)g(used)g(as)g(a)f(visual)f(sp)r
(eci\014cation)g(lan-)523 4924 y(guage;)21 b(our)h(w)n(ork)g(brings)e
(this)i(idea)g(closer)e(to)j(practical)c(use.)k(While)e(MTD's)i(are)f
(similar)1922 5173 y(15)p eop
%%Page: 16 16
16 15 bop 523 448 a Fx(to)23 b Fn(8)p Fx(F)-9 b(A,)23
b(the)h(visual)d(notation)h(sp)r(eci\014es)g(ordering)f(constrain)n(ts)
g(more)g(compactly)-7 b(,)21 b(whic)n(h)523 548 y(is)26
b(eviden)n(t)g(in)h(the)g(e\016cien)n(t)g(but)g(tric)n(ky)f
(translation)e(of)j(MTD's)g(to)g Fn(8)p Fx(F)-9 b(A)27
b(as)g(opp)r(osed)f(to)523 648 y(the)c(simple)d(and)i(direct)f
(translation)f(in)i(the)g(rev)n(erse)f(direction)f(indicated)h(in)h
(Theorem)e(0.)523 747 y(Moreo)n(v)n(er,)k(w)n(e)i(\014nd)h(that)g
(visual)d(notations)h(mak)n(e)g(explicit)f(the)j(information)c
(necessary)523 847 y(for)29 b(prop)r(ert)n(y)f(decomp)r(osition,)e(and)
k(therefore)e(are)h(particularly)c(w)n(ell)i(suited)i(for)g
Fp(auto-)523 946 y(mate)l(d)j Fx(comp)r(ositional)c(reasoning.)h(One)j
(ma)n(y)e(also)g(consider)g(replacing)f(the)j(R)-7 b(TD's)33
b(in)523 1046 y(the)c(MTD)h(no)r(des)f(with)g(sync)n(hronous)e(timing)f
(diagrams;)f(the)30 b(translation)c(results)h(and)523
1146 y(the)g(partitioning)c(heuristics)i(should)g(carry)h(o)n(v)n(er)f
(in)h(a)g(fairly)f(straigh)n(tforw)n(ard)e(manner.)523
1245 y(In)g(future)g(w)n(ork,)e(w)n(e)h(hop)r(e)h(to)g(extend)f(the)h
(functionalit)n(y)d(of)j(the)g(R)-7 b(TDT)23 b(to)r(ol)e([AEKN01)o(])
523 1345 y(to)28 b(MTD's.)523 1634 y Fq(References)523
1849 y Fu([AEKN00])98 b(N.)21 b(Amla,)g(E.A.)g(Emerson,)g(R.P)-6
b(.)21 b(Kurshan,)g(and)g(K.S.)g(Namjoshi.)27 b(Mo)r(del)22
b(c)n(hec)n(k-)967 1940 y(ing)k(sync)n(hronous)f(timing)h(diagrams.)34
b(In)25 b Fr(FMCAD)p Fu(,)h(2000.)523 2036 y([AEKN01])98
b(N.)33 b(Amla,)g(E.A.)g(Emerson,)g(R.P)-6 b(.)33 b(Kurshan,)g(and)f
(K.S.)h(Namjoshi.)57 b(R)-6 b(TDT:)33 b(a)967 2128 y(fron)n(t-end)22
b(for)h(e\016cien)n(t)g(mo)r(del)f(c)n(hec)n(king)g(of)i(sync)n
(hronous)e(timing)g(diagrams.)30 b(In)967 2219 y Fr(CA)-8
b(V)p Fu(,)26 b(2001.)523 2315 y([AEN99])158 b(N.)31
b(Amla,)g(E.A.)h(Emerson,)f(and)g(K.S.)g(Namjoshi.)50
b(E\016cien)n(t)32 b(decomp)r(ositional)967 2406 y(mo)r(del)26
b(c)n(hec)n(king)f(for)h(regular)h(timing)e(diagrams.)35
b(In)25 b Fr(CHARME)p Fu(,)h(1999.)523 2502 y([AENT01])103
b(N.)48 b(Amla,)f(E.A.)h(Emerson,)g(K.S.)f(Namjoshi,)i(and)e(R.)g(T)-6
b(re\015er.)100 b(Assume-)967 2594 y(guaran)n(tee)43
b(based)f(comp)r(ositional)i(reasoning)f(for)g(sync)n(hronous)f(timing)
g(dia-)967 2685 y(grams.)35 b(In)25 b Fr(T)-6 b(A)n(CAS)p
Fu(,)26 b(v)n(olume)e(2031)j(of)g Fr(LNCS)p Fu(,)f(2001.)523
2781 y([AENT02])103 b(N.)51 b(Amla,)f(E.A.)g(Emerson,)h(K.)f(Namjoshi,)
h(and)f(R.)g(T)-6 b(re\015er.)109 b(Comp)r(osi-)967 2873
y(tional)48 b(Reasoning)g(for)f(Async)n(hronous)f(Systems,)g(2002.)99
b(URL:)46 b Fa(http://-)967 2964 y(www.cs.bell-labs.com/who/ked)q(ar/p)
q(ublic)q(atio)q(ns.ht)q(ml)p Fu(.)523 3060 y([A)n(G01])210
b(R.)18 b(Alur)f(and)h(R.)g(Grosu.)k(Shared)17 b(v)l(ariable)i(in)n
(teraction)f(diagrams.)23 b(In)17 b Fr(16th)k(IEEE)967
3151 y(International)29 b(Confer)l(enc)l(e)g(on)f(A)n(utomate)l(d)h
(Softwar)l(e)g(Engine)l(ering)p Fu(,)e(2001.)523 3247
y([AL95])220 b(M.)33 b(Abadi)e(and)h(L.)g(Lamp)r(ort.)53
b(Conjoining)33 b(sp)r(eci\014cations.)55 b Fr(A)n(CM)33
b(T)-6 b(r)l(ans.)34 b(on)967 3339 y(Pr)l(o)l(gr)l(amming)29
b(L)l(anguages)g(and)f(Systems)h(\(TOPLAS\))p Fu(,)e(Ma)n(y)f(1995.)523
3435 y([AS85])225 b(B.)32 b(Alp)r(ern)f(and)g(F.)g(Sc)n(hneider.)51
b(De\014ning)31 b(liv)n(eness.)51 b Fr(Information)33
b(Pr)l(o)l(c)l(essing)967 3526 y(L)l(etters)p Fu(,)c(21\(4\),)d(1985.)
523 3622 y([A)-6 b(Y99])216 b(R.)24 b(Alur)g(and)g(M.)h(Y)-6
b(annak)l(akis.)31 b(Mo)r(del)25 b(c)n(hec)n(king)f(of)h(message)g
(sequence)f(c)n(harts.)967 3713 y(In)h Fr(Pr)l(o)l(c.)j(T)-6
b(enth)29 b(International)f(Confer)l(enc)l(e)h(on)f(Concurr)l(ency)i
(The)l(ory)p Fu(,)d(1999.)523 3809 y([DH01])209 b(W.)36
b(Damm)e(and)h(D.)g(Harel.)65 b(LSCs:)36 b(Breathing)g(life)h(in)n(to)f
(message)g(sequence)967 3901 y(c)n(harts.)f Fr(F)-6 b(ormal)28
b(Metho)l(ds)h(in)e(System)h(Design)p Fu(,)f(19\(1\),)g(2001.)523
3997 y([DJS94])185 b(W.)33 b(Damm,)e(B.)i(Josk)n(o,)h(and)e(Rainer)g
(Sc)n(hl\177)-38 b(or.)55 b(Sp)r(eci\014cation)33 b(and)g(v)n
(eri\014cation)967 4088 y(of)e(VHDL-based)e(system-lev)n(el)g(hardw)n
(are)i(designs.)49 b(In)29 b(Egon)i(Borger,)h(editor,)967
4180 y Fr(Sp)l(e)l(ci\014c)l(ation)d(and)f(V)-6 b(alidation)28
b(Metho)l(ds)p Fu(.)f(Oxford)f(Univ)n(ersit)n(y)f(Press,)i(1994.)523
4276 y([dRdBH)799 4244 y Fv(+)849 4276 y Fu(01])43 b(W-P)-6
b(.)26 b(de)h(Ro)r(ev)n(er,)g(F.)g(de)g(Bo)r(er,)h(U.)f(Hannemann,)e
(J.)j(Ho)r(oman,)f(Y.)g(Lakhnec)n(h,)967 4367 y(M.)h(P)n(o)r(el,)g(and)
f(J.)h(Zwiers.)39 b Fr(Concurr)l(ency)31 b(V)-6 b(eri\014c)l(ation:)30
b(Intr)l(o)l(duction)g(to)g(Com-)967 4458 y(p)l(ositional)k(and)h(Nonc)
l(omp)l(ositional)f(Pr)l(o)l(of)g(Metho)l(ds)p Fu(.)57
b(Cam)n(bridge)32 b(Univ)n(ersit)n(y)967 4550 y(Press,)27
b(2001.)523 4646 y([dRLP97])126 b(W-P)-6 b(.)20 b(de)f(Ro)r(ev)n(er,)h
(H.)g(Langmaac)n(k,)g(and)f(A.)h(Pn)n(ueli,)g(editors.)26
b Fr(Comp)l(ositionality:)967 4737 y(The)h(Signi\014c)l(ant)f(Di\013er)
l(enc)l(e)p Fu(,)g(v)n(olume)d(1536)i(of)g Fr(LNCS)p
Fu(.)32 b(Springer-V)-6 b(erlag,)24 b(1997.)523 4833
y([EL87])226 b(E.A.)23 b(Emerson)f(and)f(C.)i(Lei.)29
b(Mo)r(dalities)24 b(for)f(mo)r(del)f(c)n(hec)n(king:)g(Branc)n(hing)h
(time)967 4924 y(logic)e(strik)n(es)e(bac)n(k.)24 b Fr(Scienc)l(e)e(of)
g(Computer)g(Pr)l(o)l(gr)l(amming)p Fu(,)f(8\(3\):275{306,)i(1987.)1922
5173 y Fx(16)p eop
%%Page: 17 17
17 16 bop 523 448 a Fu([Fis96])225 b(K.)29 b(Fisler.)43
b Fr(A)30 b(Uni\014e)l(d)g(Appr)l(o)l(ach)i(to)f(Har)l(dwar)l(e)g(V)-6
b(eri\014c)l(ation)31 b(Thr)l(ough)h(a)e(Het-)967 540
y(er)l(o)l(gene)l(ous)41 b(L)l(o)l(gic)e(of)g(Design)g(Diagr)l(ams)p
Fu(.)70 b(PhD)37 b(thesis,)i(Computer)e(Science)967 631
y(Departmen)n(t,)24 b(Indiana)i(Univ)n(ersit)n(y)-6 b(,)25
b(August)g(1996.)523 722 y([HHK96])150 b(R.H.)29 b(Hardin,)h(Z.)f
(Har'el,)i(and)e(R.P)-6 b(.)30 b(Kurshan.)45 b(COSP)-6
b(AN.)44 b(In)29 b Fr(CA)-8 b(V)p Fu(,)30 b(v)n(olume)967
814 y(1102)d(of)g Fr(LNCS)p Fu(,)f(1996.)523 905 y([Hol97])209
b(G.)25 b(Holzmann.)30 b(The)24 b(SPIN)f(mo)r(del)g(c)n(hec)n(k)n(er.)
31 b Fr(IEEE)26 b(T)-6 b(r)l(ansactions)28 b(on)e(Softwar)l(e)967
996 y(Engine)l(ering)p Fu(,)h(23\(5\),)g(Ma)n(y)f(1997.)523
1088 y([HP94])216 b(G.J.)27 b(Holzmann)e(and)g(D.)g(P)n(eled.)34
b(An)25 b(impro)n(v)n(emen)n(t)e(in)i(formal)h(v)n(eri\014cation.)35
b(In)967 1179 y Fr(F)n(OR)-6 b(TE)p Fu(,)26 b(1994.)523
1270 y([KW01])187 b(J.)18 b(Klose)h(and)e(H.)g(Wittk)n(e.)k(An)c
(automata)g(based)h(in)n(terpretation)f(of)i(liv)n(e)e(sequence)967
1362 y(c)n(harts.)35 b(In)25 b Fr(T)-6 b(A)n(CAS)p Fu(,)26
b(v)n(olume)e(2031)k(of)e Fr(LNCS)p Fu(,)g(2001.)523
1453 y([LL94])230 b(P)-6 b(.B.)32 b(Ladkin)e(and)g(S.)g(Leue.)49
b(What)30 b(do)h(message)g(sequence)f(c)n(harts)h(mean?)48
b(In)967 1544 y Fr(F)-6 b(ormal)28 b(Description)h(T)-6
b(e)l(chniques)p Fu(,)27 b(1994.)523 1636 y([LP85])226
b(O.)38 b(Lic)n(h)n(tenstein)g(and)g(A.)g(Pn)n(ueli.)72
b(Chec)n(king)38 b(that)g(\014nite)g(state)g(concurren)n(t)967
1727 y(programs)26 b(satisfy)h(their)e(linear)i(sp)r(eci\014cations.)36
b(In)25 b Fr(POPL)p Fu(,)h(1985.)523 1818 y([MP87])204
b(Z.)37 b(Manna)h(and)e(A.)h(Pn)n(ueli.)68 b(Sp)r(eci\014cation)38
b(and)e(v)n(eri\014cation)i(of)f(concurren)n(t)967 1910
y(programs)26 b(b)n(y)f(forall-automata.)36 b(In)25 b
Fr(POPL)p Fu(,)h(1987.)523 2001 y([MP00])204 b(A.)30
b(Musc)n(holl)h(and)f(D.)g(P)n(eled.)49 b(Analyzing)30
b(message)h(sequence)f(c)n(harts.)48 b(In)29 b Fr(2nd)967
2092 y(Workshop)g(on)f(SDL)f(and)h(MSC)p Fu(,)e(2000.)523
2183 y([MPS98])161 b(A.)32 b(Musc)n(holl,)i(D.)e(P)n(eled,)h(and)f(Z.)g
(Su.)54 b(Deciding)32 b(prop)r(erties)h(for)g(message)g(se-)967
2275 y(quence)25 b(c)n(harts.)35 b(In)25 b Fr(F)-6 b(oSSaCS)p
Fu(,)27 b(1998.)523 2366 y([MSC96])158 b Fr(ITU-T)27
b(R)l(e)l(c)l(ommendation)i(Z.120,)f(Message)h(Se)l(quenc)l(e)g(Chart)g
(\(MSC\))p Fu(,)d(1996.)523 2457 y([NT00])213 b(K.S.)32
b(Namjoshi)f(and)g(R.J.)h(T)-6 b(re\015er.)52 b(On)31
b(the)g(completeness)g(of)i(comp)r(ositional)967 2549
y(reasoning.)j(In)25 b Fr(CA)-8 b(V)p Fu(,)26 b(v)n(olume)e(1855)k(of)e
Fr(LNCS)p Fu(.)g(Springer-V)-6 b(erlag,)26 b(2000.)523
2640 y([PR99])217 b(M.)34 b(Plath)f(and)g(M.)g(Ry)n(an.)55
b(F)-6 b(eature)33 b(in)n(tegration)h(using)f(a)g(feature)h(construct.)
967 2731 y Fr(Scienc)l(e)29 b(of)e(Computer)i(Pr)l(o)l(gr)l(amming)p
Fu(,)e(41\(1\),)f(1999.)523 2823 y([SHE01])173 b(M.H.)30
b(Smith,)e(G.J.)j(Holzmann,)e(and)g(K.)g(Etessami.)46
b(Ev)n(en)n(ts)29 b(and)g(constrain)n(ts:)967 2914 y(A)g(graphical)i
(editor)f(for)g(capturing)f(logic)i(requiremen)n(ts)d(of)j(programs.)45
b(In)29 b Fr(5th)967 3005 y(International)g(Symp)l(osium)f(on)g(R)l(e)l
(quir)l(ements)h(Engine)l(ering)p Fu(,)e(2001.)1922 5173
y Fx(17)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
